// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/mobile/mobile-fishing.proto

package mobile_fishing

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type StatusCode int32

const (
	StatusCode_status_success                StatusCode = 0
	StatusCode_status_internal_error         StatusCode = 1
	StatusCode_status_param_error            StatusCode = 2
	StatusCode_status_repeat_follow_error    StatusCode = 3
	StatusCode_status_user_like_error        StatusCode = 4
	StatusCode_status_user_collection_error  StatusCode = 5
	StatusCode_status_infomation_saldo_error StatusCode = 6
	StatusCode_status_infomation_pay_error   StatusCode = 7
	StatusCode_status_block_error            StatusCode = 99
)

var StatusCode_name = map[int32]string{
	0:  "status_success",
	1:  "status_internal_error",
	2:  "status_param_error",
	3:  "status_repeat_follow_error",
	4:  "status_user_like_error",
	5:  "status_user_collection_error",
	6:  "status_infomation_saldo_error",
	7:  "status_infomation_pay_error",
	99: "status_block_error",
}

var StatusCode_value = map[string]int32{
	"status_success":                0,
	"status_internal_error":         1,
	"status_param_error":            2,
	"status_repeat_follow_error":    3,
	"status_user_like_error":        4,
	"status_user_collection_error":  5,
	"status_infomation_saldo_error": 6,
	"status_infomation_pay_error":   7,
	"status_block_error":            99,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}

func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{0}
}

type ClientPlatformType int32

const (
	ClientPlatformType_client_wechat_platform ClientPlatformType = 0
)

var ClientPlatformType_name = map[int32]string{
	0: "client_wechat_platform",
}

var ClientPlatformType_value = map[string]int32{
	"client_wechat_platform": 0,
}

func (x ClientPlatformType) String() string {
	return proto.EnumName(ClientPlatformType_name, int32(x))
}

func (ClientPlatformType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{1}
}

type UserStatus int32

const (
	UserStatus_user_status_default UserStatus = 0
	UserStatus_user_status_block   UserStatus = 1
)

var UserStatus_name = map[int32]string{
	0: "user_status_default",
	1: "user_status_block",
}

var UserStatus_value = map[string]int32{
	"user_status_default": 0,
	"user_status_block":   1,
}

func (x UserStatus) String() string {
	return proto.EnumName(UserStatus_name, int32(x))
}

func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{2}
}

type UserType int32

const (
	UserType_user_type_vip   UserType = 0
	UserType_user_type_admin UserType = 1
)

var UserType_name = map[int32]string{
	0: "user_type_vip",
	1: "user_type_admin",
}

var UserType_value = map[string]int32{
	"user_type_vip":   0,
	"user_type_admin": 1,
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}

func (UserType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{3}
}

type BannerType int32

const (
	BannerType_banner_type_infomation BannerType = 0
	BannerType_banner_type_active     BannerType = 1
)

var BannerType_name = map[int32]string{
	0: "banner_type_infomation",
	1: "banner_type_active",
}

var BannerType_value = map[string]int32{
	"banner_type_infomation": 0,
	"banner_type_active":     1,
}

func (x BannerType) String() string {
	return proto.EnumName(BannerType_name, int32(x))
}

func (BannerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{4}
}

//跳转类型 0, 鱼获 1，文章 ，2 主题 ,3，充值，4,webview，5 发布钓点 6，发布鱼饵，7 发布文章，8，我的账户
type BannerViewType int32

const (
	BannerViewType_banner_view_type_infomation   BannerViewType = 0
	BannerViewType_banner_view_type_active       BannerViewType = 1
	BannerViewType_banner_view_type_theme        BannerViewType = 2
	BannerViewType_banner_view_type_recharge     BannerViewType = 3
	BannerViewType_banner_view_type_webview      BannerViewType = 4
	BannerViewType_banner_view_type_pub_location BannerViewType = 5
	BannerViewType_banner_view_type_pub_bait     BannerViewType = 6
	BannerViewType_banner_view_type_pub_active   BannerViewType = 7
	BannerViewType_banner_view_type_me_account   BannerViewType = 8
)

var BannerViewType_name = map[int32]string{
	0: "banner_view_type_infomation",
	1: "banner_view_type_active",
	2: "banner_view_type_theme",
	3: "banner_view_type_recharge",
	4: "banner_view_type_webview",
	5: "banner_view_type_pub_location",
	6: "banner_view_type_pub_bait",
	7: "banner_view_type_pub_active",
	8: "banner_view_type_me_account",
}

var BannerViewType_value = map[string]int32{
	"banner_view_type_infomation":   0,
	"banner_view_type_active":       1,
	"banner_view_type_theme":        2,
	"banner_view_type_recharge":     3,
	"banner_view_type_webview":      4,
	"banner_view_type_pub_location": 5,
	"banner_view_type_pub_bait":     6,
	"banner_view_type_pub_active":   7,
	"banner_view_type_me_account":   8,
}

func (x BannerViewType) String() string {
	return proto.EnumName(BannerViewType_name, int32(x))
}

func (BannerViewType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{5}
}

type InfomationCategoryType int32

const (
	InfomationCategoryType_infomation_type_new    InfomationCategoryType = 0
	InfomationCategoryType_infomation_type_nearby InfomationCategoryType = 1
	InfomationCategoryType_infomation_type_free   InfomationCategoryType = 2
	InfomationCategoryType_infomation_type_charge InfomationCategoryType = 3
	InfomationCategoryType_infomation_type_follow InfomationCategoryType = 4
)

var InfomationCategoryType_name = map[int32]string{
	0: "infomation_type_new",
	1: "infomation_type_nearby",
	2: "infomation_type_free",
	3: "infomation_type_charge",
	4: "infomation_type_follow",
}

var InfomationCategoryType_value = map[string]int32{
	"infomation_type_new":    0,
	"infomation_type_nearby": 1,
	"infomation_type_free":   2,
	"infomation_type_charge": 3,
	"infomation_type_follow": 4,
}

func (x InfomationCategoryType) String() string {
	return proto.EnumName(InfomationCategoryType_name, int32(x))
}

func (InfomationCategoryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{6}
}

type InfomationStatus int32

const (
	InfomationStatus_infomation_status_default       InfomationStatus = 0
	InfomationStatus_infomation_status_author_pass   InfomationStatus = 1
	InfomationStatus_infomation_status_author_reject InfomationStatus = -1
)

var InfomationStatus_name = map[int32]string{
	0:  "infomation_status_default",
	1:  "infomation_status_author_pass",
	-1: "infomation_status_author_reject",
}

var InfomationStatus_value = map[string]int32{
	"infomation_status_default":       0,
	"infomation_status_author_pass":   1,
	"infomation_status_author_reject": -1,
}

func (x InfomationStatus) String() string {
	return proto.EnumName(InfomationStatus_name, int32(x))
}

func (InfomationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{7}
}

type InfomationType int32

const (
	InfomationType_infomation_type_location InfomationType = 0
	InfomationType_infomation_type_bait     InfomationType = 1
)

var InfomationType_name = map[int32]string{
	0: "infomation_type_location",
	1: "infomation_type_bait",
}

var InfomationType_value = map[string]int32{
	"infomation_type_location": 0,
	"infomation_type_bait":     1,
}

func (x InfomationType) String() string {
	return proto.EnumName(InfomationType_name, int32(x))
}

func (InfomationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{8}
}

type PayType int32

const (
	PayType_pay_type_free   PayType = 0
	PayType_pay_type_charge PayType = 1
)

var PayType_name = map[int32]string{
	0: "pay_type_free",
	1: "pay_type_charge",
}

var PayType_value = map[string]int32{
	"pay_type_free":   0,
	"pay_type_charge": 1,
}

func (x PayType) String() string {
	return proto.EnumName(PayType_name, int32(x))
}

func (PayType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{9}
}

type UserLikeType int32

const (
	UserLikeType_user_like_type_infomation UserLikeType = 0
	UserLikeType_user_like_type_active     UserLikeType = 1
)

var UserLikeType_name = map[int32]string{
	0: "user_like_type_infomation",
	1: "user_like_type_active",
}

var UserLikeType_value = map[string]int32{
	"user_like_type_infomation": 0,
	"user_like_type_active":     1,
}

func (x UserLikeType) String() string {
	return proto.EnumName(UserLikeType_name, int32(x))
}

func (UserLikeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{10}
}

type UserColltionType int32

const (
	UserColltionType_user_colltion_type_infomation UserColltionType = 0
	UserColltionType_user_colltion_type_active     UserColltionType = 1
)

var UserColltionType_name = map[int32]string{
	0: "user_colltion_type_infomation",
	1: "user_colltion_type_active",
}

var UserColltionType_value = map[string]int32{
	"user_colltion_type_infomation": 0,
	"user_colltion_type_active":     1,
}

func (x UserColltionType) String() string {
	return proto.EnumName(UserColltionType_name, int32(x))
}

func (UserColltionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{11}
}

type ActicleStatus int32

const (
	ActicleStatus_acticle_status_default       ActicleStatus = 0
	ActicleStatus_acticle_status_author_pass   ActicleStatus = 1
	ActicleStatus_acticle_status_author_reject ActicleStatus = -1
)

var ActicleStatus_name = map[int32]string{
	0:  "acticle_status_default",
	1:  "acticle_status_author_pass",
	-1: "acticle_status_author_reject",
}

var ActicleStatus_value = map[string]int32{
	"acticle_status_default":       0,
	"acticle_status_author_pass":   1,
	"acticle_status_author_reject": -1,
}

func (x ActicleStatus) String() string {
	return proto.EnumName(ActicleStatus_name, int32(x))
}

func (ActicleStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{12}
}

type CommentType int32

const (
	CommentType_comment_type_infomation CommentType = 0
	CommentType_comment_type_article    CommentType = 1
)

var CommentType_name = map[int32]string{
	0: "comment_type_infomation",
	1: "comment_type_article",
}

var CommentType_value = map[string]int32{
	"comment_type_infomation": 0,
	"comment_type_article":    1,
}

func (x CommentType) String() string {
	return proto.EnumName(CommentType_name, int32(x))
}

func (CommentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{13}
}

type CommentStatus int32

const (
	CommentStatus_comment_status_default       CommentStatus = 0
	CommentStatus_comment_status_author_pass   CommentStatus = 1
	CommentStatus_comment_status_author_reject CommentStatus = -1
)

var CommentStatus_name = map[int32]string{
	0:  "comment_status_default",
	1:  "comment_status_author_pass",
	-1: "comment_status_author_reject",
}

var CommentStatus_value = map[string]int32{
	"comment_status_default":       0,
	"comment_status_author_pass":   1,
	"comment_status_author_reject": -1,
}

func (x CommentStatus) String() string {
	return proto.EnumName(CommentStatus_name, int32(x))
}

func (CommentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{14}
}

type UserCommentLikeType int32

const (
	UserCommentLikeType_User_comment_like_type_infomation UserCommentLikeType = 0
	UserCommentLikeType_User_comment_like_type_article    UserCommentLikeType = 1
)

var UserCommentLikeType_name = map[int32]string{
	0: "User_comment_like_type_infomation",
	1: "User_comment_like_type_article",
}

var UserCommentLikeType_value = map[string]int32{
	"User_comment_like_type_infomation": 0,
	"User_comment_like_type_article":    1,
}

func (x UserCommentLikeType) String() string {
	return proto.EnumName(UserCommentLikeType_name, int32(x))
}

func (UserCommentLikeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{15}
}

type MessageReadStatus int32

const (
	MessageReadStatus_message_un_read_status MessageReadStatus = 0
	MessageReadStatus_message_read_status    MessageReadStatus = 1
)

var MessageReadStatus_name = map[int32]string{
	0: "message_un_read_status",
	1: "message_read_status",
}

var MessageReadStatus_value = map[string]int32{
	"message_un_read_status": 0,
	"message_read_status":    1,
}

func (x MessageReadStatus) String() string {
	return proto.EnumName(MessageReadStatus_name, int32(x))
}

func (MessageReadStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{16}
}

type FishingOrderPayType int32

const (
	FishingOrderPayType_fishing_order_pay_type_coin  FishingOrderPayType = 0
	FishingOrderPayType_fishing_order_pay_type_point FishingOrderPayType = 1
)

var FishingOrderPayType_name = map[int32]string{
	0: "fishing_order_pay_type_coin",
	1: "fishing_order_pay_type_point",
}

var FishingOrderPayType_value = map[string]int32{
	"fishing_order_pay_type_coin":  0,
	"fishing_order_pay_type_point": 1,
}

func (x FishingOrderPayType) String() string {
	return proto.EnumName(FishingOrderPayType_name, int32(x))
}

func (FishingOrderPayType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{17}
}

type FishingGoodsType int32

const (
	FishingGoodsType_fishing_goods_type_infomotion  FishingGoodsType = 0
	FishingGoodsType_fishing_order_pay_type_article FishingGoodsType = 1
)

var FishingGoodsType_name = map[int32]string{
	0: "fishing_goods_type_infomotion",
	1: "fishing_order_pay_type_article",
}

var FishingGoodsType_value = map[string]int32{
	"fishing_goods_type_infomotion":  0,
	"fishing_order_pay_type_article": 1,
}

func (x FishingGoodsType) String() string {
	return proto.EnumName(FishingGoodsType_name, int32(x))
}

func (FishingGoodsType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{18}
}

type Status struct {
	Code                 StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=fishing_user.StatusCode" json:"code"`
	Msg                  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{0}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return m.Size()
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

// The request message containing the user's name.
type RefreshTokenRequest struct {
	UserId               int64    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshTokenRequest) Reset()         { *m = RefreshTokenRequest{} }
func (m *RefreshTokenRequest) String() string { return proto.CompactTextString(m) }
func (*RefreshTokenRequest) ProtoMessage()    {}
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{1}
}
func (m *RefreshTokenRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RefreshTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RefreshTokenRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RefreshTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshTokenRequest.Merge(m, src)
}
func (m *RefreshTokenRequest) XXX_Size() int {
	return m.Size()
}
func (m *RefreshTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshTokenRequest proto.InternalMessageInfo

// The response message containing the greetings
type RefreshTokenResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshTokenResponse) Reset()         { *m = RefreshTokenResponse{} }
func (m *RefreshTokenResponse) String() string { return proto.CompactTextString(m) }
func (*RefreshTokenResponse) ProtoMessage()    {}
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{2}
}
func (m *RefreshTokenResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RefreshTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RefreshTokenResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RefreshTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshTokenResponse.Merge(m, src)
}
func (m *RefreshTokenResponse) XXX_Size() int {
	return m.Size()
}
func (m *RefreshTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshTokenResponse proto.InternalMessageInfo

type WechatLoginRequest struct {
	Jscode               string   `protobuf:"bytes,1,opt,name=jscode,proto3" json:"jscode,omitempty"`
	EncryptedData        string   `protobuf:"bytes,2,opt,name=encrypted_data,json=encryptedData,proto3" json:"encrypted_data,omitempty"`
	Iv                   string   `protobuf:"bytes,3,opt,name=iv,proto3" json:"iv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WechatLoginRequest) Reset()         { *m = WechatLoginRequest{} }
func (m *WechatLoginRequest) String() string { return proto.CompactTextString(m) }
func (*WechatLoginRequest) ProtoMessage()    {}
func (*WechatLoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{3}
}
func (m *WechatLoginRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WechatLoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WechatLoginRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WechatLoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WechatLoginRequest.Merge(m, src)
}
func (m *WechatLoginRequest) XXX_Size() int {
	return m.Size()
}
func (m *WechatLoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WechatLoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WechatLoginRequest proto.InternalMessageInfo

type WechatLoginResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Jwt                  string   `protobuf:"bytes,2,opt,name=jwt,proto3" json:"jwt,omitempty"`
	Info                 *User    `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WechatLoginResponse) Reset()         { *m = WechatLoginResponse{} }
func (m *WechatLoginResponse) String() string { return proto.CompactTextString(m) }
func (*WechatLoginResponse) ProtoMessage()    {}
func (*WechatLoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{4}
}
func (m *WechatLoginResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WechatLoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WechatLoginResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WechatLoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WechatLoginResponse.Merge(m, src)
}
func (m *WechatLoginResponse) XXX_Size() int {
	return m.Size()
}
func (m *WechatLoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WechatLoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WechatLoginResponse proto.InternalMessageInfo

type GetUserRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{5}
}
func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(m, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

type GetUserExtendRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserExtendRequest) Reset()         { *m = GetUserExtendRequest{} }
func (m *GetUserExtendRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserExtendRequest) ProtoMessage()    {}
func (*GetUserExtendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{6}
}
func (m *GetUserExtendRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUserExtendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUserExtendRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetUserExtendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserExtendRequest.Merge(m, src)
}
func (m *GetUserExtendRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetUserExtendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserExtendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserExtendRequest proto.InternalMessageInfo

type UserExtend struct {
	FollowCount          int64    `protobuf:"varint,1,opt,name=follow_count,json=followCount,proto3" json:"follow_count"`
	FansCount            int64    `protobuf:"varint,2,opt,name=fans_count,json=fansCount,proto3" json:"fans_count"`
	InviteCount          int64    `protobuf:"varint,6,opt,name=invite_count,json=inviteCount,proto3" json:"invite_count"`
	UnReadCount          int64    `protobuf:"varint,3,opt,name=un_read_count,json=unReadCount,proto3" json:"un_read_count"`
	InfomationCount      int64    `protobuf:"varint,4,opt,name=infomation_count,json=infomationCount,proto3" json:"infomation_count"`
	ArticleCount         int64    `protobuf:"varint,5,opt,name=article_count,json=articleCount,proto3" json:"article_count"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserExtend) Reset()         { *m = UserExtend{} }
func (m *UserExtend) String() string { return proto.CompactTextString(m) }
func (*UserExtend) ProtoMessage()    {}
func (*UserExtend) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{7}
}
func (m *UserExtend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserExtend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserExtend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserExtend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserExtend.Merge(m, src)
}
func (m *UserExtend) XXX_Size() int {
	return m.Size()
}
func (m *UserExtend) XXX_DiscardUnknown() {
	xxx_messageInfo_UserExtend.DiscardUnknown(m)
}

var xxx_messageInfo_UserExtend proto.InternalMessageInfo

type GetUserExtendResponse struct {
	Status               *Status     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info                 *UserExtend `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetUserExtendResponse) Reset()         { *m = GetUserExtendResponse{} }
func (m *GetUserExtendResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserExtendResponse) ProtoMessage()    {}
func (*GetUserExtendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{8}
}
func (m *GetUserExtendResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUserExtendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUserExtendResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetUserExtendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserExtendResponse.Merge(m, src)
}
func (m *GetUserExtendResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetUserExtendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserExtendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserExtendResponse proto.InternalMessageInfo

type User struct {
	UserId               int64       `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Avatar               string      `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Mobile               string      `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile"`
	NickName             string      `protobuf:"bytes,4,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	RegisterTime         int64       `protobuf:"varint,5,opt,name=register_time,json=registerTime,proto3" json:"register_time,omitempty"`
	UserType             UserType    `protobuf:"varint,6,opt,name=user_type,json=userType,proto3,enum=fishing_user.UserType" json:"user_type"`
	PointAmount          int64       `protobuf:"varint,7,opt,name=point_amount,json=pointAmount,proto3" json:"point_amount"`
	CoinAmount           int64       `protobuf:"varint,8,opt,name=coin_amount,json=coinAmount,proto3" json:"coin_amount"`
	Motto                string      `protobuf:"bytes,9,opt,name=motto,proto3" json:"motto,omitempty"`
	UserExtend           *UserExtend `protobuf:"bytes,10,opt,name=user_extend,json=userExtend,proto3" json:"user_extend,omitempty"`
	CoinTotal            int64       `protobuf:"varint,11,opt,name=coin_total,json=coinTotal,proto3" json:"coin_total"`
	CoinPayTotal         int64       `protobuf:"varint,12,opt,name=coin_pay_total,json=coinPayTotal,proto3" json:"coin_pay_total"`
	CoinRefillTotal      int64       `protobuf:"varint,13,opt,name=coin_refill_total,json=coinRefillTotal,proto3" json:"coin_refill_total"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{9}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_User.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return m.Size()
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

type GetUserResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info                 *User    `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserResponse) Reset()         { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()    {}
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{10}
}
func (m *GetUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserResponse.Merge(m, src)
}
func (m *GetUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserResponse proto.InternalMessageInfo

type ListBannersRequest struct {
	BannerType           BannerType `protobuf:"varint,2,opt,name=banner_type,json=bannerType,proto3,enum=fishing_user.BannerType" json:"banner_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListBannersRequest) Reset()         { *m = ListBannersRequest{} }
func (m *ListBannersRequest) String() string { return proto.CompactTextString(m) }
func (*ListBannersRequest) ProtoMessage()    {}
func (*ListBannersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{11}
}
func (m *ListBannersRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListBannersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListBannersRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListBannersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBannersRequest.Merge(m, src)
}
func (m *ListBannersRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListBannersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBannersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBannersRequest proto.InternalMessageInfo

type Banner struct {
	ImageUrl             string         `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	ViewType             BannerViewType `protobuf:"varint,2,opt,name=view_type,json=viewType,proto3,enum=fishing_user.BannerViewType" json:"view_type"`
	ExternalId           int64          `protobuf:"varint,3,opt,name=external_id,json=externalId,proto3" json:"external_id"`
	Title                string         `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	LinkUrl              string         `protobuf:"bytes,5,opt,name=link_url,json=linkUrl,proto3" json:"link_url"`
	ThemeId              int64          `protobuf:"varint,6,opt,name=theme_id,json=themeId,proto3" json:"theme_id"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Banner) Reset()         { *m = Banner{} }
func (m *Banner) String() string { return proto.CompactTextString(m) }
func (*Banner) ProtoMessage()    {}
func (*Banner) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{12}
}
func (m *Banner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Banner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Banner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Banner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Banner.Merge(m, src)
}
func (m *Banner) XXX_Size() int {
	return m.Size()
}
func (m *Banner) XXX_DiscardUnknown() {
	xxx_messageInfo_Banner.DiscardUnknown(m)
}

var xxx_messageInfo_Banner proto.InternalMessageInfo

type ListBannersResponse struct {
	Status               *Status   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*Banner `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListBannersResponse) Reset()         { *m = ListBannersResponse{} }
func (m *ListBannersResponse) String() string { return proto.CompactTextString(m) }
func (*ListBannersResponse) ProtoMessage()    {}
func (*ListBannersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{13}
}
func (m *ListBannersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListBannersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListBannersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListBannersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBannersResponse.Merge(m, src)
}
func (m *ListBannersResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListBannersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBannersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBannersResponse proto.InternalMessageInfo

type UserFollowRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FollowUserId         int64    `protobuf:"varint,2,opt,name=follow_user_id,json=followUserId,proto3" json:"follow_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserFollowRequest) Reset()         { *m = UserFollowRequest{} }
func (m *UserFollowRequest) String() string { return proto.CompactTextString(m) }
func (*UserFollowRequest) ProtoMessage()    {}
func (*UserFollowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{14}
}
func (m *UserFollowRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserFollowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserFollowRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserFollowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFollowRequest.Merge(m, src)
}
func (m *UserFollowRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserFollowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFollowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserFollowRequest proto.InternalMessageInfo

type CancelUserFollowRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FollowUserId         int64    `protobuf:"varint,2,opt,name=follow_user_id,json=followUserId,proto3" json:"follow_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelUserFollowRequest) Reset()         { *m = CancelUserFollowRequest{} }
func (m *CancelUserFollowRequest) String() string { return proto.CompactTextString(m) }
func (*CancelUserFollowRequest) ProtoMessage()    {}
func (*CancelUserFollowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{15}
}
func (m *CancelUserFollowRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CancelUserFollowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CancelUserFollowRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CancelUserFollowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelUserFollowRequest.Merge(m, src)
}
func (m *CancelUserFollowRequest) XXX_Size() int {
	return m.Size()
}
func (m *CancelUserFollowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelUserFollowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelUserFollowRequest proto.InternalMessageInfo

type CancelUserFollowResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelUserFollowResponse) Reset()         { *m = CancelUserFollowResponse{} }
func (m *CancelUserFollowResponse) String() string { return proto.CompactTextString(m) }
func (*CancelUserFollowResponse) ProtoMessage()    {}
func (*CancelUserFollowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{16}
}
func (m *CancelUserFollowResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CancelUserFollowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CancelUserFollowResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CancelUserFollowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelUserFollowResponse.Merge(m, src)
}
func (m *CancelUserFollowResponse) XXX_Size() int {
	return m.Size()
}
func (m *CancelUserFollowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelUserFollowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelUserFollowResponse proto.InternalMessageInfo

type UserFollowResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserFollowResponse) Reset()         { *m = UserFollowResponse{} }
func (m *UserFollowResponse) String() string { return proto.CompactTextString(m) }
func (*UserFollowResponse) ProtoMessage()    {}
func (*UserFollowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{17}
}
func (m *UserFollowResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserFollowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserFollowResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserFollowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserFollowResponse.Merge(m, src)
}
func (m *UserFollowResponse) XXX_Size() int {
	return m.Size()
}
func (m *UserFollowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserFollowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserFollowResponse proto.InternalMessageInfo

type ListUserFollowsRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUserFollowsRequest) Reset()         { *m = ListUserFollowsRequest{} }
func (m *ListUserFollowsRequest) String() string { return proto.CompactTextString(m) }
func (*ListUserFollowsRequest) ProtoMessage()    {}
func (*ListUserFollowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{18}
}
func (m *ListUserFollowsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListUserFollowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListUserFollowsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListUserFollowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserFollowsRequest.Merge(m, src)
}
func (m *ListUserFollowsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListUserFollowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserFollowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserFollowsRequest proto.InternalMessageInfo

type ListUserFollowsResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*User  `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUserFollowsResponse) Reset()         { *m = ListUserFollowsResponse{} }
func (m *ListUserFollowsResponse) String() string { return proto.CompactTextString(m) }
func (*ListUserFollowsResponse) ProtoMessage()    {}
func (*ListUserFollowsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{19}
}
func (m *ListUserFollowsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListUserFollowsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListUserFollowsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListUserFollowsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserFollowsResponse.Merge(m, src)
}
func (m *ListUserFollowsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListUserFollowsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserFollowsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserFollowsResponse proto.InternalMessageInfo

type UserCollectionRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActiveId             int64    `protobuf:"varint,2,opt,name=active_id,json=activeId,proto3" json:"active_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCollectionRequest) Reset()         { *m = UserCollectionRequest{} }
func (m *UserCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*UserCollectionRequest) ProtoMessage()    {}
func (*UserCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{20}
}
func (m *UserCollectionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserCollectionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCollectionRequest.Merge(m, src)
}
func (m *UserCollectionRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserCollectionRequest proto.InternalMessageInfo

type UserCollectionResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCollectionResponse) Reset()         { *m = UserCollectionResponse{} }
func (m *UserCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*UserCollectionResponse) ProtoMessage()    {}
func (*UserCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{21}
}
func (m *UserCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCollectionResponse.Merge(m, src)
}
func (m *UserCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *UserCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserCollectionResponse proto.InternalMessageInfo

type GetInfomationConfigRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfomationConfigRequest) Reset()         { *m = GetInfomationConfigRequest{} }
func (m *GetInfomationConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfomationConfigRequest) ProtoMessage()    {}
func (*GetInfomationConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{22}
}
func (m *GetInfomationConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetInfomationConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetInfomationConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetInfomationConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfomationConfigRequest.Merge(m, src)
}
func (m *GetInfomationConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetInfomationConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfomationConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfomationConfigRequest proto.InternalMessageInfo

type InfomationCategory struct {
	InfomationCategoryType InfomationCategoryType `protobuf:"varint,1,opt,name=infomation_category_type,json=infomationCategoryType,proto3,enum=fishing_user.InfomationCategoryType" json:"infomation_category_type"`
	Name                   string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-"`
	XXX_unrecognized       []byte                 `json:"-"`
	XXX_sizecache          int32                  `json:"-"`
}

func (m *InfomationCategory) Reset()         { *m = InfomationCategory{} }
func (m *InfomationCategory) String() string { return proto.CompactTextString(m) }
func (*InfomationCategory) ProtoMessage()    {}
func (*InfomationCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{23}
}
func (m *InfomationCategory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InfomationCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InfomationCategory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InfomationCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfomationCategory.Merge(m, src)
}
func (m *InfomationCategory) XXX_Size() int {
	return m.Size()
}
func (m *InfomationCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_InfomationCategory.DiscardUnknown(m)
}

var xxx_messageInfo_InfomationCategory proto.InternalMessageInfo

type GetInfomationConfigResponse struct {
	Status                 *Status               `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ListBanners            []*Banner             `protobuf:"bytes,2,rep,name=list_banners,json=listBanners,proto3" json:"list_banners,omitempty"`
	ListInfomationCategory []*InfomationCategory `protobuf:"bytes,3,rep,name=list_infomation_category,json=listInfomationCategory,proto3" json:"list_infomation_category,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *GetInfomationConfigResponse) Reset()         { *m = GetInfomationConfigResponse{} }
func (m *GetInfomationConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfomationConfigResponse) ProtoMessage()    {}
func (*GetInfomationConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{24}
}
func (m *GetInfomationConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetInfomationConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetInfomationConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetInfomationConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfomationConfigResponse.Merge(m, src)
}
func (m *GetInfomationConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetInfomationConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfomationConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfomationConfigResponse proto.InternalMessageInfo

type ListInfomationsRequest struct {
	InfomationCategoryType InfomationCategoryType `protobuf:"varint,1,opt,name=infomation_category_type,json=infomationCategoryType,proto3,enum=fishing_user.InfomationCategoryType" json:"infomation_category_type,omitempty"`
	Page                   int64                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize               int64                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Province               string                 `protobuf:"bytes,4,opt,name=province,proto3" json:"province,omitempty"`
	City                   string                 `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	UserId                 int64                  `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Latitude               float64                `protobuf:"fixed64,7,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude              float64                `protobuf:"fixed64,8,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-"`
	XXX_unrecognized       []byte                 `json:"-"`
	XXX_sizecache          int32                  `json:"-"`
}

func (m *ListInfomationsRequest) Reset()         { *m = ListInfomationsRequest{} }
func (m *ListInfomationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListInfomationsRequest) ProtoMessage()    {}
func (*ListInfomationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{25}
}
func (m *ListInfomationsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListInfomationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListInfomationsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListInfomationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInfomationsRequest.Merge(m, src)
}
func (m *ListInfomationsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListInfomationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInfomationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListInfomationsRequest proto.InternalMessageInfo

type ListUserInfomationsRequest struct {
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UserId               int64    `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Latitude             float64  `protobuf:"fixed64,7,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,8,opt,name=longitude,proto3" json:"longitude,omitempty"`
	ReleaseUserId        int64    `protobuf:"varint,9,opt,name=release_user_id,json=releaseUserId,proto3" json:"release_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUserInfomationsRequest) Reset()         { *m = ListUserInfomationsRequest{} }
func (m *ListUserInfomationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListUserInfomationsRequest) ProtoMessage()    {}
func (*ListUserInfomationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{26}
}
func (m *ListUserInfomationsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListUserInfomationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListUserInfomationsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListUserInfomationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserInfomationsRequest.Merge(m, src)
}
func (m *ListUserInfomationsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListUserInfomationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserInfomationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserInfomationsRequest proto.InternalMessageInfo

type ListUserInfomationsResponse struct {
	Status               *Status       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*Infomation `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListUserInfomationsResponse) Reset()         { *m = ListUserInfomationsResponse{} }
func (m *ListUserInfomationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListUserInfomationsResponse) ProtoMessage()    {}
func (*ListUserInfomationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{27}
}
func (m *ListUserInfomationsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListUserInfomationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListUserInfomationsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListUserInfomationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserInfomationsResponse.Merge(m, src)
}
func (m *ListUserInfomationsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListUserInfomationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserInfomationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserInfomationsResponse proto.InternalMessageInfo

type Infomation struct {
	InfomationId           int64                  `protobuf:"varint,1,opt,name=infomation_id,json=infomationId,proto3" json:"infomation_id,omitempty"`
	InfomationType         InfomationType         `protobuf:"varint,3,opt,name=infomation_type,json=infomationType,proto3,enum=fishing_user.InfomationType" json:"infomation_type"`
	UserId                 int64                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Country                string                 `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	City                   string                 `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	District               string                 `protobuf:"bytes,7,opt,name=district,proto3" json:"district,omitempty"`
	Content                string                 `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	Park                   string                 `protobuf:"bytes,9,opt,name=park,proto3" json:"park,omitempty"`
	CreateTime             int64                  `protobuf:"varint,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	PayType                PayType                `protobuf:"varint,11,opt,name=pay_type,json=payType,proto3,enum=fishing_user.PayType" json:"pay_type"`
	Price                  int64                  `protobuf:"varint,12,opt,name=price,proto3" json:"price"`
	ListTags               []string               `protobuf:"bytes,13,rep,name=list_tags,json=listTags,proto3" json:"list_tags,omitempty"`
	ListInfomationImages   []string               `protobuf:"bytes,14,rep,name=list_infomation_images,json=listInfomationImages,proto3" json:"list_infomation_images,omitempty"`
	ListEnvImages          []string               `protobuf:"bytes,15,rep,name=list_env_images,json=listEnvImages,proto3" json:"list_env_images,omitempty"`
	Avatar                 string                 `protobuf:"bytes,16,opt,name=avatar,proto3" json:"avatar,omitempty"`
	NickName               string                 `protobuf:"bytes,17,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	LikeCount              int64                  `protobuf:"varint,18,opt,name=like_count,json=likeCount,proto3" json:"like_count"`
	CommentCount           int64                  `protobuf:"varint,19,opt,name=comment_count,json=commentCount,proto3" json:"comment_count"`
	CollectCount           int64                  `protobuf:"varint,20,opt,name=collect_count,json=collectCount,proto3" json:"collect_count"`
	ReadCount              int64                  `protobuf:"varint,21,opt,name=read_count,json=readCount,proto3" json:"read_count"`
	Distance               float64                `protobuf:"fixed64,22,opt,name=distance,proto3" json:"distance"`
	InfomationCategoryType InfomationCategoryType `protobuf:"varint,23,opt,name=infomation_category_type,json=infomationCategoryType,proto3,enum=fishing_user.InfomationCategoryType" json:"infomation_category_type"`
	InfomationImageCount   int64                  `protobuf:"varint,24,opt,name=infomation_image_count,json=infomationImageCount,proto3" json:"infomation_image_count"`
	IfLike                 bool                   `protobuf:"varint,25,opt,name=if_like,json=ifLike,proto3" json:"if_like"`
	IfCollection           bool                   `protobuf:"varint,26,opt,name=if_collection,json=ifCollection,proto3" json:"if_collection"`
	Latitude               float64                `protobuf:"fixed64,27,opt,name=latitude,proto3" json:"latitude"`
	Longitude              float64                `protobuf:"fixed64,28,opt,name=longitude,proto3" json:"longitude"`
	EnvImageCount          int64                  `protobuf:"varint,29,opt,name=env_image_count,json=envImageCount,proto3" json:"env_image_count"`
	IfBuy                  bool                   `protobuf:"varint,30,opt,name=if_buy,json=ifBuy,proto3" json:"if_buy"`
	IsFollow               bool                   `protobuf:"varint,31,opt,name=is_follow,json=isFollow,proto3" json:"is_follow"`
	ListBaits              []*Bait                `protobuf:"bytes,32,rep,name=list_baits,json=listBaits,proto3" json:"list_baits"`
	BaitImageCount         int64                  `protobuf:"varint,33,opt,name=bait_image_count,json=baitImageCount,proto3" json:"bait_image_count"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-"`
	XXX_unrecognized       []byte                 `json:"-"`
	XXX_sizecache          int32                  `json:"-"`
}

func (m *Infomation) Reset()         { *m = Infomation{} }
func (m *Infomation) String() string { return proto.CompactTextString(m) }
func (*Infomation) ProtoMessage()    {}
func (*Infomation) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{28}
}
func (m *Infomation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Infomation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Infomation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Infomation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Infomation.Merge(m, src)
}
func (m *Infomation) XXX_Size() int {
	return m.Size()
}
func (m *Infomation) XXX_DiscardUnknown() {
	xxx_messageInfo_Infomation.DiscardUnknown(m)
}

var xxx_messageInfo_Infomation proto.InternalMessageInfo

type Bait struct {
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	BaitName             string   `protobuf:"bytes,2,opt,name=bait_name,json=baitName,proto3" json:"bait_name,omitempty"`
	BaitPercent          int64    `protobuf:"varint,3,opt,name=bait_percent,json=baitPercent,proto3" json:"bait_percent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bait) Reset()         { *m = Bait{} }
func (m *Bait) String() string { return proto.CompactTextString(m) }
func (*Bait) ProtoMessage()    {}
func (*Bait) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{29}
}
func (m *Bait) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Bait) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Bait.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Bait) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bait.Merge(m, src)
}
func (m *Bait) XXX_Size() int {
	return m.Size()
}
func (m *Bait) XXX_DiscardUnknown() {
	xxx_messageInfo_Bait.DiscardUnknown(m)
}

var xxx_messageInfo_Bait proto.InternalMessageInfo

type ListInfomationsResponse struct {
	Status               *Status       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*Infomation `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListInfomationsResponse) Reset()         { *m = ListInfomationsResponse{} }
func (m *ListInfomationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListInfomationsResponse) ProtoMessage()    {}
func (*ListInfomationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{30}
}
func (m *ListInfomationsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListInfomationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListInfomationsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListInfomationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInfomationsResponse.Merge(m, src)
}
func (m *ListInfomationsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListInfomationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInfomationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListInfomationsResponse proto.InternalMessageInfo

type GetInfomationRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InfomationId         int64    `protobuf:"varint,2,opt,name=infomation_id,json=infomationId,proto3" json:"infomation_id,omitempty"`
	Latitude             float64  `protobuf:"fixed64,27,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,28,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfomationRequest) Reset()         { *m = GetInfomationRequest{} }
func (m *GetInfomationRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfomationRequest) ProtoMessage()    {}
func (*GetInfomationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{31}
}
func (m *GetInfomationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetInfomationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetInfomationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetInfomationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfomationRequest.Merge(m, src)
}
func (m *GetInfomationRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetInfomationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfomationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfomationRequest proto.InternalMessageInfo

type GetInfomationResponse struct {
	Status               *Status     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info                 *Infomation `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetInfomationResponse) Reset()         { *m = GetInfomationResponse{} }
func (m *GetInfomationResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfomationResponse) ProtoMessage()    {}
func (*GetInfomationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{32}
}
func (m *GetInfomationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetInfomationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetInfomationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetInfomationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfomationResponse.Merge(m, src)
}
func (m *GetInfomationResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetInfomationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfomationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfomationResponse proto.InternalMessageInfo

type UserInfomationLikeRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LikeId               int64    `protobuf:"varint,2,opt,name=like_id,json=likeId,proto3" json:"like_id,omitempty"`
	IfLike               bool     `protobuf:"varint,4,opt,name=if_like,json=ifLike,proto3" json:"if_like,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfomationLikeRequest) Reset()         { *m = UserInfomationLikeRequest{} }
func (m *UserInfomationLikeRequest) String() string { return proto.CompactTextString(m) }
func (*UserInfomationLikeRequest) ProtoMessage()    {}
func (*UserInfomationLikeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{33}
}
func (m *UserInfomationLikeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfomationLikeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfomationLikeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfomationLikeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfomationLikeRequest.Merge(m, src)
}
func (m *UserInfomationLikeRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserInfomationLikeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfomationLikeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfomationLikeRequest proto.InternalMessageInfo

type UserInfomationLikeResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfomationLikeResponse) Reset()         { *m = UserInfomationLikeResponse{} }
func (m *UserInfomationLikeResponse) String() string { return proto.CompactTextString(m) }
func (*UserInfomationLikeResponse) ProtoMessage()    {}
func (*UserInfomationLikeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{34}
}
func (m *UserInfomationLikeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfomationLikeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfomationLikeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfomationLikeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfomationLikeResponse.Merge(m, src)
}
func (m *UserInfomationLikeResponse) XXX_Size() int {
	return m.Size()
}
func (m *UserInfomationLikeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfomationLikeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfomationLikeResponse proto.InternalMessageInfo

type UserInfomationCollectionRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CollectionId         int64    `protobuf:"varint,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	IfCollection         bool     `protobuf:"varint,4,opt,name=if_collection,json=ifCollection,proto3" json:"if_collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfomationCollectionRequest) Reset()         { *m = UserInfomationCollectionRequest{} }
func (m *UserInfomationCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*UserInfomationCollectionRequest) ProtoMessage()    {}
func (*UserInfomationCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{35}
}
func (m *UserInfomationCollectionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfomationCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfomationCollectionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfomationCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfomationCollectionRequest.Merge(m, src)
}
func (m *UserInfomationCollectionRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserInfomationCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfomationCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfomationCollectionRequest proto.InternalMessageInfo

type UserInfomationCollectionResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfomationCollectionResponse) Reset()         { *m = UserInfomationCollectionResponse{} }
func (m *UserInfomationCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*UserInfomationCollectionResponse) ProtoMessage()    {}
func (*UserInfomationCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{36}
}
func (m *UserInfomationCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfomationCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfomationCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfomationCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfomationCollectionResponse.Merge(m, src)
}
func (m *UserInfomationCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *UserInfomationCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfomationCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfomationCollectionResponse proto.InternalMessageInfo

type ListActicleCategorysRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListActicleCategorysRequest) Reset()         { *m = ListActicleCategorysRequest{} }
func (m *ListActicleCategorysRequest) String() string { return proto.CompactTextString(m) }
func (*ListActicleCategorysRequest) ProtoMessage()    {}
func (*ListActicleCategorysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{37}
}
func (m *ListActicleCategorysRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListActicleCategorysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListActicleCategorysRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListActicleCategorysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActicleCategorysRequest.Merge(m, src)
}
func (m *ListActicleCategorysRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListActicleCategorysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActicleCategorysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListActicleCategorysRequest proto.InternalMessageInfo

type ActicleCategory struct {
	CategoryId           int64    `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActicleCategory) Reset()         { *m = ActicleCategory{} }
func (m *ActicleCategory) String() string { return proto.CompactTextString(m) }
func (*ActicleCategory) ProtoMessage()    {}
func (*ActicleCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{38}
}
func (m *ActicleCategory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ActicleCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ActicleCategory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ActicleCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActicleCategory.Merge(m, src)
}
func (m *ActicleCategory) XXX_Size() int {
	return m.Size()
}
func (m *ActicleCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_ActicleCategory.DiscardUnknown(m)
}

var xxx_messageInfo_ActicleCategory proto.InternalMessageInfo

type ListActicleCategorysResponse struct {
	Status               *Status            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*ActicleCategory `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListActicleCategorysResponse) Reset()         { *m = ListActicleCategorysResponse{} }
func (m *ListActicleCategorysResponse) String() string { return proto.CompactTextString(m) }
func (*ListActicleCategorysResponse) ProtoMessage()    {}
func (*ListActicleCategorysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{39}
}
func (m *ListActicleCategorysResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListActicleCategorysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListActicleCategorysResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListActicleCategorysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActicleCategorysResponse.Merge(m, src)
}
func (m *ListActicleCategorysResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListActicleCategorysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActicleCategorysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListActicleCategorysResponse proto.InternalMessageInfo

type GetActicleConfigRequest struct {
	CategoryId           int64    `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetActicleConfigRequest) Reset()         { *m = GetActicleConfigRequest{} }
func (m *GetActicleConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetActicleConfigRequest) ProtoMessage()    {}
func (*GetActicleConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{40}
}
func (m *GetActicleConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetActicleConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetActicleConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetActicleConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActicleConfigRequest.Merge(m, src)
}
func (m *GetActicleConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetActicleConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActicleConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetActicleConfigRequest proto.InternalMessageInfo

type ArticleTheme struct {
	ThemeId              int64    `protobuf:"varint,1,opt,name=theme_id,json=themeId,proto3" json:"theme_id,omitempty"`
	CategoryId           int64    `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	TagId                int64    `protobuf:"varint,3,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Title                string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Desc                 string   `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	BannerlUrl           string   `protobuf:"bytes,6,opt,name=bannerl_url,json=bannerlUrl,proto3" json:"bannerl_url,omitempty"`
	UsedCount            int64    `protobuf:"varint,7,opt,name=used_count,json=usedCount,proto3" json:"used_count"`
	ViewCount            int64    `protobuf:"varint,8,opt,name=view_count,json=viewCount,proto3" json:"view_count"`
	CreateTime           int64    `protobuf:"varint,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	TagName              string   `protobuf:"bytes,10,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	ImageUrl             string   `protobuf:"bytes,11,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleTheme) Reset()         { *m = ArticleTheme{} }
func (m *ArticleTheme) String() string { return proto.CompactTextString(m) }
func (*ArticleTheme) ProtoMessage()    {}
func (*ArticleTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{41}
}
func (m *ArticleTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArticleTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArticleTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArticleTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleTheme.Merge(m, src)
}
func (m *ArticleTheme) XXX_Size() int {
	return m.Size()
}
func (m *ArticleTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleTheme.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleTheme proto.InternalMessageInfo

type GetActicleConfigResponse struct {
	Status               *Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ListBanners          []*Banner       `protobuf:"bytes,2,rep,name=list_banners,json=listBanners,proto3" json:"list_banners,omitempty"`
	ListThemes           []*ArticleTheme `protobuf:"bytes,3,rep,name=list_themes,json=listThemes,proto3" json:"list_themes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetActicleConfigResponse) Reset()         { *m = GetActicleConfigResponse{} }
func (m *GetActicleConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetActicleConfigResponse) ProtoMessage()    {}
func (*GetActicleConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{42}
}
func (m *GetActicleConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetActicleConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetActicleConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetActicleConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActicleConfigResponse.Merge(m, src)
}
func (m *GetActicleConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetActicleConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActicleConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetActicleConfigResponse proto.InternalMessageInfo

type ListActiclesByCategoryRequest struct {
	CategoryId           int64    `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UserId               int64    `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListActiclesByCategoryRequest) Reset()         { *m = ListActiclesByCategoryRequest{} }
func (m *ListActiclesByCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*ListActiclesByCategoryRequest) ProtoMessage()    {}
func (*ListActiclesByCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{43}
}
func (m *ListActiclesByCategoryRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListActiclesByCategoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListActiclesByCategoryRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListActiclesByCategoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActiclesByCategoryRequest.Merge(m, src)
}
func (m *ListActiclesByCategoryRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListActiclesByCategoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActiclesByCategoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListActiclesByCategoryRequest proto.InternalMessageInfo

type Article struct {
	ArticleId            int64         `protobuf:"varint,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	CategoryId           int64         `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	UserId               int64         `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title                string        `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	CreateTime           int64         `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	LikeCount            int64         `protobuf:"varint,6,opt,name=like_count,json=likeCount,proto3" json:"like_count"`
	CommentCount         int64         `protobuf:"varint,7,opt,name=comment_count,json=commentCount,proto3" json:"comment_count"`
	CollectCount         int64         `protobuf:"varint,8,opt,name=collect_count,json=collectCount,proto3" json:"collect_count"`
	ShareCount           int64         `protobuf:"varint,9,opt,name=share_count,json=shareCount,proto3" json:"share_count"`
	ViewCount            int64         `protobuf:"varint,11,opt,name=view_count,json=viewCount,proto3" json:"view_count"`
	ListTags             []string      `protobuf:"bytes,12,rep,name=list_tags,json=listTags,proto3" json:"list_tags,omitempty"`
	ImageUrl             string        `protobuf:"bytes,14,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Content              string        `protobuf:"bytes,15,opt,name=content,proto3" json:"content,omitempty"`
	Avatar               string        `protobuf:"bytes,16,opt,name=avatar,proto3" json:"avatar,omitempty"`
	NickName             string        `protobuf:"bytes,17,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	IfLike               bool          `protobuf:"varint,18,opt,name=if_like,json=ifLike,proto3" json:"if_like"`
	IfCollection         bool          `protobuf:"varint,19,opt,name=if_collection,json=ifCollection,proto3" json:"if_collection"`
	ImageWidth           int64         `protobuf:"varint,20,opt,name=image_width,json=imageWidth,proto3" json:"image_width,omitempty"`
	ImageHeight          int64         `protobuf:"varint,21,opt,name=image_height,json=imageHeight,proto3" json:"image_height,omitempty"`
	ListArticleTags      []*ArticleTag `protobuf:"bytes,22,rep,name=list_article_tags,json=listArticleTags,proto3" json:"list_article_tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Article) Reset()         { *m = Article{} }
func (m *Article) String() string { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()    {}
func (*Article) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{44}
}
func (m *Article) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Article) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Article.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Article) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Article.Merge(m, src)
}
func (m *Article) XXX_Size() int {
	return m.Size()
}
func (m *Article) XXX_DiscardUnknown() {
	xxx_messageInfo_Article.DiscardUnknown(m)
}

var xxx_messageInfo_Article proto.InternalMessageInfo

type ListActiclesByCategoryResponse struct {
	Status               *Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*Article `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListActiclesByCategoryResponse) Reset()         { *m = ListActiclesByCategoryResponse{} }
func (m *ListActiclesByCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*ListActiclesByCategoryResponse) ProtoMessage()    {}
func (*ListActiclesByCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{45}
}
func (m *ListActiclesByCategoryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListActiclesByCategoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListActiclesByCategoryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListActiclesByCategoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActiclesByCategoryResponse.Merge(m, src)
}
func (m *ListActiclesByCategoryResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListActiclesByCategoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActiclesByCategoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListActiclesByCategoryResponse proto.InternalMessageInfo

type GetArticleRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ArticleId            int64    `protobuf:"varint,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArticleRequest) Reset()         { *m = GetArticleRequest{} }
func (m *GetArticleRequest) String() string { return proto.CompactTextString(m) }
func (*GetArticleRequest) ProtoMessage()    {}
func (*GetArticleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{46}
}
func (m *GetArticleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetArticleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetArticleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetArticleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArticleRequest.Merge(m, src)
}
func (m *GetArticleRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetArticleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArticleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArticleRequest proto.InternalMessageInfo

type GetArticleResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info                 *Article `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArticleResponse) Reset()         { *m = GetArticleResponse{} }
func (m *GetArticleResponse) String() string { return proto.CompactTextString(m) }
func (*GetArticleResponse) ProtoMessage()    {}
func (*GetArticleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{47}
}
func (m *GetArticleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetArticleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetArticleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetArticleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArticleResponse.Merge(m, src)
}
func (m *GetArticleResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetArticleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArticleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetArticleResponse proto.InternalMessageInfo

type UserArticleLikeRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LikeId               int64    `protobuf:"varint,2,opt,name=like_id,json=likeId,proto3" json:"like_id,omitempty"`
	IfLike               bool     `protobuf:"varint,4,opt,name=if_like,json=ifLike,proto3" json:"if_like,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserArticleLikeRequest) Reset()         { *m = UserArticleLikeRequest{} }
func (m *UserArticleLikeRequest) String() string { return proto.CompactTextString(m) }
func (*UserArticleLikeRequest) ProtoMessage()    {}
func (*UserArticleLikeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{48}
}
func (m *UserArticleLikeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserArticleLikeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserArticleLikeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserArticleLikeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserArticleLikeRequest.Merge(m, src)
}
func (m *UserArticleLikeRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserArticleLikeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserArticleLikeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserArticleLikeRequest proto.InternalMessageInfo

type UserArticleLikeResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserArticleLikeResponse) Reset()         { *m = UserArticleLikeResponse{} }
func (m *UserArticleLikeResponse) String() string { return proto.CompactTextString(m) }
func (*UserArticleLikeResponse) ProtoMessage()    {}
func (*UserArticleLikeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{49}
}
func (m *UserArticleLikeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserArticleLikeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserArticleLikeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserArticleLikeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserArticleLikeResponse.Merge(m, src)
}
func (m *UserArticleLikeResponse) XXX_Size() int {
	return m.Size()
}
func (m *UserArticleLikeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserArticleLikeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserArticleLikeResponse proto.InternalMessageInfo

type UserArticleCollectionRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CollectionId         int64    `protobuf:"varint,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	IfCollection         bool     `protobuf:"varint,4,opt,name=if_collection,json=ifCollection,proto3" json:"if_collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserArticleCollectionRequest) Reset()         { *m = UserArticleCollectionRequest{} }
func (m *UserArticleCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*UserArticleCollectionRequest) ProtoMessage()    {}
func (*UserArticleCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{50}
}
func (m *UserArticleCollectionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserArticleCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserArticleCollectionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserArticleCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserArticleCollectionRequest.Merge(m, src)
}
func (m *UserArticleCollectionRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserArticleCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserArticleCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserArticleCollectionRequest proto.InternalMessageInfo

type UserArticleCollectionResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserArticleCollectionResponse) Reset()         { *m = UserArticleCollectionResponse{} }
func (m *UserArticleCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*UserArticleCollectionResponse) ProtoMessage()    {}
func (*UserArticleCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{51}
}
func (m *UserArticleCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserArticleCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserArticleCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserArticleCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserArticleCollectionResponse.Merge(m, src)
}
func (m *UserArticleCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *UserArticleCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserArticleCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserArticleCollectionResponse proto.InternalMessageInfo

type GetArticleThemeRequest struct {
	ThemeId              int64    `protobuf:"varint,2,opt,name=theme_id,json=themeId,proto3" json:"theme_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArticleThemeRequest) Reset()         { *m = GetArticleThemeRequest{} }
func (m *GetArticleThemeRequest) String() string { return proto.CompactTextString(m) }
func (*GetArticleThemeRequest) ProtoMessage()    {}
func (*GetArticleThemeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{52}
}
func (m *GetArticleThemeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetArticleThemeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetArticleThemeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetArticleThemeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArticleThemeRequest.Merge(m, src)
}
func (m *GetArticleThemeRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetArticleThemeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArticleThemeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArticleThemeRequest proto.InternalMessageInfo

type GetArticleThemeResponse struct {
	Status               *Status       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info                 *ArticleTheme `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetArticleThemeResponse) Reset()         { *m = GetArticleThemeResponse{} }
func (m *GetArticleThemeResponse) String() string { return proto.CompactTextString(m) }
func (*GetArticleThemeResponse) ProtoMessage()    {}
func (*GetArticleThemeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{53}
}
func (m *GetArticleThemeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetArticleThemeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetArticleThemeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetArticleThemeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArticleThemeResponse.Merge(m, src)
}
func (m *GetArticleThemeResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetArticleThemeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArticleThemeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetArticleThemeResponse proto.InternalMessageInfo

type ArticleTag struct {
	TagId                int64    `protobuf:"varint,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	TagName              string   `protobuf:"bytes,2,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	UsedCount            int64    `protobuf:"varint,3,opt,name=used_count,json=usedCount,proto3" json:"used_count"`
	ViewCount            int64    `protobuf:"varint,4,opt,name=view_count,json=viewCount,proto3" json:"view_count"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArticleTag) Reset()         { *m = ArticleTag{} }
func (m *ArticleTag) String() string { return proto.CompactTextString(m) }
func (*ArticleTag) ProtoMessage()    {}
func (*ArticleTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{54}
}
func (m *ArticleTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArticleTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArticleTag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArticleTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleTag.Merge(m, src)
}
func (m *ArticleTag) XXX_Size() int {
	return m.Size()
}
func (m *ArticleTag) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleTag.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleTag proto.InternalMessageInfo

type GetArticleTagRequest struct {
	TagId                int64    `protobuf:"varint,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArticleTagRequest) Reset()         { *m = GetArticleTagRequest{} }
func (m *GetArticleTagRequest) String() string { return proto.CompactTextString(m) }
func (*GetArticleTagRequest) ProtoMessage()    {}
func (*GetArticleTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{55}
}
func (m *GetArticleTagRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetArticleTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetArticleTagRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetArticleTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArticleTagRequest.Merge(m, src)
}
func (m *GetArticleTagRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetArticleTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArticleTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArticleTagRequest proto.InternalMessageInfo

type GetArticleTagResponse struct {
	Status               *Status     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info                 *ArticleTag `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetArticleTagResponse) Reset()         { *m = GetArticleTagResponse{} }
func (m *GetArticleTagResponse) String() string { return proto.CompactTextString(m) }
func (*GetArticleTagResponse) ProtoMessage()    {}
func (*GetArticleTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{56}
}
func (m *GetArticleTagResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetArticleTagResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetArticleTagResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetArticleTagResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArticleTagResponse.Merge(m, src)
}
func (m *GetArticleTagResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetArticleTagResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArticleTagResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetArticleTagResponse proto.InternalMessageInfo

type ListActiclesByTagRequest struct {
	ListTagIds           []int64  `protobuf:"varint,1,rep,packed,name=list_tag_ids,json=listTagIds,proto3" json:"list_tag_ids,omitempty"`
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UserId               int64    `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IfNew                bool     `protobuf:"varint,5,opt,name=if_new,json=ifNew,proto3" json:"if_new,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListActiclesByTagRequest) Reset()         { *m = ListActiclesByTagRequest{} }
func (m *ListActiclesByTagRequest) String() string { return proto.CompactTextString(m) }
func (*ListActiclesByTagRequest) ProtoMessage()    {}
func (*ListActiclesByTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{57}
}
func (m *ListActiclesByTagRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListActiclesByTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListActiclesByTagRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListActiclesByTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActiclesByTagRequest.Merge(m, src)
}
func (m *ListActiclesByTagRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListActiclesByTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActiclesByTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListActiclesByTagRequest proto.InternalMessageInfo

type ListActiclesByTagResponse struct {
	Status               *Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*Article `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListActiclesByTagResponse) Reset()         { *m = ListActiclesByTagResponse{} }
func (m *ListActiclesByTagResponse) String() string { return proto.CompactTextString(m) }
func (*ListActiclesByTagResponse) ProtoMessage()    {}
func (*ListActiclesByTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{58}
}
func (m *ListActiclesByTagResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListActiclesByTagResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListActiclesByTagResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListActiclesByTagResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListActiclesByTagResponse.Merge(m, src)
}
func (m *ListActiclesByTagResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListActiclesByTagResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListActiclesByTagResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListActiclesByTagResponse proto.InternalMessageInfo

type ListUserArticlesRequest struct {
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UserId               int64    `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ReleaseUserId        int64    `protobuf:"varint,5,opt,name=release_user_id,json=releaseUserId,proto3" json:"release_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUserArticlesRequest) Reset()         { *m = ListUserArticlesRequest{} }
func (m *ListUserArticlesRequest) String() string { return proto.CompactTextString(m) }
func (*ListUserArticlesRequest) ProtoMessage()    {}
func (*ListUserArticlesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{59}
}
func (m *ListUserArticlesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListUserArticlesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListUserArticlesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListUserArticlesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserArticlesRequest.Merge(m, src)
}
func (m *ListUserArticlesRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListUserArticlesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserArticlesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserArticlesRequest proto.InternalMessageInfo

type ListUserArticlesResponse struct {
	Status               *Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*Article `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListUserArticlesResponse) Reset()         { *m = ListUserArticlesResponse{} }
func (m *ListUserArticlesResponse) String() string { return proto.CompactTextString(m) }
func (*ListUserArticlesResponse) ProtoMessage()    {}
func (*ListUserArticlesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{60}
}
func (m *ListUserArticlesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListUserArticlesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListUserArticlesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListUserArticlesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserArticlesResponse.Merge(m, src)
}
func (m *ListUserArticlesResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListUserArticlesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserArticlesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserArticlesResponse proto.InternalMessageInfo

type SendCommentRequest struct {
	UserId               int64       `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content              string      `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	CommentId            int64       `protobuf:"varint,3,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	ObjectId             int64       `protobuf:"varint,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	CommentType          CommentType `protobuf:"varint,5,opt,name=comment_type,json=commentType,proto3,enum=fishing_user.CommentType" json:"comment_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SendCommentRequest) Reset()         { *m = SendCommentRequest{} }
func (m *SendCommentRequest) String() string { return proto.CompactTextString(m) }
func (*SendCommentRequest) ProtoMessage()    {}
func (*SendCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{61}
}
func (m *SendCommentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SendCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SendCommentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SendCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCommentRequest.Merge(m, src)
}
func (m *SendCommentRequest) XXX_Size() int {
	return m.Size()
}
func (m *SendCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendCommentRequest proto.InternalMessageInfo

type SendCommentResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendCommentResponse) Reset()         { *m = SendCommentResponse{} }
func (m *SendCommentResponse) String() string { return proto.CompactTextString(m) }
func (*SendCommentResponse) ProtoMessage()    {}
func (*SendCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{62}
}
func (m *SendCommentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SendCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SendCommentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SendCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCommentResponse.Merge(m, src)
}
func (m *SendCommentResponse) XXX_Size() int {
	return m.Size()
}
func (m *SendCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendCommentResponse proto.InternalMessageInfo

type UserCommentLikeRequest struct {
	UserId               int64       `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommentId            int64       `protobuf:"varint,3,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	CommentType          CommentType `protobuf:"varint,5,opt,name=comment_type,json=commentType,proto3,enum=fishing_user.CommentType" json:"comment_type,omitempty"`
	IfLike               bool        `protobuf:"varint,7,opt,name=if_like,json=ifLike,proto3" json:"if_like,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserCommentLikeRequest) Reset()         { *m = UserCommentLikeRequest{} }
func (m *UserCommentLikeRequest) String() string { return proto.CompactTextString(m) }
func (*UserCommentLikeRequest) ProtoMessage()    {}
func (*UserCommentLikeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{63}
}
func (m *UserCommentLikeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserCommentLikeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserCommentLikeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserCommentLikeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCommentLikeRequest.Merge(m, src)
}
func (m *UserCommentLikeRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserCommentLikeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCommentLikeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserCommentLikeRequest proto.InternalMessageInfo

type UserCommentLikeResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserCommentLikeResponse) Reset()         { *m = UserCommentLikeResponse{} }
func (m *UserCommentLikeResponse) String() string { return proto.CompactTextString(m) }
func (*UserCommentLikeResponse) ProtoMessage()    {}
func (*UserCommentLikeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{64}
}
func (m *UserCommentLikeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserCommentLikeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserCommentLikeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserCommentLikeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserCommentLikeResponse.Merge(m, src)
}
func (m *UserCommentLikeResponse) XXX_Size() int {
	return m.Size()
}
func (m *UserCommentLikeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserCommentLikeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserCommentLikeResponse proto.InternalMessageInfo

type ListCommentsRequest struct {
	UserId               int64       `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommentType          CommentType `protobuf:"varint,2,opt,name=comment_type,json=commentType,proto3,enum=fishing_user.CommentType" json:"comment_type,omitempty"`
	ObjectId             int64       `protobuf:"varint,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Page                 int64       `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int64       `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListCommentsRequest) Reset()         { *m = ListCommentsRequest{} }
func (m *ListCommentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCommentsRequest) ProtoMessage()    {}
func (*ListCommentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{65}
}
func (m *ListCommentsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListCommentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListCommentsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListCommentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommentsRequest.Merge(m, src)
}
func (m *ListCommentsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListCommentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommentsRequest proto.InternalMessageInfo

type Comment struct {
	CommentId            int64    `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	CreateTime           int64    `protobuf:"varint,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ObjectId             int64    `protobuf:"varint,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	ReleaseUserId        int64    `protobuf:"varint,4,opt,name=release_user_id,json=releaseUserId,proto3" json:"release_user_id"`
	LikeCount            int64    `protobuf:"varint,5,opt,name=like_count,json=likeCount,proto3" json:"like_count"`
	RepliedCount         int64    `protobuf:"varint,6,opt,name=replied_count,json=repliedCount,proto3" json:"replied_count"`
	RepliedUserId        int64    `protobuf:"varint,7,opt,name=replied_user_id,json=repliedUserId,proto3" json:"replied_user_id"`
	RepliedCommentId     int64    `protobuf:"varint,8,opt,name=replied_comment_id,json=repliedCommentId,proto3" json:"replied_comment_id"`
	Content              string   `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	IfLike               bool     `protobuf:"varint,10,opt,name=if_like,json=ifLike,proto3" json:"if_like"`
	Avatar               string   `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`
	NickName             string   `protobuf:"bytes,12,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{66}
}
func (m *Comment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(m, src)
}
func (m *Comment) XXX_Size() int {
	return m.Size()
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

type ListCommentsResponse struct {
	Status               *Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*Comment `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListCommentsResponse) Reset()         { *m = ListCommentsResponse{} }
func (m *ListCommentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCommentsResponse) ProtoMessage()    {}
func (*ListCommentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{67}
}
func (m *ListCommentsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListCommentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListCommentsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListCommentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommentsResponse.Merge(m, src)
}
func (m *ListCommentsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListCommentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommentsResponse proto.InternalMessageInfo

type CheckUserFollwRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FollowUserId         int64    `protobuf:"varint,2,opt,name=follow_user_id,json=followUserId,proto3" json:"follow_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUserFollwRequest) Reset()         { *m = CheckUserFollwRequest{} }
func (m *CheckUserFollwRequest) String() string { return proto.CompactTextString(m) }
func (*CheckUserFollwRequest) ProtoMessage()    {}
func (*CheckUserFollwRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{68}
}
func (m *CheckUserFollwRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckUserFollwRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckUserFollwRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckUserFollwRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserFollwRequest.Merge(m, src)
}
func (m *CheckUserFollwRequest) XXX_Size() int {
	return m.Size()
}
func (m *CheckUserFollwRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserFollwRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserFollwRequest proto.InternalMessageInfo

type CheckUserFollwResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	IfFollow             bool     `protobuf:"varint,2,opt,name=if_follow,json=ifFollow,proto3" json:"if_follow"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckUserFollwResponse) Reset()         { *m = CheckUserFollwResponse{} }
func (m *CheckUserFollwResponse) String() string { return proto.CompactTextString(m) }
func (*CheckUserFollwResponse) ProtoMessage()    {}
func (*CheckUserFollwResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{69}
}
func (m *CheckUserFollwResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckUserFollwResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckUserFollwResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckUserFollwResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckUserFollwResponse.Merge(m, src)
}
func (m *CheckUserFollwResponse) XXX_Size() int {
	return m.Size()
}
func (m *CheckUserFollwResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckUserFollwResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckUserFollwResponse proto.InternalMessageInfo

type ListMessagesRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMessagesRequest) Reset()         { *m = ListMessagesRequest{} }
func (m *ListMessagesRequest) String() string { return proto.CompactTextString(m) }
func (*ListMessagesRequest) ProtoMessage()    {}
func (*ListMessagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{70}
}
func (m *ListMessagesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListMessagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListMessagesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListMessagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMessagesRequest.Merge(m, src)
}
func (m *ListMessagesRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListMessagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMessagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMessagesRequest proto.InternalMessageInfo

type Message struct {
	MessageId            int64             `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	CreateTime           int64             `protobuf:"varint,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ReadStatus           MessageReadStatus `protobuf:"varint,3,opt,name=read_status,json=readStatus,proto3,enum=fishing_user.MessageReadStatus" json:"read_status"`
	Title                string            `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content              string            `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Avatar               string            `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{71}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Message.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return m.Size()
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

type ListMessagesResponse struct {
	Status               *Status    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*Message `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListMessagesResponse) Reset()         { *m = ListMessagesResponse{} }
func (m *ListMessagesResponse) String() string { return proto.CompactTextString(m) }
func (*ListMessagesResponse) ProtoMessage()    {}
func (*ListMessagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{72}
}
func (m *ListMessagesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListMessagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListMessagesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListMessagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMessagesResponse.Merge(m, src)
}
func (m *ListMessagesResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListMessagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMessagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMessagesResponse proto.InternalMessageInfo

type CreateInfomationOrderRequest struct {
	UserId               int64               `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InfomationId         int64               `protobuf:"varint,2,opt,name=infomation_id,json=infomationId,proto3" json:"infomation_id,omitempty"`
	PayType              FishingOrderPayType `protobuf:"varint,4,opt,name=pay_type,json=payType,proto3,enum=fishing_user.FishingOrderPayType" json:"pay_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CreateInfomationOrderRequest) Reset()         { *m = CreateInfomationOrderRequest{} }
func (m *CreateInfomationOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CreateInfomationOrderRequest) ProtoMessage()    {}
func (*CreateInfomationOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{73}
}
func (m *CreateInfomationOrderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateInfomationOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateInfomationOrderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateInfomationOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInfomationOrderRequest.Merge(m, src)
}
func (m *CreateInfomationOrderRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateInfomationOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInfomationOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInfomationOrderRequest proto.InternalMessageInfo

type CreateInfomationOrderResponse struct {
	Status               *Status          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Info                 *InfomationOrder `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateInfomationOrderResponse) Reset()         { *m = CreateInfomationOrderResponse{} }
func (m *CreateInfomationOrderResponse) String() string { return proto.CompactTextString(m) }
func (*CreateInfomationOrderResponse) ProtoMessage()    {}
func (*CreateInfomationOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{74}
}
func (m *CreateInfomationOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateInfomationOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateInfomationOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateInfomationOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInfomationOrderResponse.Merge(m, src)
}
func (m *CreateInfomationOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateInfomationOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInfomationOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInfomationOrderResponse proto.InternalMessageInfo

type InfomationOrder struct {
	OrderId              int64               `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	UserId               int64               `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InfomationId         int64               `protobuf:"varint,3,opt,name=infomation_id,json=infomationId,proto3" json:"infomation_id,omitempty"`
	PayType              FishingOrderPayType `protobuf:"varint,4,opt,name=pay_type,json=payType,proto3,enum=fishing_user.FishingOrderPayType" json:"pay_type"`
	Price                int64               `protobuf:"varint,5,opt,name=price,proto3" json:"price"`
	CreateTime           int64               `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Info                 *Infomation         `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *InfomationOrder) Reset()         { *m = InfomationOrder{} }
func (m *InfomationOrder) String() string { return proto.CompactTextString(m) }
func (*InfomationOrder) ProtoMessage()    {}
func (*InfomationOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{75}
}
func (m *InfomationOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InfomationOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InfomationOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InfomationOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfomationOrder.Merge(m, src)
}
func (m *InfomationOrder) XXX_Size() int {
	return m.Size()
}
func (m *InfomationOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_InfomationOrder.DiscardUnknown(m)
}

var xxx_messageInfo_InfomationOrder proto.InternalMessageInfo

type GetInfomationOrderRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InfomationId         int64    `protobuf:"varint,2,opt,name=infomation_id,json=infomationId,proto3" json:"infomation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfomationOrderRequest) Reset()         { *m = GetInfomationOrderRequest{} }
func (m *GetInfomationOrderRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfomationOrderRequest) ProtoMessage()    {}
func (*GetInfomationOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{76}
}
func (m *GetInfomationOrderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetInfomationOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetInfomationOrderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetInfomationOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfomationOrderRequest.Merge(m, src)
}
func (m *GetInfomationOrderRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetInfomationOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfomationOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfomationOrderRequest proto.InternalMessageInfo

type GetInfomationOrderResponse struct {
	Status               *Status          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	OrderInfo            *InfomationOrder `protobuf:"bytes,2,opt,name=order_info,json=orderInfo,proto3" json:"order_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetInfomationOrderResponse) Reset()         { *m = GetInfomationOrderResponse{} }
func (m *GetInfomationOrderResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfomationOrderResponse) ProtoMessage()    {}
func (*GetInfomationOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{77}
}
func (m *GetInfomationOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetInfomationOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetInfomationOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetInfomationOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfomationOrderResponse.Merge(m, src)
}
func (m *GetInfomationOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetInfomationOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfomationOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfomationOrderResponse proto.InternalMessageInfo

type CheckInfomationOrderBuyRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InfomationId         int64    `protobuf:"varint,2,opt,name=infomation_id,json=infomationId,proto3" json:"infomation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckInfomationOrderBuyRequest) Reset()         { *m = CheckInfomationOrderBuyRequest{} }
func (m *CheckInfomationOrderBuyRequest) String() string { return proto.CompactTextString(m) }
func (*CheckInfomationOrderBuyRequest) ProtoMessage()    {}
func (*CheckInfomationOrderBuyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{78}
}
func (m *CheckInfomationOrderBuyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckInfomationOrderBuyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckInfomationOrderBuyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckInfomationOrderBuyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckInfomationOrderBuyRequest.Merge(m, src)
}
func (m *CheckInfomationOrderBuyRequest) XXX_Size() int {
	return m.Size()
}
func (m *CheckInfomationOrderBuyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckInfomationOrderBuyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckInfomationOrderBuyRequest proto.InternalMessageInfo

type CheckInfomationOrderBuyResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	IfBuy                bool     `protobuf:"varint,2,opt,name=if_buy,json=ifBuy,proto3" json:"if_buy"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckInfomationOrderBuyResponse) Reset()         { *m = CheckInfomationOrderBuyResponse{} }
func (m *CheckInfomationOrderBuyResponse) String() string { return proto.CompactTextString(m) }
func (*CheckInfomationOrderBuyResponse) ProtoMessage()    {}
func (*CheckInfomationOrderBuyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{79}
}
func (m *CheckInfomationOrderBuyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckInfomationOrderBuyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckInfomationOrderBuyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckInfomationOrderBuyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckInfomationOrderBuyResponse.Merge(m, src)
}
func (m *CheckInfomationOrderBuyResponse) XXX_Size() int {
	return m.Size()
}
func (m *CheckInfomationOrderBuyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckInfomationOrderBuyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckInfomationOrderBuyResponse proto.InternalMessageInfo

type UserMessageReadRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MessageId            int64    `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserMessageReadRequest) Reset()         { *m = UserMessageReadRequest{} }
func (m *UserMessageReadRequest) String() string { return proto.CompactTextString(m) }
func (*UserMessageReadRequest) ProtoMessage()    {}
func (*UserMessageReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{80}
}
func (m *UserMessageReadRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserMessageReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserMessageReadRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserMessageReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMessageReadRequest.Merge(m, src)
}
func (m *UserMessageReadRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserMessageReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMessageReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserMessageReadRequest proto.InternalMessageInfo

type UserMessageReadResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserMessageReadResponse) Reset()         { *m = UserMessageReadResponse{} }
func (m *UserMessageReadResponse) String() string { return proto.CompactTextString(m) }
func (*UserMessageReadResponse) ProtoMessage()    {}
func (*UserMessageReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{81}
}
func (m *UserMessageReadResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserMessageReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserMessageReadResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserMessageReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMessageReadResponse.Merge(m, src)
}
func (m *UserMessageReadResponse) XXX_Size() int {
	return m.Size()
}
func (m *UserMessageReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMessageReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserMessageReadResponse proto.InternalMessageInfo

type UserMessageReadAllRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserMessageReadAllRequest) Reset()         { *m = UserMessageReadAllRequest{} }
func (m *UserMessageReadAllRequest) String() string { return proto.CompactTextString(m) }
func (*UserMessageReadAllRequest) ProtoMessage()    {}
func (*UserMessageReadAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{82}
}
func (m *UserMessageReadAllRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserMessageReadAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserMessageReadAllRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserMessageReadAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMessageReadAllRequest.Merge(m, src)
}
func (m *UserMessageReadAllRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserMessageReadAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMessageReadAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserMessageReadAllRequest proto.InternalMessageInfo

type UserMessageReadAllResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserMessageReadAllResponse) Reset()         { *m = UserMessageReadAllResponse{} }
func (m *UserMessageReadAllResponse) String() string { return proto.CompactTextString(m) }
func (*UserMessageReadAllResponse) ProtoMessage()    {}
func (*UserMessageReadAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{83}
}
func (m *UserMessageReadAllResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserMessageReadAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserMessageReadAllResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserMessageReadAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMessageReadAllResponse.Merge(m, src)
}
func (m *UserMessageReadAllResponse) XXX_Size() int {
	return m.Size()
}
func (m *UserMessageReadAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMessageReadAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserMessageReadAllResponse proto.InternalMessageInfo

type GetUserMessageUnCountRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserMessageUnCountRequest) Reset()         { *m = GetUserMessageUnCountRequest{} }
func (m *GetUserMessageUnCountRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserMessageUnCountRequest) ProtoMessage()    {}
func (*GetUserMessageUnCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{84}
}
func (m *GetUserMessageUnCountRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUserMessageUnCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUserMessageUnCountRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetUserMessageUnCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserMessageUnCountRequest.Merge(m, src)
}
func (m *GetUserMessageUnCountRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetUserMessageUnCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserMessageUnCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserMessageUnCountRequest proto.InternalMessageInfo

type GetUserMessageUnCountResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UnCount              int64    `protobuf:"varint,2,opt,name=un_count,json=unCount,proto3" json:"un_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserMessageUnCountResponse) Reset()         { *m = GetUserMessageUnCountResponse{} }
func (m *GetUserMessageUnCountResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserMessageUnCountResponse) ProtoMessage()    {}
func (*GetUserMessageUnCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{85}
}
func (m *GetUserMessageUnCountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUserMessageUnCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUserMessageUnCountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetUserMessageUnCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserMessageUnCountResponse.Merge(m, src)
}
func (m *GetUserMessageUnCountResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetUserMessageUnCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserMessageUnCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserMessageUnCountResponse proto.InternalMessageInfo

type ListUserInfomationOrdersRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListUserInfomationOrdersRequest) Reset()         { *m = ListUserInfomationOrdersRequest{} }
func (m *ListUserInfomationOrdersRequest) String() string { return proto.CompactTextString(m) }
func (*ListUserInfomationOrdersRequest) ProtoMessage()    {}
func (*ListUserInfomationOrdersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{86}
}
func (m *ListUserInfomationOrdersRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListUserInfomationOrdersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListUserInfomationOrdersRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListUserInfomationOrdersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserInfomationOrdersRequest.Merge(m, src)
}
func (m *ListUserInfomationOrdersRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListUserInfomationOrdersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserInfomationOrdersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserInfomationOrdersRequest proto.InternalMessageInfo

type ListUserInfomationOrdersResponse struct {
	Status               *Status            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*InfomationOrder `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListUserInfomationOrdersResponse) Reset()         { *m = ListUserInfomationOrdersResponse{} }
func (m *ListUserInfomationOrdersResponse) String() string { return proto.CompactTextString(m) }
func (*ListUserInfomationOrdersResponse) ProtoMessage()    {}
func (*ListUserInfomationOrdersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{87}
}
func (m *ListUserInfomationOrdersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListUserInfomationOrdersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListUserInfomationOrdersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListUserInfomationOrdersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserInfomationOrdersResponse.Merge(m, src)
}
func (m *ListUserInfomationOrdersResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListUserInfomationOrdersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserInfomationOrdersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserInfomationOrdersResponse proto.InternalMessageInfo

type DeleteInfomationRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InfomationId         int64    `protobuf:"varint,2,opt,name=infomation_id,json=infomationId,proto3" json:"infomation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteInfomationRequest) Reset()         { *m = DeleteInfomationRequest{} }
func (m *DeleteInfomationRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteInfomationRequest) ProtoMessage()    {}
func (*DeleteInfomationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{88}
}
func (m *DeleteInfomationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteInfomationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteInfomationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteInfomationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteInfomationRequest.Merge(m, src)
}
func (m *DeleteInfomationRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteInfomationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteInfomationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteInfomationRequest proto.InternalMessageInfo

type DeleteInfomationResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteInfomationResponse) Reset()         { *m = DeleteInfomationResponse{} }
func (m *DeleteInfomationResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteInfomationResponse) ProtoMessage()    {}
func (*DeleteInfomationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{89}
}
func (m *DeleteInfomationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteInfomationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteInfomationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteInfomationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteInfomationResponse.Merge(m, src)
}
func (m *DeleteInfomationResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteInfomationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteInfomationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteInfomationResponse proto.InternalMessageInfo

type DeleteArticleRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ArticleId            int64    `protobuf:"varint,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArticleRequest) Reset()         { *m = DeleteArticleRequest{} }
func (m *DeleteArticleRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteArticleRequest) ProtoMessage()    {}
func (*DeleteArticleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{90}
}
func (m *DeleteArticleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteArticleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteArticleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteArticleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArticleRequest.Merge(m, src)
}
func (m *DeleteArticleRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteArticleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArticleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArticleRequest proto.InternalMessageInfo

type DeleteArticleResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArticleResponse) Reset()         { *m = DeleteArticleResponse{} }
func (m *DeleteArticleResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteArticleResponse) ProtoMessage()    {}
func (*DeleteArticleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{91}
}
func (m *DeleteArticleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteArticleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteArticleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteArticleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArticleResponse.Merge(m, src)
}
func (m *DeleteArticleResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteArticleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArticleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArticleResponse proto.InternalMessageInfo

type ListFansRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFansRequest) Reset()         { *m = ListFansRequest{} }
func (m *ListFansRequest) String() string { return proto.CompactTextString(m) }
func (*ListFansRequest) ProtoMessage()    {}
func (*ListFansRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{92}
}
func (m *ListFansRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListFansRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListFansRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListFansRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFansRequest.Merge(m, src)
}
func (m *ListFansRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListFansRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFansRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFansRequest proto.InternalMessageInfo

type ListFansResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*User  `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFansResponse) Reset()         { *m = ListFansResponse{} }
func (m *ListFansResponse) String() string { return proto.CompactTextString(m) }
func (*ListFansResponse) ProtoMessage()    {}
func (*ListFansResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{93}
}
func (m *ListFansResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListFansResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListFansResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListFansResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFansResponse.Merge(m, src)
}
func (m *ListFansResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListFansResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFansResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListFansResponse proto.InternalMessageInfo

type PubArticle struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CategoryId           int64    `protobuf:"varint,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	ImageHeight          int64    `protobuf:"varint,5,opt,name=image_height,json=imageHeight,proto3" json:"image_height,omitempty"`
	ImageWidth           int64    `protobuf:"varint,6,opt,name=image_width,json=imageWidth,proto3" json:"image_width,omitempty"`
	TagNames             []string `protobuf:"bytes,7,rep,name=tag_names,json=tagNames,proto3" json:"tag_names,omitempty"`
	TagIds               []int64  `protobuf:"varint,8,rep,packed,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	ImageUrl             string   `protobuf:"bytes,9,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PubArticle) Reset()         { *m = PubArticle{} }
func (m *PubArticle) String() string { return proto.CompactTextString(m) }
func (*PubArticle) ProtoMessage()    {}
func (*PubArticle) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{94}
}
func (m *PubArticle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PubArticle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PubArticle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PubArticle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PubArticle.Merge(m, src)
}
func (m *PubArticle) XXX_Size() int {
	return m.Size()
}
func (m *PubArticle) XXX_DiscardUnknown() {
	xxx_messageInfo_PubArticle.DiscardUnknown(m)
}

var xxx_messageInfo_PubArticle proto.InternalMessageInfo

type CreateArticleRequest struct {
	UserId               int64       `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Info                 *PubArticle `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateArticleRequest) Reset()         { *m = CreateArticleRequest{} }
func (m *CreateArticleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateArticleRequest) ProtoMessage()    {}
func (*CreateArticleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{95}
}
func (m *CreateArticleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateArticleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateArticleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateArticleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArticleRequest.Merge(m, src)
}
func (m *CreateArticleRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateArticleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArticleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArticleRequest proto.InternalMessageInfo

type CreateArticleResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateArticleResponse) Reset()         { *m = CreateArticleResponse{} }
func (m *CreateArticleResponse) String() string { return proto.CompactTextString(m) }
func (*CreateArticleResponse) ProtoMessage()    {}
func (*CreateArticleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f60c70ece414314a, []int{96}
}
func (m *CreateArticleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateArticleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateArticleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateArticleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArticleResponse.Merge(m, src)
}
func (m *CreateArticleResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateArticleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArticleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArticleResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("fishing_user.StatusCode", StatusCode_name, StatusCode_value)
	proto.RegisterEnum("fishing_user.ClientPlatformType", ClientPlatformType_name, ClientPlatformType_value)
	proto.RegisterEnum("fishing_user.UserStatus", UserStatus_name, UserStatus_value)
	proto.RegisterEnum("fishing_user.UserType", UserType_name, UserType_value)
	proto.RegisterEnum("fishing_user.BannerType", BannerType_name, BannerType_value)
	proto.RegisterEnum("fishing_user.BannerViewType", BannerViewType_name, BannerViewType_value)
	proto.RegisterEnum("fishing_user.InfomationCategoryType", InfomationCategoryType_name, InfomationCategoryType_value)
	proto.RegisterEnum("fishing_user.InfomationStatus", InfomationStatus_name, InfomationStatus_value)
	proto.RegisterEnum("fishing_user.InfomationType", InfomationType_name, InfomationType_value)
	proto.RegisterEnum("fishing_user.PayType", PayType_name, PayType_value)
	proto.RegisterEnum("fishing_user.UserLikeType", UserLikeType_name, UserLikeType_value)
	proto.RegisterEnum("fishing_user.UserColltionType", UserColltionType_name, UserColltionType_value)
	proto.RegisterEnum("fishing_user.ActicleStatus", ActicleStatus_name, ActicleStatus_value)
	proto.RegisterEnum("fishing_user.CommentType", CommentType_name, CommentType_value)
	proto.RegisterEnum("fishing_user.CommentStatus", CommentStatus_name, CommentStatus_value)
	proto.RegisterEnum("fishing_user.UserCommentLikeType", UserCommentLikeType_name, UserCommentLikeType_value)
	proto.RegisterEnum("fishing_user.MessageReadStatus", MessageReadStatus_name, MessageReadStatus_value)
	proto.RegisterEnum("fishing_user.FishingOrderPayType", FishingOrderPayType_name, FishingOrderPayType_value)
	proto.RegisterEnum("fishing_user.FishingGoodsType", FishingGoodsType_name, FishingGoodsType_value)
	proto.RegisterType((*Status)(nil), "fishing_user.Status")
	proto.RegisterType((*RefreshTokenRequest)(nil), "fishing_user.RefreshTokenRequest")
	proto.RegisterType((*RefreshTokenResponse)(nil), "fishing_user.RefreshTokenResponse")
	proto.RegisterType((*WechatLoginRequest)(nil), "fishing_user.WechatLoginRequest")
	proto.RegisterType((*WechatLoginResponse)(nil), "fishing_user.WechatLoginResponse")
	proto.RegisterType((*GetUserRequest)(nil), "fishing_user.GetUserRequest")
	proto.RegisterType((*GetUserExtendRequest)(nil), "fishing_user.GetUserExtendRequest")
	proto.RegisterType((*UserExtend)(nil), "fishing_user.UserExtend")
	proto.RegisterType((*GetUserExtendResponse)(nil), "fishing_user.GetUserExtendResponse")
	proto.RegisterType((*User)(nil), "fishing_user.User")
	proto.RegisterType((*GetUserResponse)(nil), "fishing_user.GetUserResponse")
	proto.RegisterType((*ListBannersRequest)(nil), "fishing_user.ListBannersRequest")
	proto.RegisterType((*Banner)(nil), "fishing_user.Banner")
	proto.RegisterType((*ListBannersResponse)(nil), "fishing_user.ListBannersResponse")
	proto.RegisterType((*UserFollowRequest)(nil), "fishing_user.UserFollowRequest")
	proto.RegisterType((*CancelUserFollowRequest)(nil), "fishing_user.CancelUserFollowRequest")
	proto.RegisterType((*CancelUserFollowResponse)(nil), "fishing_user.CancelUserFollowResponse")
	proto.RegisterType((*UserFollowResponse)(nil), "fishing_user.UserFollowResponse")
	proto.RegisterType((*ListUserFollowsRequest)(nil), "fishing_user.ListUserFollowsRequest")
	proto.RegisterType((*ListUserFollowsResponse)(nil), "fishing_user.ListUserFollowsResponse")
	proto.RegisterType((*UserCollectionRequest)(nil), "fishing_user.UserCollectionRequest")
	proto.RegisterType((*UserCollectionResponse)(nil), "fishing_user.UserCollectionResponse")
	proto.RegisterType((*GetInfomationConfigRequest)(nil), "fishing_user.GetInfomationConfigRequest")
	proto.RegisterType((*InfomationCategory)(nil), "fishing_user.InfomationCategory")
	proto.RegisterType((*GetInfomationConfigResponse)(nil), "fishing_user.GetInfomationConfigResponse")
	proto.RegisterType((*ListInfomationsRequest)(nil), "fishing_user.ListInfomationsRequest")
	proto.RegisterType((*ListUserInfomationsRequest)(nil), "fishing_user.ListUserInfomationsRequest")
	proto.RegisterType((*ListUserInfomationsResponse)(nil), "fishing_user.ListUserInfomationsResponse")
	proto.RegisterType((*Infomation)(nil), "fishing_user.Infomation")
	proto.RegisterType((*Bait)(nil), "fishing_user.Bait")
	proto.RegisterType((*ListInfomationsResponse)(nil), "fishing_user.ListInfomationsResponse")
	proto.RegisterType((*GetInfomationRequest)(nil), "fishing_user.GetInfomationRequest")
	proto.RegisterType((*GetInfomationResponse)(nil), "fishing_user.GetInfomationResponse")
	proto.RegisterType((*UserInfomationLikeRequest)(nil), "fishing_user.UserInfomationLikeRequest")
	proto.RegisterType((*UserInfomationLikeResponse)(nil), "fishing_user.UserInfomationLikeResponse")
	proto.RegisterType((*UserInfomationCollectionRequest)(nil), "fishing_user.UserInfomationCollectionRequest")
	proto.RegisterType((*UserInfomationCollectionResponse)(nil), "fishing_user.UserInfomationCollectionResponse")
	proto.RegisterType((*ListActicleCategorysRequest)(nil), "fishing_user.ListActicleCategorysRequest")
	proto.RegisterType((*ActicleCategory)(nil), "fishing_user.ActicleCategory")
	proto.RegisterType((*ListActicleCategorysResponse)(nil), "fishing_user.ListActicleCategorysResponse")
	proto.RegisterType((*GetActicleConfigRequest)(nil), "fishing_user.GetActicleConfigRequest")
	proto.RegisterType((*ArticleTheme)(nil), "fishing_user.ArticleTheme")
	proto.RegisterType((*GetActicleConfigResponse)(nil), "fishing_user.GetActicleConfigResponse")
	proto.RegisterType((*ListActiclesByCategoryRequest)(nil), "fishing_user.ListActiclesByCategoryRequest")
	proto.RegisterType((*Article)(nil), "fishing_user.Article")
	proto.RegisterType((*ListActiclesByCategoryResponse)(nil), "fishing_user.ListActiclesByCategoryResponse")
	proto.RegisterType((*GetArticleRequest)(nil), "fishing_user.GetArticleRequest")
	proto.RegisterType((*GetArticleResponse)(nil), "fishing_user.GetArticleResponse")
	proto.RegisterType((*UserArticleLikeRequest)(nil), "fishing_user.UserArticleLikeRequest")
	proto.RegisterType((*UserArticleLikeResponse)(nil), "fishing_user.UserArticleLikeResponse")
	proto.RegisterType((*UserArticleCollectionRequest)(nil), "fishing_user.UserArticleCollectionRequest")
	proto.RegisterType((*UserArticleCollectionResponse)(nil), "fishing_user.UserArticleCollectionResponse")
	proto.RegisterType((*GetArticleThemeRequest)(nil), "fishing_user.GetArticleThemeRequest")
	proto.RegisterType((*GetArticleThemeResponse)(nil), "fishing_user.GetArticleThemeResponse")
	proto.RegisterType((*ArticleTag)(nil), "fishing_user.ArticleTag")
	proto.RegisterType((*GetArticleTagRequest)(nil), "fishing_user.GetArticleTagRequest")
	proto.RegisterType((*GetArticleTagResponse)(nil), "fishing_user.GetArticleTagResponse")
	proto.RegisterType((*ListActiclesByTagRequest)(nil), "fishing_user.ListActiclesByTagRequest")
	proto.RegisterType((*ListActiclesByTagResponse)(nil), "fishing_user.ListActiclesByTagResponse")
	proto.RegisterType((*ListUserArticlesRequest)(nil), "fishing_user.ListUserArticlesRequest")
	proto.RegisterType((*ListUserArticlesResponse)(nil), "fishing_user.ListUserArticlesResponse")
	proto.RegisterType((*SendCommentRequest)(nil), "fishing_user.SendCommentRequest")
	proto.RegisterType((*SendCommentResponse)(nil), "fishing_user.SendCommentResponse")
	proto.RegisterType((*UserCommentLikeRequest)(nil), "fishing_user.UserCommentLikeRequest")
	proto.RegisterType((*UserCommentLikeResponse)(nil), "fishing_user.UserCommentLikeResponse")
	proto.RegisterType((*ListCommentsRequest)(nil), "fishing_user.ListCommentsRequest")
	proto.RegisterType((*Comment)(nil), "fishing_user.Comment")
	proto.RegisterType((*ListCommentsResponse)(nil), "fishing_user.ListCommentsResponse")
	proto.RegisterType((*CheckUserFollwRequest)(nil), "fishing_user.CheckUserFollwRequest")
	proto.RegisterType((*CheckUserFollwResponse)(nil), "fishing_user.CheckUserFollwResponse")
	proto.RegisterType((*ListMessagesRequest)(nil), "fishing_user.ListMessagesRequest")
	proto.RegisterType((*Message)(nil), "fishing_user.Message")
	proto.RegisterType((*ListMessagesResponse)(nil), "fishing_user.ListMessagesResponse")
	proto.RegisterType((*CreateInfomationOrderRequest)(nil), "fishing_user.CreateInfomationOrderRequest")
	proto.RegisterType((*CreateInfomationOrderResponse)(nil), "fishing_user.CreateInfomationOrderResponse")
	proto.RegisterType((*InfomationOrder)(nil), "fishing_user.InfomationOrder")
	proto.RegisterType((*GetInfomationOrderRequest)(nil), "fishing_user.GetInfomationOrderRequest")
	proto.RegisterType((*GetInfomationOrderResponse)(nil), "fishing_user.GetInfomationOrderResponse")
	proto.RegisterType((*CheckInfomationOrderBuyRequest)(nil), "fishing_user.CheckInfomationOrderBuyRequest")
	proto.RegisterType((*CheckInfomationOrderBuyResponse)(nil), "fishing_user.CheckInfomationOrderBuyResponse")
	proto.RegisterType((*UserMessageReadRequest)(nil), "fishing_user.UserMessageReadRequest")
	proto.RegisterType((*UserMessageReadResponse)(nil), "fishing_user.UserMessageReadResponse")
	proto.RegisterType((*UserMessageReadAllRequest)(nil), "fishing_user.UserMessageReadAllRequest")
	proto.RegisterType((*UserMessageReadAllResponse)(nil), "fishing_user.UserMessageReadAllResponse")
	proto.RegisterType((*GetUserMessageUnCountRequest)(nil), "fishing_user.GetUserMessageUnCountRequest")
	proto.RegisterType((*GetUserMessageUnCountResponse)(nil), "fishing_user.GetUserMessageUnCountResponse")
	proto.RegisterType((*ListUserInfomationOrdersRequest)(nil), "fishing_user.ListUserInfomationOrdersRequest")
	proto.RegisterType((*ListUserInfomationOrdersResponse)(nil), "fishing_user.ListUserInfomationOrdersResponse")
	proto.RegisterType((*DeleteInfomationRequest)(nil), "fishing_user.DeleteInfomationRequest")
	proto.RegisterType((*DeleteInfomationResponse)(nil), "fishing_user.DeleteInfomationResponse")
	proto.RegisterType((*DeleteArticleRequest)(nil), "fishing_user.DeleteArticleRequest")
	proto.RegisterType((*DeleteArticleResponse)(nil), "fishing_user.DeleteArticleResponse")
	proto.RegisterType((*ListFansRequest)(nil), "fishing_user.ListFansRequest")
	proto.RegisterType((*ListFansResponse)(nil), "fishing_user.ListFansResponse")
	proto.RegisterType((*PubArticle)(nil), "fishing_user.PubArticle")
	proto.RegisterType((*CreateArticleRequest)(nil), "fishing_user.CreateArticleRequest")
	proto.RegisterType((*CreateArticleResponse)(nil), "fishing_user.CreateArticleResponse")
}

func init() { proto.RegisterFile("proto/mobile/mobile-fishing.proto", fileDescriptor_f60c70ece414314a) }

var fileDescriptor_f60c70ece414314a = []byte{
	// 4887 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x3c, 0x5d, 0x73, 0x24, 0xc9,
	0x51, 0xea, 0xd1, 0x68, 0x3e, 0x72, 0xf4, 0x31, 0x2a, 0x7d, 0x8d, 0x46, 0x1f, 0x23, 0xf5, 0xdd,
	0xee, 0xed, 0xea, 0x76, 0xf7, 0xee, 0xf6, 0x8c, 0x8d, 0xb9, 0x0b, 0xc3, 0x4a, 0x7b, 0xbb, 0x2b,
	0xfb, 0xee, 0xbc, 0xee, 0xdb, 0xf5, 0xd9, 0x07, 0xf6, 0xb8, 0x35, 0x53, 0x33, 0xea, 0xd5, 0x4c,
	0xf7, 0xd0, 0xdd, 0x23, 0x59, 0x06, 0x02, 0x30, 0x44, 0x40, 0x98, 0x80, 0x1f, 0x40, 0x40, 0xf0,
	0x40, 0x84, 0x79, 0x80, 0x5f, 0xc0, 0x03, 0x11, 0x3c, 0x10, 0x71, 0x8f, 0xbc, 0xf0, 0x46, 0x28,
	0xec, 0x83, 0x27, 0xfd, 0x02, 0xde, 0x20, 0xea, 0xa3, 0xbb, 0xab, 0xaa, 0xab, 0x35, 0xb3, 0x73,
	0x5a, 0xb3, 0x0f, 0x3b, 0x5d, 0x99, 0x59, 0x59, 0x95, 0x55, 0x59, 0x59, 0x99, 0x95, 0x55, 0x82,
	0xdd, 0x81, 0xef, 0x85, 0xde, 0x5b, 0x7d, 0xef, 0xc8, 0xe9, 0x61, 0xfe, 0x73, 0xb7, 0xe3, 0x04,
	0xc7, 0x8e, 0xdb, 0xbd, 0x47, 0x71, 0x68, 0x96, 0x17, 0x9b, 0xc3, 0x00, 0xfb, 0xf5, 0xbb, 0x5d,
	0x27, 0x3c, 0x1e, 0x1e, 0xdd, 0x6b, 0x79, 0xfd, 0xb7, 0xba, 0x5e, 0xd7, 0x7b, 0x8b, 0x12, 0x1d,
	0x0d, 0x3b, 0xb4, 0xc4, 0xb8, 0x91, 0x2f, 0x56, 0xd9, 0xb4, 0xa0, 0xf0, 0x49, 0x68, 0x87, 0xc3,
	0x00, 0x7d, 0x15, 0xf2, 0x2d, 0xaf, 0x8d, 0x6b, 0xc6, 0x8e, 0x71, 0x6b, 0xfe, 0x7e, 0xed, 0x9e,
	0xc8, 0xf5, 0x1e, 0xa3, 0x39, 0xf0, 0xda, 0x78, 0xbf, 0x74, 0x79, 0xd1, 0xa0, 0x94, 0x16, 0xfd,
	0x1f, 0x55, 0x61, 0xba, 0x1f, 0x74, 0x6b, 0xb9, 0x1d, 0xe3, 0x56, 0xd9, 0x22, 0x9f, 0xe6, 0x3d,
	0x58, 0xb2, 0x70, 0xc7, 0xc7, 0xc1, 0xf1, 0x33, 0xef, 0x04, 0xbb, 0x16, 0xfe, 0xdd, 0x21, 0x0e,
	0x42, 0xb4, 0x06, 0x45, 0xc2, 0xab, 0xe9, 0xb4, 0x6b, 0xd3, 0x3b, 0xc6, 0xad, 0x69, 0xab, 0x40,
	0x8a, 0x87, 0x6d, 0xf3, 0x21, 0x2c, 0xcb, 0xf4, 0xc1, 0xc0, 0x73, 0x03, 0x8c, 0xee, 0x40, 0x21,
	0xa0, 0xed, 0xd2, 0x3e, 0x55, 0xee, 0x2f, 0xeb, 0xfa, 0x64, 0x71, 0x1a, 0xb3, 0x05, 0xe8, 0x53,
	0xdc, 0x3a, 0xb6, 0xc3, 0x0f, 0xbd, 0xae, 0x13, 0x37, 0xba, 0x0a, 0x85, 0x17, 0x41, 0x2c, 0x57,
	0xd9, 0xe2, 0x25, 0x74, 0x03, 0xe6, 0xb1, 0xdb, 0xf2, 0xcf, 0x07, 0x21, 0x6e, 0x37, 0xdb, 0x76,
	0x68, 0x73, 0x01, 0xe6, 0x62, 0xe8, 0x43, 0x3b, 0xb4, 0xd1, 0x3c, 0xe4, 0x9c, 0x53, 0xda, 0xdd,
	0xb2, 0x95, 0x73, 0x4e, 0xcd, 0x3f, 0x80, 0x25, 0xa9, 0x91, 0x49, 0x7a, 0x4a, 0x46, 0xec, 0xc5,
	0x59, 0x18, 0x8d, 0xd8, 0x8b, 0xb3, 0x10, 0xdd, 0x84, 0xbc, 0xe3, 0x76, 0x3c, 0xda, 0x50, 0xe5,
	0x3e, 0x92, 0x6b, 0x3f, 0x0f, 0xb0, 0x6f, 0x51, 0xbc, 0x79, 0x1b, 0xe6, 0x1f, 0xe3, 0x90, 0x02,
	0xd2, 0x83, 0x6a, 0x48, 0x83, 0xfa, 0x16, 0x2c, 0x73, 0xd2, 0x0f, 0x7e, 0x1c, 0x62, 0xb7, 0x3d,
	0xb2, 0xc2, 0x7f, 0xe4, 0x00, 0x12, 0x72, 0xf4, 0x2e, 0xcc, 0x76, 0xbc, 0x5e, 0xcf, 0x3b, 0x6b,
	0xb6, 0xbc, 0xa1, 0x1b, 0x32, 0xe2, 0xfd, 0xea, 0xe5, 0x45, 0x43, 0x82, 0x5b, 0x15, 0x56, 0x3a,
	0x20, 0x05, 0x74, 0x17, 0xa0, 0x63, 0xbb, 0x01, 0xaf, 0x92, 0xa3, 0x55, 0xe6, 0x2f, 0x2f, 0x1a,
	0x02, 0xd4, 0x2a, 0x93, 0x6f, 0x46, 0xfe, 0x2e, 0xcc, 0x3a, 0xee, 0xa9, 0x13, 0x62, 0x5e, 0xa1,
	0x90, 0xb4, 0x21, 0xc2, 0xad, 0x0a, 0x2b, 0xb1, 0x4a, 0xbf, 0x06, 0x73, 0x43, 0xb7, 0xe9, 0x63,
	0xbb, 0xcd, 0x6b, 0x51, 0x65, 0xda, 0x5f, 0xbc, 0xbc, 0x68, 0xc8, 0x08, 0xab, 0x32, 0x74, 0x2d,
	0x6c, 0xb7, 0x59, 0xb5, 0xdf, 0x84, 0x2a, 0x19, 0xc2, 0xbe, 0x1d, 0x3a, 0x9e, 0xcb, 0x6b, 0xe6,
	0x69, 0xcd, 0xe5, 0xcb, 0x8b, 0x46, 0x0a, 0x67, 0x2d, 0x24, 0x10, 0xc6, 0xe0, 0xab, 0x30, 0x67,
	0xfb, 0xa1, 0xd3, 0xea, 0x45, 0xbd, 0x9d, 0x49, 0xda, 0x95, 0x10, 0xd6, 0x2c, 0x2f, 0xd2, 0x7a,
	0x66, 0x00, 0x2b, 0xca, 0x44, 0x4c, 0xa4, 0x34, 0x77, 0xb8, 0x8a, 0xe4, 0x28, 0x6d, 0x2d, 0xad,
	0x22, 0x9c, 0x3b, 0x53, 0x94, 0x7f, 0xcb, 0x43, 0x9e, 0x00, 0x33, 0xa7, 0x9b, 0x2c, 0x0c, 0xfb,
	0xd4, 0x0e, 0x6d, 0x9f, 0xeb, 0x21, 0x2f, 0x21, 0x13, 0x0a, 0xcc, 0xca, 0x30, 0xad, 0xdf, 0x87,
	0xcb, 0x8b, 0x06, 0x87, 0x58, 0xfc, 0x17, 0x6d, 0x40, 0xd9, 0x75, 0x5a, 0x27, 0x4d, 0xd7, 0xee,
	0x63, 0x3a, 0x88, 0x65, 0xab, 0x44, 0x00, 0x1f, 0xdb, 0x7d, 0x8c, 0x5e, 0x83, 0x39, 0x1f, 0x77,
	0x9d, 0x20, 0xc4, 0x7e, 0x33, 0x74, 0xfa, 0x98, 0x8d, 0x93, 0x35, 0x1b, 0x01, 0x9f, 0x39, 0x7d,
	0x8c, 0xf6, 0xa1, 0x4c, 0xbb, 0x15, 0x9e, 0x0f, 0x30, 0x9d, 0xf6, 0xf9, 0xfb, 0xab, 0x69, 0x91,
	0x9e, 0x9d, 0x0f, 0xf0, 0xfe, 0xdc, 0xe5, 0x45, 0x23, 0x21, 0xb6, 0x4a, 0x43, 0x8e, 0x20, 0xda,
	0x33, 0xf0, 0x1c, 0x37, 0x6c, 0xda, 0x7d, 0x3a, 0x1f, 0xc5, 0x44, 0x7b, 0x44, 0xb8, 0x55, 0xa1,
	0xa5, 0x07, 0xb4, 0x80, 0xde, 0x86, 0x4a, 0xcb, 0x73, 0xdc, 0xa8, 0x4e, 0x89, 0xd6, 0x59, 0xb8,
	0xbc, 0x68, 0x88, 0x60, 0x0b, 0x48, 0x81, 0xd7, 0x58, 0x86, 0x99, 0xbe, 0x17, 0x86, 0x5e, 0xad,
	0x4c, 0x05, 0x65, 0x05, 0xf4, 0x75, 0xa8, 0xd0, 0x3e, 0x61, 0x3a, 0xea, 0x35, 0x18, 0x31, 0x2b,
	0x30, 0x4c, 0x56, 0xd6, 0x5d, 0xa0, 0xec, 0x9b, 0xa1, 0x17, 0xda, 0xbd, 0x5a, 0x25, 0x59, 0x24,
	0x09, 0xd4, 0x2a, 0x93, 0xef, 0x67, 0xe4, 0x13, 0xfd, 0x3a, 0xcc, 0x53, 0xc4, 0xc0, 0x3e, 0xe7,
	0x55, 0x66, 0x69, 0x15, 0x74, 0x79, 0xd1, 0x50, 0x30, 0xd6, 0x2c, 0x29, 0x3f, 0xb5, 0xcf, 0x59,
	0xcd, 0x07, 0xb0, 0x48, 0xf1, 0x3e, 0xee, 0x38, 0xbd, 0x1e, 0xaf, 0x3c, 0x47, 0x2b, 0xaf, 0x5c,
	0x5e, 0x34, 0xd2, 0x48, 0x6b, 0x81, 0x80, 0x2c, 0x0a, 0xa1, 0x2c, 0xcc, 0x2e, 0x2c, 0xc4, 0x06,
	0x67, 0x22, 0xb5, 0xbd, 0x29, 0xa9, 0x6d, 0xb6, 0x65, 0xfb, 0x36, 0xa0, 0x0f, 0x9d, 0x20, 0xdc,
	0xb7, 0x5d, 0x17, 0xfb, 0x41, 0x64, 0xac, 0xbe, 0x0e, 0x95, 0x23, 0x0a, 0x61, 0x8a, 0x92, 0xd3,
	0x6d, 0x4d, 0xac, 0x0a, 0xd1, 0x08, 0x0b, 0x8e, 0xe2, 0x6f, 0xf3, 0xef, 0x73, 0x50, 0x60, 0x28,
	0xb4, 0x07, 0x65, 0xa7, 0x6f, 0x77, 0x71, 0x73, 0xe8, 0xf7, 0xd8, 0x36, 0xc0, 0x94, 0x2a, 0x06,
	0x5a, 0x25, 0xfa, 0xf9, 0xdc, 0xef, 0xa1, 0x27, 0x50, 0x3e, 0x75, 0xf0, 0x99, 0xd8, 0xde, 0xa6,
	0xae, 0xbd, 0xef, 0x3a, 0xf8, 0x2c, 0x51, 0xcf, 0xb8, 0x8a, 0x55, 0x3a, 0xe5, 0x08, 0xa2, 0x69,
	0x44, 0x39, 0x7c, 0xd7, 0xee, 0xc5, 0x5b, 0x1e, 0xd3, 0x34, 0x01, 0x6c, 0x41, 0x54, 0x38, 0x6c,
	0xa3, 0x06, 0xcc, 0x84, 0x4e, 0xd8, 0xe3, 0x4b, 0x6a, 0xbf, 0x7c, 0x79, 0xd1, 0x60, 0x00, 0x8b,
	0xfd, 0xa0, 0x37, 0xa0, 0xd4, 0x73, 0xdc, 0x13, 0x2a, 0xc7, 0x0c, 0xa5, 0x99, 0xbd, 0xbc, 0x68,
	0xc4, 0x30, 0xab, 0x48, 0xbe, 0x88, 0x14, 0x6f, 0x40, 0x29, 0x3c, 0xc6, 0x7d, 0x4c, 0x1a, 0x66,
	0x46, 0x95, 0x12, 0x46, 0x30, 0xab, 0x48, 0xbf, 0x0e, 0xdb, 0x66, 0x1f, 0x96, 0xa4, 0x61, 0x9f,
	0x68, 0x8e, 0x6f, 0x41, 0xbe, 0xe7, 0x04, 0xc4, 0xde, 0x4f, 0xa7, 0x69, 0x19, 0x6b, 0x8b, 0x52,
	0x98, 0x16, 0x2c, 0x92, 0x39, 0x7f, 0x44, 0xb7, 0x8c, 0x51, 0x3b, 0x12, 0x7a, 0x1d, 0xe6, 0xf9,
	0x56, 0x13, 0xe1, 0x73, 0xcc, 0x94, 0x30, 0xe8, 0x73, 0xb6, 0x6f, 0x7d, 0x0f, 0xd6, 0x0e, 0x6c,
	0xb7, 0x85, 0x7b, 0xd7, 0xce, 0xf9, 0x09, 0xd4, 0xd2, 0x9c, 0x27, 0xf2, 0x4d, 0xf6, 0x01, 0x7d,
	0x69, 0x1e, 0x47, 0xb0, 0x4a, 0xa6, 0x2a, 0xe1, 0x13, 0x8c, 0x14, 0x13, 0x41, 0x7e, 0x60, 0x77,
	0x31, 0x17, 0x8e, 0x7e, 0x13, 0xdb, 0x4d, 0x7e, 0x9b, 0x81, 0xf3, 0x13, 0xcc, 0xfd, 0xb0, 0x12,
	0x01, 0x7c, 0xe2, 0xfc, 0x04, 0x9b, 0x1e, 0xac, 0xa5, 0xda, 0x98, 0x74, 0xd9, 0x0b, 0x2a, 0xa1,
	0x5d, 0xf6, 0x54, 0x21, 0x3e, 0x82, 0x15, 0x52, 0x3a, 0xf0, 0x7a, 0x3d, 0xdc, 0x22, 0x7b, 0xed,
	0x48, 0x99, 0x36, 0xa0, 0x6c, 0xb7, 0x42, 0xe7, 0x14, 0x27, 0xb3, 0x56, 0x62, 0x80, 0xc3, 0xb6,
	0xf9, 0x08, 0x56, 0x55, 0x76, 0x13, 0x8d, 0xf5, 0x26, 0xd4, 0x1f, 0xe3, 0xf0, 0x50, 0xf0, 0x00,
	0xdc, 0x8e, 0xd3, 0xe5, 0x7d, 0x33, 0x7f, 0x6e, 0x00, 0x12, 0x70, 0x76, 0x88, 0xbb, 0x9e, 0x7f,
	0x8e, 0x7e, 0x1f, 0x6a, 0xa2, 0x17, 0xc1, 0xc1, 0xcc, 0x92, 0x30, 0xa7, 0xfa, 0x75, 0xb9, 0xd1,
	0x34, 0x0f, 0x6a, 0x51, 0x36, 0x2f, 0x2f, 0x1a, 0x99, 0x9c, 0xac, 0x55, 0x47, 0x5b, 0x8b, 0xcc,
	0x35, 0xdd, 0x8e, 0xd9, 0x6e, 0x4e, 0xbf, 0xcd, 0x5f, 0x18, 0xb0, 0xa1, 0x95, 0x63, 0xa2, 0x39,
	0xfd, 0x1a, 0xcc, 0x92, 0x39, 0x6b, 0x32, 0x23, 0x1b, 0x5c, 0xb9, 0xdc, 0x2b, 0xbd, 0xc4, 0xaa,
	0xa0, 0xcf, 0xa0, 0x46, 0x2b, 0x6a, 0x64, 0xaa, 0x4d, 0x53, 0x26, 0x3b, 0xa3, 0x06, 0xc6, 0x5a,
	0x25, 0x1c, 0xd2, 0x70, 0xf3, 0x9f, 0x72, 0x6c, 0x59, 0x24, 0xa8, 0x78, 0x59, 0xfc, 0xf0, 0x7a,
	0xe6, 0xe3, 0xaa, 0x11, 0x7f, 0xa9, 0xd5, 0x85, 0xea, 0x50, 0x1a, 0xf8, 0xde, 0xa9, 0xe3, 0xb6,
	0x62, 0xaf, 0x29, 0x2a, 0x13, 0x66, 0x2d, 0x27, 0x3c, 0x67, 0x66, 0xdd, 0xa2, 0xdf, 0xe2, 0x1a,
	0x28, 0x48, 0x6b, 0xa0, 0x0e, 0xa5, 0x9e, 0x1d, 0x3a, 0xe1, 0xb0, 0x8d, 0xa9, 0xd7, 0x63, 0x58,
	0x71, 0x19, 0x6d, 0x42, 0xb9, 0xe7, 0xb9, 0x5d, 0x86, 0x2c, 0x51, 0x64, 0x02, 0x30, 0x3f, 0x37,
	0xa0, 0x1e, 0xad, 0x70, 0xcd, 0x90, 0xbd, 0xb4, 0x48, 0xd7, 0xdf, 0x45, 0x74, 0x13, 0x16, 0x7c,
	0xdc, 0xc3, 0x76, 0x80, 0x63, 0xe3, 0x5c, 0xa6, 0xac, 0xe7, 0x38, 0x98, 0x5b, 0xe7, 0x73, 0xd8,
	0xd0, 0x4a, 0x32, 0xa9, 0x77, 0x2d, 0xd8, 0xab, 0x5a, 0x96, 0x5e, 0x70, 0xab, 0xf5, 0x9f, 0x15,
	0x80, 0x04, 0x48, 0x3c, 0x5e, 0x41, 0xd1, 0x62, 0x8b, 0x35, 0x9b, 0x00, 0x0f, 0xdb, 0xe8, 0x33,
	0x10, 0x22, 0x0a, 0xa6, 0x84, 0xd3, 0x3a, 0xf7, 0x22, 0xe1, 0x4b, 0x8d, 0xc1, 0xd2, 0xe5, 0x45,
	0x43, 0xad, 0x68, 0xcd, 0x3b, 0x12, 0x91, 0x38, 0x0b, 0x79, 0x69, 0x16, 0x6a, 0x50, 0xa4, 0x21,
	0x89, 0x1f, 0x29, 0x56, 0x54, 0x8c, 0xf5, 0xad, 0x20, 0xe8, 0x5b, 0x1d, 0x4a, 0x6d, 0x27, 0x08,
	0x7d, 0xa7, 0xc5, 0x9c, 0xe9, 0xb2, 0x15, 0x97, 0x19, 0x27, 0x37, 0xc4, 0xdc, 0x67, 0xa6, 0x9c,
	0x68, 0x91, 0xe9, 0x8c, 0x7f, 0xc2, 0xdd, 0x63, 0xfa, 0x8d, 0x1a, 0x50, 0x69, 0xf9, 0xd8, 0x0e,
	0x31, 0x8b, 0x00, 0x80, 0x76, 0x0a, 0x18, 0x88, 0xfa, 0xff, 0xdf, 0x80, 0x12, 0xf5, 0x5a, 0xc9,
	0x30, 0x54, 0xe8, 0x30, 0xac, 0xc8, 0xc3, 0x40, 0x9c, 0x58, 0x22, 0x3f, 0xf5, 0x5b, 0x22, 0x52,
	0xab, 0x38, 0x60, 0x60, 0xe2, 0x2a, 0x0d, 0x7c, 0xa7, 0x85, 0xb9, 0x2f, 0x4c, 0x5d, 0x25, 0x0a,
	0xb0, 0xd8, 0x0f, 0xd1, 0x5a, 0x6a, 0x73, 0x42, 0xbb, 0x1b, 0xd4, 0xe6, 0x76, 0xa6, 0x89, 0x30,
	0x04, 0xf0, 0xcc, 0xee, 0x06, 0xe8, 0x2b, 0xb0, 0xaa, 0x1a, 0x24, 0xea, 0x00, 0x06, 0xb5, 0x79,
	0x4a, 0xb9, 0x2c, 0x1b, 0x9b, 0x43, 0x8a, 0x23, 0x8a, 0x49, 0x6b, 0x61, 0xf7, 0x34, 0x22, 0x5f,
	0xa0, 0xe4, 0x73, 0x04, 0xfc, 0x81, 0x7b, 0xca, 0xe9, 0x92, 0xc8, 0xaa, 0x2a, 0x45, 0x56, 0x52,
	0xd4, 0xb4, 0xa8, 0x44, 0x4d, 0x77, 0x01, 0x7a, 0xce, 0x49, 0x14, 0x5a, 0xa2, 0x24, 0x28, 0x48,
	0xa0, 0x56, 0x99, 0x7c, 0xc7, 0xc1, 0x68, 0xcb, 0xeb, 0xf7, 0xb1, 0x1b, 0xf2, 0x1a, 0x4b, 0x49,
	0x30, 0x2a, 0x21, 0x48, 0x48, 0x40, 0x8b, 0x42, 0x3d, 0xba, 0x39, 0xf2, 0x7a, 0xcb, 0x62, 0x3d,
	0x01, 0x41, 0xea, 0xd1, 0x62, 0x1c, 0xd8, 0x0b, 0x11, 0xf7, 0x4a, 0xd2, 0x3d, 0x21, 0xdc, 0x2e,
	0xfb, 0x71, 0xb0, 0x7d, 0x8b, 0x69, 0x12, 0x71, 0x9e, 0x6a, 0xab, 0x64, 0x81, 0xb3, 0x79, 0x8c,
	0x60, 0x56, 0xfc, 0x75, 0xe5, 0xa6, 0xb9, 0xf6, 0xca, 0x37, 0xcd, 0xa7, 0xb0, 0xaa, 0xea, 0x00,
	0x17, 0xb1, 0x46, 0x45, 0xac, 0x5f, 0x5e, 0x34, 0x32, 0x28, 0xac, 0x65, 0x47, 0x56, 0x10, 0x26,
	0xf9, 0xeb, 0x50, 0x74, 0x3a, 0x4d, 0x32, 0x51, 0xb5, 0xf5, 0x1d, 0xe3, 0x56, 0x69, 0xbf, 0x72,
	0x79, 0xd1, 0x88, 0x40, 0x56, 0xc1, 0xe9, 0x7c, 0xe8, 0x9c, 0x60, 0x32, 0x0d, 0x4e, 0xa7, 0xd9,
	0x8a, 0xdd, 0x94, 0x5a, 0x9d, 0xd2, 0xd2, 0x69, 0x90, 0x10, 0xd6, 0xac, 0xd3, 0x49, 0xbc, 0x19,
	0x32, 0xae, 0xb1, 0x55, 0xdd, 0x48, 0xc6, 0x35, 0x82, 0x09, 0x36, 0xf6, 0x4d, 0xd1, 0xc6, 0x6e,
	0x52, 0x52, 0x1a, 0xa9, 0xc4, 0x40, 0xd1, 0xe4, 0xbe, 0x07, 0x0b, 0xb1, 0x52, 0x73, 0xf9, 0xb7,
	0xa8, 0xfc, 0xd4, 0xfa, 0x28, 0x28, 0x6b, 0x0e, 0x73, 0x55, 0x67, 0x12, 0xef, 0x42, 0xc1, 0xe9,
	0x34, 0x8f, 0x86, 0xe7, 0xb5, 0x6d, 0x2a, 0x04, 0x3d, 0x30, 0x60, 0x10, 0x6b, 0xc6, 0xe9, 0xec,
	0x0f, 0xcf, 0x69, 0x00, 0x16, 0x34, 0x99, 0x6f, 0x5d, 0x6b, 0x50, 0x2a, 0x16, 0x80, 0x45, 0x40,
	0xab, 0xe4, 0x04, 0xcc, 0xe1, 0x44, 0x0f, 0xc8, 0x42, 0xa0, 0x5e, 0x86, 0x13, 0x06, 0xb5, 0x1d,
	0x9d, 0xff, 0xb8, 0x6f, 0x3b, 0x61, 0xb4, 0x38, 0x22, 0x4a, 0xab, 0xcc, 0x3c, 0x0e, 0x27, 0x0c,
	0xd0, 0x37, 0xa0, 0x4a, 0x60, 0x92, 0x3c, 0xbb, 0xc9, 0x51, 0x8f, 0x8a, 0xb3, 0xe6, 0x09, 0x24,
	0x91, 0xc8, 0xfc, 0x1d, 0xc8, 0x13, 0x46, 0x24, 0xf2, 0xa7, 0x64, 0xfc, 0xe8, 0x90, 0x15, 0xc8,
	0x32, 0xa6, 0x1c, 0x04, 0x6f, 0xab, 0x44, 0x00, 0x74, 0x19, 0xef, 0xc2, 0x2c, 0x45, 0x0e, 0xb0,
	0xdf, 0xc2, 0xd1, 0xd9, 0x94, 0x55, 0x21, 0xb0, 0xa7, 0x0c, 0x64, 0x0e, 0x99, 0x8f, 0xfd, 0xab,
	0xde, 0xb3, 0xfe, 0xca, 0xa0, 0x07, 0x82, 0x02, 0x7c, 0x94, 0xa7, 0x9d, 0xda, 0xd6, 0x72, 0x9a,
	0x6d, 0xad, 0xae, 0x6a, 0x64, 0xd6, 0x3e, 0xbf, 0xa9, 0xba, 0x22, 0xec, 0x5c, 0x4c, 0xec, 0xcf,
	0xf5, 0x9f, 0x8b, 0x89, 0xa3, 0x40, 0x8f, 0x19, 0x3a, 0xb0, 0x2e, 0x3b, 0x0c, 0x64, 0x39, 0x8e,
	0x1c, 0x89, 0x35, 0x28, 0x52, 0x33, 0x1c, 0x8f, 0x41, 0x81, 0x14, 0x19, 0x22, 0x5a, 0xed, 0x64,
	0xe3, 0x2d, 0x45, 0x0b, 0xdc, 0xfc, 0x26, 0xd4, 0x75, 0xed, 0x4c, 0x14, 0x8c, 0xfc, 0xa9, 0x01,
	0x0d, 0x99, 0xd9, 0x4b, 0x84, 0x4b, 0xaf, 0xc5, 0x06, 0x5f, 0x9e, 0xc4, 0x04, 0xc8, 0x67, 0x5a,
	0x32, 0x47, 0x4c, 0x18, 0xc9, 0xf6, 0x98, 0x4f, 0x61, 0x27, 0xbb, 0x17, 0x13, 0x09, 0xb6, 0xc5,
	0x3c, 0xb8, 0x07, 0x2d, 0x76, 0x5a, 0xca, 0x0d, 0x73, 0xe4, 0x8c, 0x9a, 0x8f, 0x60, 0x41, 0x41,
	0x51, 0xbf, 0x22, 0x32, 0xec, 0xb1, 0xa8, 0x10, 0x81, 0x58, 0xc4, 0x9b, 0x8a, 0x82, 0xfe, 0x10,
	0x36, 0xf5, 0xcd, 0x4c, 0xa4, 0x6f, 0xef, 0x48, 0xab, 0x6e, 0x4b, 0xa6, 0x55, 0xda, 0xe0, 0x4b,
	0xef, 0x37, 0x60, 0xed, 0x31, 0x8e, 0xdb, 0x17, 0x43, 0xc9, 0x91, 0x02, 0x99, 0xff, 0x95, 0x83,
	0xd9, 0x07, 0xec, 0x38, 0xf9, 0xd9, 0x31, 0xee, 0x63, 0xb4, 0x2e, 0x1c, 0xed, 0x30, 0xf2, 0xe8,
	0x30, 0x47, 0x65, 0x96, 0x4b, 0x8d, 0xce, 0x0a, 0x14, 0x42, 0xbb, 0x9b, 0x24, 0x60, 0x66, 0x42,
	0xbb, 0x7b, 0xd8, 0x26, 0x76, 0x4e, 0x38, 0x77, 0x8a, 0x0e, 0x9b, 0x10, 0xe4, 0xdb, 0x38, 0x68,
	0x45, 0x11, 0x09, 0xf9, 0x26, 0x2d, 0xb0, 0xe8, 0xaf, 0x47, 0xcf, 0xa0, 0x98, 0xf3, 0xc8, 0x4f,
	0xdd, 0x7a, 0xcf, 0xfd, 0x1e, 0xf1, 0x13, 0x86, 0x01, 0x8e, 0xfc, 0x84, 0x62, 0xe2, 0x27, 0x24,
	0x50, 0xab, 0x4c, 0xbe, 0x63, 0xb7, 0x82, 0x1e, 0x9d, 0xb5, 0x84, 0xc3, 0x58, 0x4a, 0x9e, 0x40,
	0x2d, 0x7a, 0xb8, 0xc6, 0xc8, 0x15, 0xb7, 0xb2, 0x9c, 0x72, 0x2b, 0xc9, 0xe0, 0xd8, 0x5d, 0x66,
	0x9a, 0x81, 0xb9, 0xa9, 0xa1, 0xdd, 0xa5, 0x96, 0x79, 0x43, 0x3c, 0x04, 0xac, 0x30, 0xb3, 0x1d,
	0x9d, 0xfa, 0x99, 0xff, 0x62, 0x40, 0x2d, 0x3d, 0x45, 0xbf, 0xda, 0x28, 0xf9, 0x3d, 0xa8, 0x30,
	0x8f, 0x95, 0xcc, 0x66, 0xc0, 0x03, 0xe3, 0xba, 0xa2, 0x5f, 0x82, 0x26, 0x58, 0x74, 0xf7, 0xa3,
	0x9f, 0x81, 0xf9, 0x33, 0x03, 0xb6, 0x04, 0x25, 0x0f, 0xf6, 0xcf, 0x63, 0x1d, 0x1c, 0x53, 0xd3,
	0xbe, 0x54, 0xec, 0x27, 0x45, 0x1d, 0xe6, 0xcf, 0x0a, 0x50, 0xe4, 0x3d, 0x45, 0x5b, 0x00, 0x51,
	0x72, 0x24, 0x6e, 0xb5, 0xcc, 0x21, 0xe3, 0xa8, 0x6c, 0x56, 0xd2, 0x30, 0x43, 0x69, 0x15, 0x0d,
	0x99, 0x49, 0x69, 0x88, 0xec, 0x67, 0x17, 0x5e, 0xda, 0xcf, 0x2e, 0x4e, 0xe8, 0x67, 0x97, 0xc6,
	0xf3, 0xb3, 0xdf, 0x86, 0x4a, 0x70, 0x6c, 0xfb, 0x51, 0xff, 0xca, 0xc9, 0xa1, 0xb1, 0x00, 0xb6,
	0x80, 0x16, 0x74, 0x4b, 0xa8, 0x32, 0x6a, 0x09, 0x49, 0x71, 0xd1, 0xac, 0x12, 0x17, 0x49, 0x6b,
	0x64, 0x5e, 0x5e, 0x23, 0x62, 0x04, 0xb8, 0x20, 0x47, 0x80, 0x13, 0x05, 0x3c, 0x82, 0xa3, 0x8c,
	0x5e, 0xc2, 0x51, 0x5e, 0x1a, 0xcf, 0x51, 0x6e, 0x40, 0x85, 0x49, 0x72, 0xe6, 0xb4, 0xc3, 0x63,
	0x16, 0xe5, 0x58, 0x40, 0x41, 0x9f, 0x12, 0x08, 0x71, 0xd4, 0x18, 0xc1, 0x31, 0x76, 0xba, 0xc7,
	0x3c, 0xa4, 0xb1, 0x58, 0xa5, 0x27, 0x14, 0x84, 0x1e, 0xc2, 0x22, 0x1d, 0xaa, 0x48, 0x7f, 0xe9,
	0x90, 0xad, 0xea, 0x9c, 0xad, 0x68, 0x59, 0xda, 0x5d, 0x8b, 0x86, 0x88, 0x49, 0x39, 0x30, 0xcf,
	0x61, 0x3b, 0x6b, 0x61, 0x4e, 0x64, 0x5f, 0x6e, 0x4b, 0xfb, 0xcf, 0x8a, 0xb6, 0x23, 0x7c, 0xdf,
	0xf9, 0x16, 0x2c, 0x12, 0xa3, 0xc6, 0x61, 0xa3, 0x3c, 0x05, 0x79, 0xa5, 0xe6, 0x94, 0x95, 0x6a,
	0xf6, 0x01, 0x89, 0xcc, 0x26, 0xed, 0xbb, 0xe0, 0xab, 0x65, 0xf5, 0x9d, 0x3a, 0x6a, 0x2d, 0x76,
	0x92, 0xcb, 0x81, 0xaf, 0xc8, 0x4b, 0x7b, 0x0c, 0x6b, 0xa9, 0x46, 0x26, 0xf2, 0x64, 0xfe, 0xd8,
	0x80, 0x4d, 0x81, 0xd3, 0xff, 0x8b, 0x7f, 0xf6, 0x11, 0x6c, 0x65, 0x74, 0x61, 0x22, 0x91, 0xde,
	0x85, 0xd5, 0x64, 0xbe, 0xd9, 0x86, 0xc3, 0x65, 0x11, 0x3d, 0x90, 0x9c, 0xe4, 0x81, 0x98, 0x67,
	0xcc, 0xd3, 0x91, 0x2a, 0x4d, 0xa4, 0x29, 0xf7, 0x24, 0x4d, 0xb9, 0x6a, 0x17, 0x64, 0xea, 0xf2,
	0x37, 0x06, 0x40, 0xb2, 0xea, 0x04, 0x47, 0xc7, 0x10, 0x1d, 0x1d, 0xd1, 0x3d, 0xc8, 0xc9, 0xee,
	0x81, 0xec, 0xb8, 0x4c, 0xbf, 0x9c, 0xe3, 0x92, 0x1f, 0x61, 0x75, 0xcd, 0xbb, 0x34, 0xf6, 0x12,
	0xcc, 0x04, 0x1f, 0x4a, 0x7d, 0x3f, 0x79, 0x68, 0x24, 0x92, 0x5f, 0x7f, 0x68, 0x24, 0x70, 0x67,
	0x43, 0xf8, 0xb7, 0x06, 0xd4, 0x64, 0x4b, 0x25, 0x74, 0x74, 0x87, 0x7b, 0x35, 0xac, 0xb7, 0xa4,
	0xf9, 0x69, 0x62, 0x50, 0xf9, 0xce, 0x71, 0xd8, 0x0e, 0xae, 0xcf, 0x7d, 0x20, 0x83, 0xe2, 0x74,
	0x9a, 0x2e, 0x3e, 0xa3, 0xdb, 0x77, 0xc9, 0x9a, 0x71, 0x3a, 0x1f, 0xe3, 0x33, 0x33, 0x84, 0x75,
	0x4d, 0xf7, 0x5e, 0xb5, 0x0d, 0xfd, 0x0b, 0x23, 0x49, 0x89, 0x71, 0xcc, 0xb5, 0x9c, 0x96, 0xcb,
	0x22, 0x6b, 0xce, 0xbc, 0x67, 0x74, 0x67, 0xde, 0x01, 0x9b, 0x22, 0xb9, 0x33, 0xaf, 0x7a, 0x08,
	0xfe, 0xd5, 0x00, 0xf4, 0x09, 0x76, 0xdb, 0x07, 0xcc, 0xc1, 0x19, 0x69, 0xd2, 0x04, 0x47, 0x21,
	0x27, 0x3b, 0x0a, 0x5b, 0x00, 0x91, 0xd3, 0x14, 0xfb, 0x73, 0x65, 0x0e, 0x61, 0xa9, 0x3d, 0xef,
	0xe8, 0x05, 0x71, 0x8d, 0xe2, 0x01, 0x2a, 0x31, 0xc0, 0x61, 0x1b, 0xbd, 0x0f, 0x91, 0x87, 0xc5,
	0x0e, 0x07, 0x67, 0xe8, 0xe1, 0xe0, 0xba, 0xdc, 0x71, 0xde, 0x45, 0x9a, 0xb6, 0xa9, 0xb4, 0x92,
	0x82, 0x79, 0x00, 0x4b, 0x92, 0x08, 0x13, 0x99, 0xc4, 0x7f, 0x30, 0xa2, 0xf4, 0x22, 0xe5, 0x32,
	0xd6, 0xa6, 0x34, 0x42, 0xe4, 0x2f, 0x25, 0x95, 0xb8, 0xb1, 0x15, 0x75, 0x1b, 0x9b, 0xd4, 0xd1,
	0x89, 0x44, 0xfe, 0x67, 0x83, 0x5d, 0x10, 0xe0, 0x9c, 0x46, 0xa7, 0x9c, 0x55, 0x81, 0x72, 0x2f,
	0x25, 0x90, 0xa4, 0x01, 0xd3, 0x8a, 0x06, 0x44, 0xcb, 0x2d, 0x9f, 0xb5, 0xdc, 0x66, 0x94, 0x6c,
	0xf6, 0x4f, 0xf3, 0x50, 0xe4, 0x4d, 0x29, 0xf3, 0x60, 0xa8, 0xf3, 0xa0, 0xc4, 0x0d, 0xb9, 0x54,
	0xdc, 0x70, 0x65, 0xcf, 0xde, 0x4b, 0x2f, 0xdf, 0x7c, 0x72, 0x7e, 0xaa, 0xa0, 0x94, 0x35, 0xad,
	0x44, 0x24, 0x33, 0x63, 0x44, 0x24, 0x3e, 0x1e, 0xf4, 0x9c, 0x78, 0xaf, 0x2a, 0x24, 0x91, 0x85,
	0x84, 0xb0, 0x66, 0x79, 0x91, 0xd5, 0xa3, 0x7d, 0x64, 0xe8, 0xa8, 0x8f, 0x45, 0xb1, 0x8f, 0x12,
	0xca, 0x8a, 0x58, 0xf1, 0x3e, 0x3e, 0x04, 0x94, 0xf0, 0x8e, 0x47, 0x91, 0xc5, 0x34, 0xab, 0x97,
	0x17, 0x0d, 0x0d, 0xd6, 0xaa, 0xc6, 0xcd, 0x47, 0x83, 0x2c, 0x18, 0x86, 0xb2, 0x6c, 0x18, 0x84,
	0x60, 0x00, 0xb2, 0x83, 0x81, 0x24, 0xce, 0xa8, 0x64, 0xc7, 0x19, 0xb3, 0x72, 0x9c, 0x61, 0x7a,
	0xb0, 0x2c, 0x2b, 0xf0, 0xf5, 0x9b, 0xcb, 0xc8, 0xaa, 0x30, 0x73, 0xf9, 0x5d, 0x58, 0x39, 0x38,
	0xc6, 0xad, 0x93, 0xe8, 0x12, 0xc5, 0x75, 0xdd, 0x46, 0xf1, 0x61, 0x55, 0xe5, 0x3b, 0x91, 0x28,
	0x7b, 0x50, 0x76, 0x3a, 0xd1, 0x61, 0x7c, 0x4e, 0x38, 0x8c, 0xef, 0x24, 0x87, 0xf1, 0x1d, 0x76,
	0x18, 0x6f, 0x36, 0xd9, 0xea, 0xff, 0x08, 0x07, 0x81, 0xdd, 0xc5, 0xaf, 0xe0, 0xc2, 0xc9, 0x7f,
	0x1b, 0x50, 0xe4, 0xdc, 0xc9, 0x12, 0xed, 0xb3, 0x4f, 0x61, 0x89, 0x72, 0xc8, 0x38, 0x4b, 0xf4,
	0x3b, 0x50, 0xa1, 0xd9, 0x28, 0x3e, 0x16, 0x2c, 0xbb, 0xda, 0x90, 0xc7, 0x82, 0xb7, 0x65, 0x61,
	0xbb, 0xcd, 0x86, 0x85, 0x05, 0xd7, 0x42, 0x3d, 0x8b, 0xa6, 0xb4, 0xf8, 0x9d, 0x68, 0xfd, 0x21,
	0x83, 0xa0, 0xc7, 0x33, 0x59, 0x91, 0x70, 0x41, 0xd4, 0xd0, 0x48, 0x09, 0x93, 0x71, 0xbc, 0x7e,
	0x25, 0x8c, 0x24, 0x63, 0x4a, 0xf8, 0xd7, 0x06, 0x6c, 0x1e, 0xd0, 0xa1, 0x49, 0xce, 0x6b, 0xbf,
	0xed, 0xb7, 0x47, 0xdf, 0x1b, 0x1e, 0xef, 0xd4, 0xff, 0x7d, 0x21, 0x7d, 0x9b, 0xa7, 0xe3, 0xbc,
	0x2b, 0xf7, 0xe6, 0x11, 0x2b, 0xd0, 0x26, 0x79, 0x2a, 0x37, 0x4e, 0xde, 0x9a, 0x7f, 0x64, 0xc0,
	0x56, 0x46, 0xe7, 0x26, 0x3d, 0x92, 0x15, 0xfc, 0xdc, 0xad, 0xac, 0x14, 0x00, 0x6b, 0x82, 0x39,
	0xbb, 0x3f, 0xcf, 0xc1, 0x82, 0x82, 0x21, 0xd1, 0x81, 0x47, 0x3e, 0x84, 0x93, 0x55, 0x5a, 0x96,
	0x4f, 0xa1, 0x72, 0x57, 0x8f, 0xd6, 0xb4, 0x66, 0xb4, 0xbe, 0x39, 0xc1, 0x68, 0x8d, 0x4c, 0x7c,
	0xcf, 0x64, 0x24, 0xbe, 0x95, 0x65, 0x52, 0x48, 0x2d, 0x93, 0x28, 0x2a, 0x28, 0x8e, 0x95, 0x30,
	0xf9, 0x3e, 0xac, 0x4b, 0x59, 0x9a, 0xeb, 0x53, 0x22, 0xf3, 0xcf, 0x0d, 0xe5, 0x96, 0xd5, 0x97,
	0xd1, 0x81, 0xf7, 0x01, 0xf8, 0xe4, 0x8d, 0xad, 0x09, 0x65, 0x36, 0xbb, 0x44, 0xca, 0x1f, 0xc2,
	0x36, 0xb5, 0xad, 0x0a, 0xc9, 0xfe, 0xf0, 0xfc, 0x7a, 0x44, 0xf5, 0xa1, 0x91, 0xc9, 0x7f, 0x22,
	0x71, 0x93, 0xa4, 0x6b, 0x2e, 0x23, 0xe9, 0x6a, 0x3e, 0x65, 0xce, 0xaa, 0x60, 0xf1, 0xc6, 0x71,
	0x56, 0x05, 0x0b, 0x9c, 0x53, 0x2c, 0x70, 0xe4, 0x55, 0x4a, 0x1c, 0x27, 0xf2, 0x2a, 0xbf, 0xc2,
	0xb2, 0x70, 0x02, 0xa3, 0x07, 0xbd, 0xde, 0xc8, 0x07, 0x0a, 0x3c, 0xa7, 0xa6, 0xd6, 0x9a, 0xa8,
	0x07, 0x5f, 0x83, 0x4d, 0x7e, 0xaf, 0x99, 0xb3, 0x7b, 0xce, 0x6e, 0xf9, 0x8f, 0xec, 0xc4, 0x31,
	0x6c, 0x65, 0x54, 0x9c, 0x68, 0x1e, 0xd7, 0xa1, 0x34, 0x74, 0xc5, 0xe7, 0x12, 0x56, 0x71, 0xc8,
	0x18, 0x9a, 0x27, 0xd0, 0x48, 0xdf, 0x6f, 0xa2, 0x6a, 0xf3, 0x0a, 0xf6, 0xe1, 0x3f, 0x31, 0x60,
	0x27, 0xbb, 0xb5, 0xeb, 0x4f, 0x94, 0xa5, 0xac, 0x32, 0xdd, 0xb5, 0x3e, 0x85, 0xb5, 0x87, 0xb8,
	0x87, 0xc5, 0x7d, 0xe1, 0x7a, 0xd6, 0xdf, 0x13, 0xa8, 0xa5, 0x19, 0x4f, 0xa4, 0x38, 0x1f, 0xc3,
	0x32, 0xe3, 0x74, 0x4d, 0xc7, 0xaa, 0x1f, 0xc0, 0x8a, 0xc2, 0x6f, 0xa2, 0x6e, 0xfd, 0x36, 0x2c,
	0x90, 0xe9, 0x7b, 0x64, 0xbb, 0xaf, 0x40, 0x39, 0x8e, 0xa1, 0x9a, 0x30, 0x7f, 0xa5, 0xd7, 0x81,
	0xff, 0x32, 0x07, 0xf0, 0x74, 0x78, 0x14, 0x25, 0x8f, 0x32, 0x45, 0x88, 0xfd, 0xb2, 0x5c, 0x86,
	0x5f, 0x36, 0x2d, 0xfb, 0x65, 0x4a, 0x9a, 0x29, 0x9f, 0x4a, 0x33, 0xa9, 0xe9, 0x80, 0x99, 0x74,
	0x3a, 0x40, 0x49, 0x29, 0x14, 0x52, 0x29, 0x85, 0x0d, 0x28, 0x47, 0xa7, 0x8b, 0x41, 0xad, 0xc8,
	0x52, 0x2b, 0xfc, 0x78, 0x31, 0x20, 0xa2, 0x44, 0x67, 0x67, 0x25, 0x7a, 0x76, 0x56, 0x08, 0xd9,
	0xb9, 0x99, 0x94, 0x73, 0x29, 0x2b, 0x79, 0xc9, 0x1f, 0xc0, 0x32, 0x73, 0x94, 0xc6, 0xd5, 0xb6,
	0x2b, 0x8f, 0xfc, 0x92, 0x91, 0xe5, 0x9b, 0xfb, 0x07, 0xb0, 0xa2, 0xb0, 0x9f, 0x64, 0x76, 0xf7,
	0xc8, 0xac, 0x25, 0x0f, 0x04, 0x11, 0x82, 0x79, 0x86, 0x68, 0x06, 0xc3, 0x56, 0x0b, 0x07, 0x41,
	0x75, 0x0a, 0xad, 0xc3, 0x0a, 0x87, 0x39, 0x2e, 0x7f, 0xfc, 0x80, 0x7d, 0xdf, 0xf3, 0xab, 0x06,
	0x5a, 0x05, 0xc4, 0x51, 0x03, 0xdb, 0xb7, 0xfb, 0x1c, 0x9e, 0x43, 0xdb, 0x50, 0xe7, 0x70, 0x1f,
	0x0f, 0xb0, 0x1d, 0xf2, 0xe8, 0x84, 0xe3, 0xa7, 0x51, 0x1d, 0x56, 0x39, 0x9e, 0x0e, 0x05, 0x8d,
	0x96, 0x19, 0x2e, 0x8f, 0x76, 0x60, 0x53, 0xc4, 0x09, 0x27, 0xec, 0x8c, 0x62, 0x06, 0xed, 0xc2,
	0x56, 0xdc, 0xa1, 0xd8, 0x7a, 0x04, 0x76, 0xaf, 0xed, 0x71, 0x92, 0x02, 0x6a, 0xc0, 0x46, 0x9a,
	0x84, 0x78, 0x64, 0x8c, 0xa0, 0x28, 0xf4, 0xfc, 0xa8, 0xe7, 0xb5, 0x4e, 0x38, 0xbc, 0xb5, 0xf7,
	0x36, 0xa0, 0x83, 0x9e, 0x83, 0xdd, 0xf0, 0x69, 0xcf, 0x0e, 0x3b, 0x9e, 0xdf, 0xa7, 0x9e, 0x5b,
	0x1d, 0x56, 0x5b, 0x14, 0xda, 0x3c, 0xa3, 0x2f, 0x08, 0x9b, 0x03, 0x8e, 0xad, 0x4e, 0xed, 0xbd,
	0xcf, 0x9e, 0xde, 0xf1, 0xa8, 0x63, 0x0d, 0x96, 0x68, 0xb7, 0x39, 0xf3, 0x36, 0xee, 0xd8, 0xc3,
	0x5e, 0x58, 0x9d, 0x42, 0x2b, 0xb0, 0x28, 0x22, 0x68, 0xab, 0x55, 0x63, 0xef, 0x3e, 0x94, 0xa2,
	0xd7, 0x52, 0x68, 0x11, 0xe6, 0xe2, 0xb7, 0x52, 0xcd, 0x53, 0x67, 0x50, 0x9d, 0x42, 0x4b, 0xb0,
	0x90, 0x80, 0xec, 0x76, 0xdf, 0x71, 0xab, 0xc6, 0xde, 0x6f, 0x01, 0x24, 0x0f, 0x67, 0x48, 0xdf,
	0x84, 0x77, 0x36, 0x82, 0xbc, 0xd5, 0x29, 0x22, 0xa5, 0x88, 0x63, 0x77, 0xed, 0xab, 0xc6, 0xde,
	0x3f, 0xe6, 0x60, 0x5e, 0x7e, 0x0b, 0x43, 0x46, 0x8c, 0x93, 0xc6, 0x0f, 0x62, 0x64, 0x5e, 0x1b,
	0xb0, 0x96, 0x22, 0x88, 0x18, 0x0a, 0x9d, 0x48, 0x90, 0x34, 0xb1, 0x50, 0xcd, 0xa1, 0x2d, 0x58,
	0x4f, 0xe1, 0x7c, 0x32, 0x8c, 0x7e, 0x17, 0x57, 0xa7, 0xd1, 0x26, 0xd4, 0x52, 0xe8, 0x33, 0x7c,
	0x44, 0x0a, 0xd5, 0x3c, 0x99, 0xeb, 0x14, 0x76, 0x30, 0x3c, 0x6a, 0xf6, 0xbc, 0x16, 0xeb, 0xd8,
	0x8c, 0x96, 0x3f, 0x21, 0x39, 0xb2, 0x9d, 0x90, 0xa9, 0x82, 0x16, 0xcd, 0xfb, 0x5e, 0xd4, 0x12,
	0xf4, 0x89, 0x6c, 0x74, 0x6b, 0xaf, 0x96, 0xf6, 0xfe, 0xce, 0x80, 0x55, 0xfd, 0xd5, 0x45, 0x32,
	0xdd, 0xca, 0x05, 0xdf, 0xa6, 0x8b, 0xcf, 0xaa, 0x53, 0x64, 0x40, 0xd2, 0x08, 0xdb, 0x3f, 0x3a,
	0xaf, 0x1a, 0xa8, 0x06, 0xcb, 0x2a, 0xae, 0xe3, 0x63, 0x32, 0x54, 0x9a, 0x5a, 0xf1, 0x38, 0x69,
	0x70, 0x6c, 0x55, 0x55, 0xf3, 0x7b, 0x3f, 0x35, 0xa0, 0x9a, 0xf4, 0x90, 0xab, 0xe2, 0x16, 0xac,
	0x8b, 0xeb, 0x43, 0x55, 0xc8, 0x5d, 0xd8, 0x4a, 0xa3, 0xed, 0x61, 0x78, 0xec, 0xf9, 0xcd, 0x81,
	0x1d, 0x04, 0x55, 0x03, 0xdd, 0x81, 0x46, 0x26, 0x89, 0x8f, 0x5f, 0xe0, 0x56, 0x58, 0xfd, 0xdf,
	0xe8, 0x9f, 0xb1, 0xf7, 0x04, 0xe6, 0xe5, 0x0b, 0xd0, 0x64, 0x6a, 0xd5, 0x2e, 0xc7, 0xf3, 0x36,
	0xa5, 0x1b, 0x06, 0x3a, 0x65, 0xc6, 0xde, 0x3b, 0x50, 0xe4, 0xa1, 0x14, 0x59, 0x13, 0x51, 0x20,
	0xc5, 0x06, 0x89, 0xae, 0x89, 0x18, 0xc4, 0x47, 0x87, 0x34, 0x3e, 0x4b, 0xd6, 0xd1, 0x87, 0xce,
	0x09, 0xa6, 0xf5, 0xb6, 0x60, 0x3d, 0x31, 0x2d, 0x69, 0x65, 0x5e, 0x87, 0x15, 0x05, 0x1d, 0xaf,
	0x8d, 0x67, 0x50, 0x8d, 0xde, 0xa1, 0xc4, 0x82, 0xec, 0xc2, 0x56, 0x6c, 0x8c, 0x92, 0xde, 0x4a,
	0x1c, 0xa3, 0x06, 0x65, 0x92, 0x98, 0xeb, 0x29, 0xcc, 0xf1, 0xec, 0x07, 0x9f, 0x9d, 0x3a, 0xac,
	0xda, 0x0c, 0x90, 0x9e, 0x9a, 0x6d, 0xa8, 0x2b, 0x38, 0x79, 0x5e, 0x6e, 0xc3, 0xa6, 0x1e, 0x9f,
	0x9e, 0x94, 0x87, 0x50, 0x39, 0x90, 0x0e, 0x69, 0xd7, 0xc4, 0x23, 0x5e, 0x59, 0x84, 0x1a, 0x2c,
	0x4b, 0x48, 0xee, 0xe9, 0xb0, 0xde, 0x73, 0x2e, 0x49, 0xef, 0x23, 0x52, 0x5d, 0xef, 0x15, 0x5c,
	0xaa, 0xf7, 0x7a, 0x7c, 0xba, 0xf7, 0x3f, 0x82, 0x25, 0xe5, 0x2c, 0x9c, 0x4a, 0x71, 0x03, 0x76,
	0x9f, 0xb3, 0xb1, 0x66, 0x6c, 0x32, 0x26, 0xd9, 0x84, 0xed, 0x0c, 0xb2, 0x44, 0xb2, 0x27, 0xb0,
	0x98, 0x3a, 0x57, 0x22, 0xd2, 0x45, 0xb1, 0x54, 0xf4, 0x2a, 0x99, 0xf5, 0xb4, 0x3a, 0x45, 0x56,
	0x7c, 0x84, 0x13, 0x11, 0xc6, 0xde, 0xf7, 0x60, 0x49, 0x73, 0x16, 0x40, 0xac, 0x4b, 0xb4, 0xff,
	0xb2, 0x20, 0x37, 0xd1, 0x5d, 0xcf, 0x21, 0xbd, 0xdc, 0x81, 0xcd, 0x0c, 0x02, 0xfa, 0xf6, 0xb5,
	0x6a, 0xec, 0x7d, 0x1f, 0xaa, 0x9c, 0xf3, 0x63, 0xcf, 0x6b, 0x07, 0x91, 0x46, 0x46, 0xb5, 0xba,
	0x04, 0x28, 0x88, 0xef, 0x25, 0xe2, 0x67, 0x30, 0x8e, 0xc5, 0xbf, 0xff, 0x67, 0x3b, 0xb0, 0xfc,
	0x11, 0x7d, 0x18, 0xcc, 0x5b, 0xf8, 0x04, 0xfb, 0xa7, 0x4e, 0x0b, 0xa3, 0x4f, 0x61, 0x56, 0x7c,
	0xd7, 0x8f, 0x94, 0x53, 0x0f, 0xcd, 0xdf, 0x08, 0xa8, 0x9b, 0x57, 0x91, 0x30, 0xe7, 0xc4, 0x9c,
	0x42, 0xcf, 0xa0, 0x22, 0xbc, 0xc2, 0x47, 0xca, 0xeb, 0xa1, 0xf4, 0x5f, 0x01, 0xa8, 0xef, 0x5e,
	0x41, 0x11, 0x73, 0x7d, 0x02, 0x45, 0x1e, 0xda, 0x21, 0xe5, 0x4d, 0x86, 0xfc, 0xe6, 0xbe, 0xbe,
	0x95, 0x81, 0x8d, 0x39, 0x7d, 0x06, 0x73, 0xd2, 0x93, 0x6f, 0x64, 0x6a, 0x6b, 0x48, 0x0f, 0xf3,
	0xeb, 0xaf, 0x5d, 0x49, 0x23, 0xca, 0x2e, 0xbc, 0xd8, 0x54, 0x65, 0x4f, 0xbf, 0xa1, 0x55, 0x65,
	0xd7, 0x3c, 0xf7, 0x34, 0xa7, 0x50, 0x0f, 0x96, 0x34, 0x0f, 0xc5, 0xd0, 0xad, 0x54, 0x9f, 0x32,
	0xde, 0xc4, 0xd5, 0x6f, 0x8f, 0x41, 0x19, 0xb7, 0xf6, 0x1d, 0xe6, 0xee, 0xf0, 0x1b, 0xdf, 0x8d,
	0x74, 0x38, 0x20, 0x3d, 0xe3, 0xac, 0xef, 0x64, 0x13, 0xc4, 0x2c, 0x5b, 0x50, 0x55, 0xdf, 0x6a,
	0xa2, 0x1b, 0xca, 0x31, 0xbd, 0xfe, 0x95, 0x68, 0xfd, 0xe6, 0x28, 0xb2, 0xb8, 0x91, 0x1f, 0xb1,
	0x28, 0x4b, 0x78, 0x1e, 0x89, 0x5e, 0x4f, 0x8f, 0x6e, 0xfa, 0x85, 0x66, 0xfd, 0xc6, 0x08, 0xaa,
	0xb8, 0x85, 0x1f, 0xc0, 0xbc, 0xfc, 0x80, 0x11, 0xbd, 0x96, 0x16, 0x3e, 0x75, 0xbd, 0xa4, 0xfe,
	0xfa, 0xd5, 0x44, 0xaa, 0x00, 0xc2, 0xdd, 0x73, 0x9d, 0x00, 0xe9, 0x87, 0x61, 0x3a, 0x01, 0x34,
	0x17, 0xd8, 0xd9, 0x3c, 0xa8, 0x91, 0xb6, 0x3a, 0x0f, 0x19, 0x21, 0xbe, 0x3a, 0x0f, 0x59, 0x01,
	0x7b, 0xbc, 0xbe, 0x84, 0x16, 0xcc, 0x2b, 0xb4, 0x2f, 0x7b, 0x7d, 0x69, 0x79, 0x3b, 0xec, 0xa9,
	0xae, 0x7c, 0x73, 0x1b, 0xbd, 0x91, 0x1e, 0x60, 0xed, 0x1d, 0xf2, 0xfa, 0xad, 0xd1, 0x84, 0x71,
	0x53, 0xbf, 0x07, 0xb5, 0xac, 0x1b, 0xd5, 0xe8, 0xee, 0x55, 0x7c, 0xd2, 0x0a, 0x70, 0x6f, 0x5c,
	0xf2, 0xb8, 0x71, 0x9e, 0x92, 0x50, 0x6f, 0x45, 0xa3, 0xdb, 0xe9, 0x99, 0xce, 0xb8, 0xa0, 0x5d,
	0xdf, 0x1b, 0x87, 0x54, 0xd4, 0x0c, 0xf5, 0x8a, 0xad, 0xaa, 0x19, 0x19, 0xb7, 0xa4, 0x55, 0xcd,
	0xc8, 0xba, 0xa9, 0xcb, 0x34, 0x83, 0x1f, 0xa7, 0x30, 0x02, 0x55, 0x33, 0x74, 0x67, 0x37, 0xaa,
	0x66, 0x68, 0xcf, 0x63, 0xcc, 0x29, 0x34, 0x64, 0x2f, 0x4d, 0xd3, 0x37, 0xf9, 0xd0, 0x9b, 0x99,
	0x03, 0x91, 0xbe, 0x88, 0x5b, 0xbf, 0x33, 0x1e, 0xb1, 0x68, 0x2c, 0x93, 0xcb, 0x40, 0xaa, 0xb1,
	0x4c, 0xdd, 0xef, 0x53, 0x8d, 0x65, 0xfa, 0xce, 0x1e, 0x33, 0x03, 0xca, 0xbd, 0x37, 0xa4, 0xb1,
	0x20, 0xe9, 0xbb, 0x77, 0xaa, 0x19, 0xc8, 0xb8, 0x3c, 0x67, 0x4e, 0x21, 0x9f, 0xbd, 0xeb, 0x4e,
	0x5d, 0x46, 0x43, 0x7b, 0x99, 0x1c, 0xd2, 0x4a, 0xfd, 0xe6, 0x58, 0xb4, 0xa2, 0x54, 0xca, 0xe5,
	0x33, 0x55, 0x2a, 0xfd, 0x85, 0xb6, 0xfa, 0x8d, 0x11, 0x54, 0x8a, 0xdd, 0x11, 0xee, 0x99, 0x99,
	0x99, 0x35, 0xe3, 0xab, 0x53, 0x1a, 0xbb, 0x93, 0xbe, 0xd8, 0x65, 0x4e, 0xa1, 0x0e, 0x2c, 0xa6,
	0xae, 0x37, 0xa1, 0x9b, 0x57, 0xe9, 0x8a, 0xd0, 0xc6, 0x1b, 0x23, 0xe9, 0xc4, 0x65, 0xa8, 0x5e,
	0x21, 0x42, 0x19, 0xdb, 0x93, 0x72, 0xdf, 0xa9, 0x7e, 0x73, 0x14, 0x99, 0xe8, 0x4e, 0x68, 0xde,
	0xe6, 0xaa, 0xee, 0x44, 0xf6, 0x43, 0xe4, 0xfa, 0xed, 0x31, 0x28, 0x45, 0x97, 0x48, 0xb8, 0xdc,
	0xa3, 0xba, 0x44, 0xe9, 0xab, 0x4b, 0xaa, 0x4b, 0xa4, 0xb9, 0x19, 0x94, 0x2c, 0x12, 0x21, 0x6e,
	0x40, 0xda, 0x6d, 0x56, 0xbd, 0x0b, 0xa4, 0x5b, 0x24, 0x9a, 0x8b, 0x38, 0xe6, 0x14, 0xf1, 0x8f,
	0xc5, 0xab, 0x09, 0x48, 0xe3, 0xa9, 0x29, 0xf7, 0x6e, 0x54, 0xff, 0x58, 0x77, 0xb3, 0x81, 0x79,
	0x11, 0xf2, 0x55, 0x01, 0xd5, 0x8b, 0xd0, 0x5e, 0x50, 0x50, 0xbd, 0x08, 0xfd, 0x6d, 0x83, 0xa4,
	0xdf, 0x51, 0x36, 0x5b, 0xd7, 0x6f, 0xe5, 0xc6, 0x80, 0xae, 0xdf, 0x6a, 0x32, 0x3c, 0x19, 0x72,
	0x21, 0x98, 0xd2, 0x0d, 0x79, 0x3a, 0xa3, 0xa5, 0x1b, 0x72, 0x4d, 0x96, 0x2a, 0xd9, 0xdd, 0xe5,
	0x1c, 0x92, 0x6e, 0x77, 0xd7, 0xe6, 0xa6, 0x74, 0xbb, 0xbb, 0x3e, 0x1d, 0xc5, 0x4c, 0xa0, 0x36,
	0x53, 0xa4, 0x9a, 0xc0, 0xab, 0xf2, 0x50, 0xaa, 0x09, 0xbc, 0x32, 0xf5, 0xc4, 0xda, 0xd4, 0x26,
	0xd6, 0xd5, 0x36, 0xaf, 0xba, 0x1a, 0xa0, 0xb6, 0x79, 0x65, 0xa6, 0x9e, 0x0d, 0x69, 0x3a, 0x8b,
	0xab, 0x0e, 0x69, 0x66, 0x0e, 0xb9, 0x7e, 0x6b, 0x34, 0x61, 0xdc, 0xd4, 0x8f, 0x61, 0x2d, 0x23,
	0x8d, 0x8a, 0xee, 0x68, 0x74, 0x37, 0x33, 0x9b, 0x5b, 0xbf, 0x3b, 0x26, 0xb5, 0xe8, 0xaa, 0x65,
	0xa5, 0xc7, 0x54, 0x57, 0x6d, 0x44, 0xd2, 0x4e, 0x75, 0xd5, 0x46, 0x65, 0xdd, 0xcc, 0x29, 0xf4,
	0x2d, 0x28, 0x45, 0xf9, 0x17, 0xb4, 0x95, 0xae, 0x2d, 0x24, 0x7d, 0xea, 0xdb, 0x59, 0x68, 0x71,
	0x0f, 0x93, 0xce, 0xfc, 0xd5, 0x3d, 0x4c, 0x97, 0x6f, 0x50, 0xf7, 0x30, 0x6d, 0xd2, 0xc0, 0x9c,
	0xda, 0x7f, 0xe7, 0xf3, 0x5f, 0x6e, 0x4f, 0xfd, 0xcf, 0x2f, 0xb7, 0x8d, 0xcf, 0xbf, 0xd8, 0x36,
	0xfe, 0xfd, 0x8b, 0x6d, 0xe3, 0x17, 0x5f, 0x6c, 0x1b, 0x9f, 0x6d, 0x88, 0x7f, 0xc2, 0xf0, 0x3d,
	0xf6, 0xd3, 0xe4, 0xfc, 0x8e, 0x0a, 0x14, 0xf9, 0xee, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x27,
	0x41, 0x86, 0xb1, 0xe8, 0x50, 0x00, 0x00,
}

func (m *Status) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RefreshTokenRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RefreshTokenRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RefreshTokenRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x18
	}
	return len(dAtA) - i, nil
}

func (m *RefreshTokenResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RefreshTokenResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RefreshTokenResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WechatLoginRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WechatLoginRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WechatLoginRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Iv) > 0 {
		i -= len(m.Iv)
		copy(dAtA[i:], m.Iv)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Iv)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.EncryptedData) > 0 {
		i -= len(m.EncryptedData)
		copy(dAtA[i:], m.EncryptedData)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.EncryptedData)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Jscode) > 0 {
		i -= len(m.Jscode)
		copy(dAtA[i:], m.Jscode)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Jscode)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WechatLoginResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WechatLoginResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WechatLoginResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Jwt) > 0 {
		i -= len(m.Jwt)
		copy(dAtA[i:], m.Jwt)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Jwt)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetUserRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUserRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetUserRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetUserExtendRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUserExtendRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetUserExtendRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserExtend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserExtend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserExtend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InviteCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InviteCount))
		i--
		dAtA[i] = 0x30
	}
	if m.ArticleCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ArticleCount))
		i--
		dAtA[i] = 0x28
	}
	if m.InfomationCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationCount))
		i--
		dAtA[i] = 0x20
	}
	if m.UnReadCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UnReadCount))
		i--
		dAtA[i] = 0x18
	}
	if m.FansCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.FansCount))
		i--
		dAtA[i] = 0x10
	}
	if m.FollowCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.FollowCount))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetUserExtendResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUserExtendResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetUserExtendResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *User) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *User) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *User) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CoinRefillTotal != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CoinRefillTotal))
		i--
		dAtA[i] = 0x68
	}
	if m.CoinPayTotal != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CoinPayTotal))
		i--
		dAtA[i] = 0x60
	}
	if m.CoinTotal != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CoinTotal))
		i--
		dAtA[i] = 0x58
	}
	if m.UserExtend != nil {
		{
			size, err := m.UserExtend.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if len(m.Motto) > 0 {
		i -= len(m.Motto)
		copy(dAtA[i:], m.Motto)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Motto)))
		i--
		dAtA[i] = 0x4a
	}
	if m.CoinAmount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CoinAmount))
		i--
		dAtA[i] = 0x40
	}
	if m.PointAmount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PointAmount))
		i--
		dAtA[i] = 0x38
	}
	if m.UserType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserType))
		i--
		dAtA[i] = 0x30
	}
	if m.RegisterTime != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.RegisterTime))
		i--
		dAtA[i] = 0x28
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Mobile) > 0 {
		i -= len(m.Mobile)
		copy(dAtA[i:], m.Mobile)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Mobile)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetUserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListBannersRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListBannersRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListBannersRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BannerType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.BannerType))
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func (m *Banner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Banner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Banner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ThemeId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ThemeId))
		i--
		dAtA[i] = 0x30
	}
	if len(m.LinkUrl) > 0 {
		i -= len(m.LinkUrl)
		copy(dAtA[i:], m.LinkUrl)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.LinkUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.ExternalId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ExternalId))
		i--
		dAtA[i] = 0x18
	}
	if m.ViewType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ViewType))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ImageUrl) > 0 {
		i -= len(m.ImageUrl)
		copy(dAtA[i:], m.ImageUrl)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.ImageUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListBannersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListBannersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListBannersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserFollowRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserFollowRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserFollowRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FollowUserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.FollowUserId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CancelUserFollowRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CancelUserFollowRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CancelUserFollowRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FollowUserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.FollowUserId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CancelUserFollowResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CancelUserFollowResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CancelUserFollowResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserFollowResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserFollowResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserFollowResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListUserFollowsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListUserFollowsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListUserFollowsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListUserFollowsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListUserFollowsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListUserFollowsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserCollectionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserCollectionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserCollectionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ActiveId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ActiveId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetInfomationConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetInfomationConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetInfomationConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *InfomationCategory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InfomationCategory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InfomationCategory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.InfomationCategoryType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationCategoryType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetInfomationConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetInfomationConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetInfomationConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ListInfomationCategory) > 0 {
		for iNdEx := len(m.ListInfomationCategory) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ListInfomationCategory[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ListBanners) > 0 {
		for iNdEx := len(m.ListBanners) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ListBanners[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListInfomationsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListInfomationsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListInfomationsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Longitude != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Longitude))))
		i--
		dAtA[i] = 0x41
	}
	if m.Latitude != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Latitude))))
		i--
		dAtA[i] = 0x39
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x30
	}
	if len(m.City) > 0 {
		i -= len(m.City)
		copy(dAtA[i:], m.City)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.City)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Province) > 0 {
		i -= len(m.Province)
		copy(dAtA[i:], m.Province)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Province)))
		i--
		dAtA[i] = 0x22
	}
	if m.PageSize != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if m.InfomationCategoryType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationCategoryType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListUserInfomationsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListUserInfomationsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListUserInfomationsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReleaseUserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ReleaseUserId))
		i--
		dAtA[i] = 0x48
	}
	if m.Longitude != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Longitude))))
		i--
		dAtA[i] = 0x41
	}
	if m.Latitude != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Latitude))))
		i--
		dAtA[i] = 0x39
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x30
	}
	if m.PageSize != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func (m *ListUserInfomationsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListUserInfomationsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListUserInfomationsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Infomation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Infomation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Infomation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BaitImageCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.BaitImageCount))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x88
	}
	if len(m.ListBaits) > 0 {
		for iNdEx := len(m.ListBaits) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ListBaits[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2
			i--
			dAtA[i] = 0x82
		}
	}
	if m.IsFollow {
		i--
		if m.IsFollow {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf8
	}
	if m.IfBuy {
		i--
		if m.IfBuy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf0
	}
	if m.EnvImageCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.EnvImageCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe8
	}
	if m.Longitude != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Longitude))))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe1
	}
	if m.Latitude != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Latitude))))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd9
	}
	if m.IfCollection {
		i--
		if m.IfCollection {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd0
	}
	if m.IfLike {
		i--
		if m.IfLike {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc8
	}
	if m.InfomationImageCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationImageCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc0
	}
	if m.InfomationCategoryType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationCategoryType))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb8
	}
	if m.Distance != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Distance))))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb1
	}
	if m.ReadCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ReadCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa8
	}
	if m.CollectCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CollectCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if m.CommentCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CommentCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if m.LikeCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.LikeCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.ListEnvImages) > 0 {
		for iNdEx := len(m.ListEnvImages) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ListEnvImages[iNdEx])
			copy(dAtA[i:], m.ListEnvImages[iNdEx])
			i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.ListEnvImages[iNdEx])))
			i--
			dAtA[i] = 0x7a
		}
	}
	if len(m.ListInfomationImages) > 0 {
		for iNdEx := len(m.ListInfomationImages) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ListInfomationImages[iNdEx])
			copy(dAtA[i:], m.ListInfomationImages[iNdEx])
			i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.ListInfomationImages[iNdEx])))
			i--
			dAtA[i] = 0x72
		}
	}
	if len(m.ListTags) > 0 {
		for iNdEx := len(m.ListTags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ListTags[iNdEx])
			copy(dAtA[i:], m.ListTags[iNdEx])
			i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.ListTags[iNdEx])))
			i--
			dAtA[i] = 0x6a
		}
	}
	if m.Price != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x60
	}
	if m.PayType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PayType))
		i--
		dAtA[i] = 0x58
	}
	if m.CreateTime != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CreateTime))
		i--
		dAtA[i] = 0x50
	}
	if len(m.Park) > 0 {
		i -= len(m.Park)
		copy(dAtA[i:], m.Park)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Park)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.District) > 0 {
		i -= len(m.District)
		copy(dAtA[i:], m.District)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.District)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.City) > 0 {
		i -= len(m.City)
		copy(dAtA[i:], m.City)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.City)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Country) > 0 {
		i -= len(m.Country)
		copy(dAtA[i:], m.Country)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Country)))
		i--
		dAtA[i] = 0x2a
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x20
	}
	if m.InfomationType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationType))
		i--
		dAtA[i] = 0x18
	}
	if m.InfomationId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Bait) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Bait) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Bait) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BaitPercent != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.BaitPercent))
		i--
		dAtA[i] = 0x18
	}
	if len(m.BaitName) > 0 {
		i -= len(m.BaitName)
		copy(dAtA[i:], m.BaitName)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.BaitName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListInfomationsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListInfomationsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListInfomationsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetInfomationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetInfomationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetInfomationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Longitude != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Longitude))))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe1
	}
	if m.Latitude != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Latitude))))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd9
	}
	if m.InfomationId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetInfomationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetInfomationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetInfomationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserInfomationLikeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfomationLikeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfomationLikeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IfLike {
		i--
		if m.IfLike {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.LikeId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.LikeId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserInfomationLikeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfomationLikeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfomationLikeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserInfomationCollectionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfomationCollectionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfomationCollectionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IfCollection {
		i--
		if m.IfCollection {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.CollectionId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CollectionId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserInfomationCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfomationCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfomationCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListActicleCategorysRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListActicleCategorysRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListActicleCategorysRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ActicleCategory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ActicleCategory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ActicleCategory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.CategoryId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CategoryId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListActicleCategorysResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListActicleCategorysResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListActicleCategorysResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetActicleConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetActicleConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetActicleConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CategoryId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CategoryId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ArticleTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArticleTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ArticleTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ImageUrl) > 0 {
		i -= len(m.ImageUrl)
		copy(dAtA[i:], m.ImageUrl)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.ImageUrl)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.TagName) > 0 {
		i -= len(m.TagName)
		copy(dAtA[i:], m.TagName)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.TagName)))
		i--
		dAtA[i] = 0x52
	}
	if m.CreateTime != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CreateTime))
		i--
		dAtA[i] = 0x48
	}
	if m.ViewCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ViewCount))
		i--
		dAtA[i] = 0x40
	}
	if m.UsedCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UsedCount))
		i--
		dAtA[i] = 0x38
	}
	if len(m.BannerlUrl) > 0 {
		i -= len(m.BannerlUrl)
		copy(dAtA[i:], m.BannerlUrl)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.BannerlUrl)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.TagId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.TagId))
		i--
		dAtA[i] = 0x18
	}
	if m.CategoryId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CategoryId))
		i--
		dAtA[i] = 0x10
	}
	if m.ThemeId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ThemeId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetActicleConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetActicleConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetActicleConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ListThemes) > 0 {
		for iNdEx := len(m.ListThemes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ListThemes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ListBanners) > 0 {
		for iNdEx := len(m.ListBanners) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ListBanners[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListActiclesByCategoryRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListActiclesByCategoryRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListActiclesByCategoryRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x20
	}
	if m.PageSize != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if m.CategoryId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CategoryId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Article) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Article) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Article) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ListArticleTags) > 0 {
		for iNdEx := len(m.ListArticleTags) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ListArticleTags[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xb2
		}
	}
	if m.ImageHeight != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ImageHeight))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa8
	}
	if m.ImageWidth != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ImageWidth))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if m.IfCollection {
		i--
		if m.IfCollection {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if m.IfLike {
		i--
		if m.IfLike {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.ImageUrl) > 0 {
		i -= len(m.ImageUrl)
		copy(dAtA[i:], m.ImageUrl)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.ImageUrl)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.ListTags) > 0 {
		for iNdEx := len(m.ListTags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ListTags[iNdEx])
			copy(dAtA[i:], m.ListTags[iNdEx])
			i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.ListTags[iNdEx])))
			i--
			dAtA[i] = 0x62
		}
	}
	if m.ViewCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ViewCount))
		i--
		dAtA[i] = 0x58
	}
	if m.ShareCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ShareCount))
		i--
		dAtA[i] = 0x48
	}
	if m.CollectCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CollectCount))
		i--
		dAtA[i] = 0x40
	}
	if m.CommentCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CommentCount))
		i--
		dAtA[i] = 0x38
	}
	if m.LikeCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.LikeCount))
		i--
		dAtA[i] = 0x30
	}
	if m.CreateTime != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CreateTime))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x18
	}
	if m.CategoryId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CategoryId))
		i--
		dAtA[i] = 0x10
	}
	if m.ArticleId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ArticleId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListActiclesByCategoryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListActiclesByCategoryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListActiclesByCategoryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetArticleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetArticleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetArticleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ArticleId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ArticleId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetArticleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetArticleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetArticleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserArticleLikeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserArticleLikeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserArticleLikeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IfLike {
		i--
		if m.IfLike {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.LikeId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.LikeId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserArticleLikeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserArticleLikeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserArticleLikeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserArticleCollectionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserArticleCollectionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserArticleCollectionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IfCollection {
		i--
		if m.IfCollection {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.CollectionId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CollectionId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserArticleCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserArticleCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserArticleCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetArticleThemeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetArticleThemeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetArticleThemeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ThemeId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ThemeId))
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func (m *GetArticleThemeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetArticleThemeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetArticleThemeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ArticleTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArticleTag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ArticleTag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ViewCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ViewCount))
		i--
		dAtA[i] = 0x20
	}
	if m.UsedCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UsedCount))
		i--
		dAtA[i] = 0x18
	}
	if len(m.TagName) > 0 {
		i -= len(m.TagName)
		copy(dAtA[i:], m.TagName)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.TagName)))
		i--
		dAtA[i] = 0x12
	}
	if m.TagId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.TagId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetArticleTagRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetArticleTagRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetArticleTagRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TagId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.TagId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetArticleTagResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetArticleTagResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetArticleTagResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListActiclesByTagRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListActiclesByTagRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListActiclesByTagRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IfNew {
		i--
		if m.IfNew {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x20
	}
	if m.PageSize != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ListTagIds) > 0 {
		dAtA33 := make([]byte, len(m.ListTagIds)*10)
		var j32 int
		for _, num1 := range m.ListTagIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA33[j32] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j32++
			}
			dAtA33[j32] = uint8(num)
			j32++
		}
		i -= j32
		copy(dAtA[i:], dAtA33[:j32])
		i = encodeVarintMobileFishing(dAtA, i, uint64(j32))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListActiclesByTagResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListActiclesByTagResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListActiclesByTagResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListUserArticlesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListUserArticlesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListUserArticlesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReleaseUserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ReleaseUserId))
		i--
		dAtA[i] = 0x28
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x20
	}
	if m.PageSize != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func (m *ListUserArticlesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListUserArticlesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListUserArticlesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SendCommentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SendCommentRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SendCommentRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CommentType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CommentType))
		i--
		dAtA[i] = 0x28
	}
	if m.ObjectId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ObjectId))
		i--
		dAtA[i] = 0x20
	}
	if m.CommentId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CommentId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SendCommentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SendCommentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SendCommentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserCommentLikeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserCommentLikeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserCommentLikeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IfLike {
		i--
		if m.IfLike {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.CommentType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CommentType))
		i--
		dAtA[i] = 0x28
	}
	if m.CommentId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CommentId))
		i--
		dAtA[i] = 0x18
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserCommentLikeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserCommentLikeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserCommentLikeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListCommentsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListCommentsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListCommentsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x28
	}
	if m.Page != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x20
	}
	if m.ObjectId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ObjectId))
		i--
		dAtA[i] = 0x18
	}
	if m.CommentType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CommentType))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Comment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Comment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Comment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x5a
	}
	if m.IfLike {
		i--
		if m.IfLike {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x4a
	}
	if m.RepliedCommentId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.RepliedCommentId))
		i--
		dAtA[i] = 0x40
	}
	if m.RepliedUserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.RepliedUserId))
		i--
		dAtA[i] = 0x38
	}
	if m.RepliedCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.RepliedCount))
		i--
		dAtA[i] = 0x30
	}
	if m.LikeCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.LikeCount))
		i--
		dAtA[i] = 0x28
	}
	if m.ReleaseUserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ReleaseUserId))
		i--
		dAtA[i] = 0x20
	}
	if m.ObjectId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ObjectId))
		i--
		dAtA[i] = 0x18
	}
	if m.CreateTime != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CreateTime))
		i--
		dAtA[i] = 0x10
	}
	if m.CommentId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CommentId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListCommentsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListCommentsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListCommentsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CheckUserFollwRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckUserFollwRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckUserFollwRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FollowUserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.FollowUserId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CheckUserFollwResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckUserFollwResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckUserFollwResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IfFollow {
		i--
		if m.IfFollow {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListMessagesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListMessagesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListMessagesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Message) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Message) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Message) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.ReadStatus != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ReadStatus))
		i--
		dAtA[i] = 0x18
	}
	if m.CreateTime != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CreateTime))
		i--
		dAtA[i] = 0x10
	}
	if m.MessageId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.MessageId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListMessagesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListMessagesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListMessagesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateInfomationOrderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateInfomationOrderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateInfomationOrderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PayType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PayType))
		i--
		dAtA[i] = 0x20
	}
	if m.InfomationId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CreateInfomationOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateInfomationOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateInfomationOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *InfomationOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InfomationOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InfomationOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.CreateTime != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CreateTime))
		i--
		dAtA[i] = 0x30
	}
	if m.Price != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x28
	}
	if m.PayType != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PayType))
		i--
		dAtA[i] = 0x20
	}
	if m.InfomationId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationId))
		i--
		dAtA[i] = 0x18
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x10
	}
	if m.OrderId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.OrderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetInfomationOrderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetInfomationOrderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetInfomationOrderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InfomationId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetInfomationOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetInfomationOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetInfomationOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OrderInfo != nil {
		{
			size, err := m.OrderInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CheckInfomationOrderBuyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckInfomationOrderBuyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckInfomationOrderBuyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InfomationId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CheckInfomationOrderBuyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckInfomationOrderBuyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckInfomationOrderBuyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IfBuy {
		i--
		if m.IfBuy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserMessageReadRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserMessageReadRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserMessageReadRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MessageId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.MessageId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserMessageReadResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserMessageReadResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserMessageReadResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserMessageReadAllRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserMessageReadAllRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserMessageReadAllRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserMessageReadAllResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserMessageReadAllResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserMessageReadAllResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetUserMessageUnCountRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUserMessageUnCountRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetUserMessageUnCountRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetUserMessageUnCountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUserMessageUnCountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetUserMessageUnCountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UnCount != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UnCount))
		i--
		dAtA[i] = 0x10
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListUserInfomationOrdersRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListUserInfomationOrdersRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListUserInfomationOrdersRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListUserInfomationOrdersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListUserInfomationOrdersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListUserInfomationOrdersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteInfomationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteInfomationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteInfomationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.InfomationId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.InfomationId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DeleteInfomationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteInfomationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteInfomationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteArticleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteArticleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteArticleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ArticleId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ArticleId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DeleteArticleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteArticleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteArticleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListFansRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListFansRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListFansRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListFansResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListFansResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListFansResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileFishing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PubArticle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PubArticle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PubArticle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ImageUrl) > 0 {
		i -= len(m.ImageUrl)
		copy(dAtA[i:], m.ImageUrl)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.ImageUrl)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.TagIds) > 0 {
		dAtA55 := make([]byte, len(m.TagIds)*10)
		var j54 int
		for _, num1 := range m.TagIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA55[j54] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j54++
			}
			dAtA55[j54] = uint8(num)
			j54++
		}
		i -= j54
		copy(dAtA[i:], dAtA55[:j54])
		i = encodeVarintMobileFishing(dAtA, i, uint64(j54))
		i--
		dAtA[i] = 0x42
	}
	if len(m.TagNames) > 0 {
		for iNdEx := len(m.TagNames) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.TagNames[iNdEx])
			copy(dAtA[i:], m.TagNames[iNdEx])
			i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.TagNames[iNdEx])))
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.ImageWidth != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ImageWidth))
		i--
		dAtA[i] = 0x30
	}
	if m.ImageHeight != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.ImageHeight))
		i--
		dAtA[i] = 0x28
	}
	if m.CategoryId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.CategoryId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintMobileFishing(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CreateArticleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateArticleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateArticleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.UserId != 0 {
		i = encodeVarintMobileFishing(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CreateArticleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateArticleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateArticleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileFishing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMobileFishing(dAtA []byte, offset int, v uint64) int {
	offset -= sovMobileFishing(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedStatus(r randyMobileFishing, easy bool) *Status {
	this := &Status{}
	this.Code = StatusCode([]int32{0, 1, 2, 3, 4, 5, 6, 7, 99}[r.Intn(9)])
	this.Msg = string(randStringMobileFishing(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedRefreshTokenRequest(r randyMobileFishing, easy bool) *RefreshTokenRequest {
	this := &RefreshTokenRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 4)
	}
	return this
}

func NewPopulatedRefreshTokenResponse(r randyMobileFishing, easy bool) *RefreshTokenResponse {
	this := &RefreshTokenResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedWechatLoginRequest(r randyMobileFishing, easy bool) *WechatLoginRequest {
	this := &WechatLoginRequest{}
	this.Jscode = string(randStringMobileFishing(r))
	this.EncryptedData = string(randStringMobileFishing(r))
	this.Iv = string(randStringMobileFishing(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 4)
	}
	return this
}

func NewPopulatedWechatLoginResponse(r randyMobileFishing, easy bool) *WechatLoginResponse {
	this := &WechatLoginResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	this.Jwt = string(randStringMobileFishing(r))
	if r.Intn(5) != 0 {
		this.Info = NewPopulatedUser(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 4)
	}
	return this
}

func NewPopulatedGetUserRequest(r randyMobileFishing, easy bool) *GetUserRequest {
	this := &GetUserRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedGetUserExtendRequest(r randyMobileFishing, easy bool) *GetUserExtendRequest {
	this := &GetUserExtendRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedUserExtend(r randyMobileFishing, easy bool) *UserExtend {
	this := &UserExtend{}
	this.FollowCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.FollowCount *= -1
	}
	this.FansCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.FansCount *= -1
	}
	this.UnReadCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UnReadCount *= -1
	}
	this.InfomationCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.InfomationCount *= -1
	}
	this.ArticleCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ArticleCount *= -1
	}
	this.InviteCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.InviteCount *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 7)
	}
	return this
}

func NewPopulatedGetUserExtendResponse(r randyMobileFishing, easy bool) *GetUserExtendResponse {
	this := &GetUserExtendResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		this.Info = NewPopulatedUserExtend(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedUser(r randyMobileFishing, easy bool) *User {
	this := &User{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.Avatar = string(randStringMobileFishing(r))
	this.Mobile = string(randStringMobileFishing(r))
	this.NickName = string(randStringMobileFishing(r))
	this.RegisterTime = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.RegisterTime *= -1
	}
	this.UserType = UserType([]int32{0, 1}[r.Intn(2)])
	this.PointAmount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.PointAmount *= -1
	}
	this.CoinAmount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CoinAmount *= -1
	}
	this.Motto = string(randStringMobileFishing(r))
	if r.Intn(5) != 0 {
		this.UserExtend = NewPopulatedUserExtend(r, easy)
	}
	this.CoinTotal = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CoinTotal *= -1
	}
	this.CoinPayTotal = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CoinPayTotal *= -1
	}
	this.CoinRefillTotal = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CoinRefillTotal *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 14)
	}
	return this
}

func NewPopulatedGetUserResponse(r randyMobileFishing, easy bool) *GetUserResponse {
	this := &GetUserResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		this.Info = NewPopulatedUser(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedListBannersRequest(r randyMobileFishing, easy bool) *ListBannersRequest {
	this := &ListBannersRequest{}
	this.BannerType = BannerType([]int32{0, 1}[r.Intn(2)])
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedBanner(r randyMobileFishing, easy bool) *Banner {
	this := &Banner{}
	this.ImageUrl = string(randStringMobileFishing(r))
	this.ViewType = BannerViewType([]int32{0, 1, 2, 3, 4, 5, 6, 7, 8}[r.Intn(9)])
	this.ExternalId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ExternalId *= -1
	}
	this.Title = string(randStringMobileFishing(r))
	this.LinkUrl = string(randStringMobileFishing(r))
	this.ThemeId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ThemeId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 7)
	}
	return this
}

func NewPopulatedListBannersResponse(r randyMobileFishing, easy bool) *ListBannersResponse {
	this := &ListBannersResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v1 := r.Intn(5)
		this.List = make([]*Banner, v1)
		for i := 0; i < v1; i++ {
			this.List[i] = NewPopulatedBanner(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedUserFollowRequest(r randyMobileFishing, easy bool) *UserFollowRequest {
	this := &UserFollowRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.FollowUserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.FollowUserId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedCancelUserFollowRequest(r randyMobileFishing, easy bool) *CancelUserFollowRequest {
	this := &CancelUserFollowRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.FollowUserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.FollowUserId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedCancelUserFollowResponse(r randyMobileFishing, easy bool) *CancelUserFollowResponse {
	this := &CancelUserFollowResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedUserFollowResponse(r randyMobileFishing, easy bool) *UserFollowResponse {
	this := &UserFollowResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedListUserFollowsRequest(r randyMobileFishing, easy bool) *ListUserFollowsRequest {
	this := &ListUserFollowsRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.Page = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.Page *= -1
	}
	this.PageSize = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.PageSize *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 4)
	}
	return this
}

func NewPopulatedListUserFollowsResponse(r randyMobileFishing, easy bool) *ListUserFollowsResponse {
	this := &ListUserFollowsResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v2 := r.Intn(5)
		this.List = make([]*User, v2)
		for i := 0; i < v2; i++ {
			this.List[i] = NewPopulatedUser(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedUserCollectionRequest(r randyMobileFishing, easy bool) *UserCollectionRequest {
	this := &UserCollectionRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.ActiveId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ActiveId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedUserCollectionResponse(r randyMobileFishing, easy bool) *UserCollectionResponse {
	this := &UserCollectionResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedGetInfomationConfigRequest(r randyMobileFishing, easy bool) *GetInfomationConfigRequest {
	this := &GetInfomationConfigRequest{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 1)
	}
	return this
}

func NewPopulatedInfomationCategory(r randyMobileFishing, easy bool) *InfomationCategory {
	this := &InfomationCategory{}
	this.InfomationCategoryType = InfomationCategoryType([]int32{0, 1, 2, 3, 4}[r.Intn(5)])
	this.Name = string(randStringMobileFishing(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedGetInfomationConfigResponse(r randyMobileFishing, easy bool) *GetInfomationConfigResponse {
	this := &GetInfomationConfigResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v3 := r.Intn(5)
		this.ListBanners = make([]*Banner, v3)
		for i := 0; i < v3; i++ {
			this.ListBanners[i] = NewPopulatedBanner(r, easy)
		}
	}
	if r.Intn(5) != 0 {
		v4 := r.Intn(5)
		this.ListInfomationCategory = make([]*InfomationCategory, v4)
		for i := 0; i < v4; i++ {
			this.ListInfomationCategory[i] = NewPopulatedInfomationCategory(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 4)
	}
	return this
}

func NewPopulatedListInfomationsRequest(r randyMobileFishing, easy bool) *ListInfomationsRequest {
	this := &ListInfomationsRequest{}
	this.InfomationCategoryType = InfomationCategoryType([]int32{0, 1, 2, 3, 4}[r.Intn(5)])
	this.Page = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.Page *= -1
	}
	this.PageSize = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.PageSize *= -1
	}
	this.Province = string(randStringMobileFishing(r))
	this.City = string(randStringMobileFishing(r))
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.Latitude = float64(r.Float64())
	if r.Intn(2) == 0 {
		this.Latitude *= -1
	}
	this.Longitude = float64(r.Float64())
	if r.Intn(2) == 0 {
		this.Longitude *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 9)
	}
	return this
}

func NewPopulatedListUserInfomationsRequest(r randyMobileFishing, easy bool) *ListUserInfomationsRequest {
	this := &ListUserInfomationsRequest{}
	this.Page = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.Page *= -1
	}
	this.PageSize = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.PageSize *= -1
	}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.Latitude = float64(r.Float64())
	if r.Intn(2) == 0 {
		this.Latitude *= -1
	}
	this.Longitude = float64(r.Float64())
	if r.Intn(2) == 0 {
		this.Longitude *= -1
	}
	this.ReleaseUserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ReleaseUserId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 10)
	}
	return this
}

func NewPopulatedListUserInfomationsResponse(r randyMobileFishing, easy bool) *ListUserInfomationsResponse {
	this := &ListUserInfomationsResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v5 := r.Intn(5)
		this.List = make([]*Infomation, v5)
		for i := 0; i < v5; i++ {
			this.List[i] = NewPopulatedInfomation(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedInfomation(r randyMobileFishing, easy bool) *Infomation {
	this := &Infomation{}
	this.InfomationId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.InfomationId *= -1
	}
	this.InfomationType = InfomationType([]int32{0, 1}[r.Intn(2)])
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.Country = string(randStringMobileFishing(r))
	this.City = string(randStringMobileFishing(r))
	this.District = string(randStringMobileFishing(r))
	this.Content = string(randStringMobileFishing(r))
	this.Park = string(randStringMobileFishing(r))
	this.CreateTime = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CreateTime *= -1
	}
	this.PayType = PayType([]int32{0, 1}[r.Intn(2)])
	this.Price = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.Price *= -1
	}
	v6 := r.Intn(10)
	this.ListTags = make([]string, v6)
	for i := 0; i < v6; i++ {
		this.ListTags[i] = string(randStringMobileFishing(r))
	}
	v7 := r.Intn(10)
	this.ListInfomationImages = make([]string, v7)
	for i := 0; i < v7; i++ {
		this.ListInfomationImages[i] = string(randStringMobileFishing(r))
	}
	v8 := r.Intn(10)
	this.ListEnvImages = make([]string, v8)
	for i := 0; i < v8; i++ {
		this.ListEnvImages[i] = string(randStringMobileFishing(r))
	}
	this.Avatar = string(randStringMobileFishing(r))
	this.NickName = string(randStringMobileFishing(r))
	this.LikeCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.LikeCount *= -1
	}
	this.CommentCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CommentCount *= -1
	}
	this.CollectCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CollectCount *= -1
	}
	this.ReadCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ReadCount *= -1
	}
	this.Distance = float64(r.Float64())
	if r.Intn(2) == 0 {
		this.Distance *= -1
	}
	this.InfomationCategoryType = InfomationCategoryType([]int32{0, 1, 2, 3, 4}[r.Intn(5)])
	this.InfomationImageCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.InfomationImageCount *= -1
	}
	this.IfLike = bool(bool(r.Intn(2) == 0))
	this.IfCollection = bool(bool(r.Intn(2) == 0))
	this.Latitude = float64(r.Float64())
	if r.Intn(2) == 0 {
		this.Latitude *= -1
	}
	this.Longitude = float64(r.Float64())
	if r.Intn(2) == 0 {
		this.Longitude *= -1
	}
	this.EnvImageCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.EnvImageCount *= -1
	}
	this.IfBuy = bool(bool(r.Intn(2) == 0))
	this.IsFollow = bool(bool(r.Intn(2) == 0))
	if r.Intn(5) != 0 {
		v9 := r.Intn(5)
		this.ListBaits = make([]*Bait, v9)
		for i := 0; i < v9; i++ {
			this.ListBaits[i] = NewPopulatedBait(r, easy)
		}
	}
	this.BaitImageCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.BaitImageCount *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 34)
	}
	return this
}

func NewPopulatedBait(r randyMobileFishing, easy bool) *Bait {
	this := &Bait{}
	this.Image = string(randStringMobileFishing(r))
	this.BaitName = string(randStringMobileFishing(r))
	this.BaitPercent = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.BaitPercent *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 4)
	}
	return this
}

func NewPopulatedListInfomationsResponse(r randyMobileFishing, easy bool) *ListInfomationsResponse {
	this := &ListInfomationsResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v10 := r.Intn(5)
		this.List = make([]*Infomation, v10)
		for i := 0; i < v10; i++ {
			this.List[i] = NewPopulatedInfomation(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedGetInfomationRequest(r randyMobileFishing, easy bool) *GetInfomationRequest {
	this := &GetInfomationRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.InfomationId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.InfomationId *= -1
	}
	this.Latitude = float64(r.Float64())
	if r.Intn(2) == 0 {
		this.Latitude *= -1
	}
	this.Longitude = float64(r.Float64())
	if r.Intn(2) == 0 {
		this.Longitude *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 29)
	}
	return this
}

func NewPopulatedGetInfomationResponse(r randyMobileFishing, easy bool) *GetInfomationResponse {
	this := &GetInfomationResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		this.Info = NewPopulatedInfomation(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedUserInfomationLikeRequest(r randyMobileFishing, easy bool) *UserInfomationLikeRequest {
	this := &UserInfomationLikeRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.LikeId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.LikeId *= -1
	}
	this.IfLike = bool(bool(r.Intn(2) == 0))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 5)
	}
	return this
}

func NewPopulatedUserInfomationLikeResponse(r randyMobileFishing, easy bool) *UserInfomationLikeResponse {
	this := &UserInfomationLikeResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedUserInfomationCollectionRequest(r randyMobileFishing, easy bool) *UserInfomationCollectionRequest {
	this := &UserInfomationCollectionRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.CollectionId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CollectionId *= -1
	}
	this.IfCollection = bool(bool(r.Intn(2) == 0))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 5)
	}
	return this
}

func NewPopulatedUserInfomationCollectionResponse(r randyMobileFishing, easy bool) *UserInfomationCollectionResponse {
	this := &UserInfomationCollectionResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedListActicleCategorysRequest(r randyMobileFishing, easy bool) *ListActicleCategorysRequest {
	this := &ListActicleCategorysRequest{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 1)
	}
	return this
}

func NewPopulatedActicleCategory(r randyMobileFishing, easy bool) *ActicleCategory {
	this := &ActicleCategory{}
	this.CategoryId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CategoryId *= -1
	}
	this.Name = string(randStringMobileFishing(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedListActicleCategorysResponse(r randyMobileFishing, easy bool) *ListActicleCategorysResponse {
	this := &ListActicleCategorysResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v11 := r.Intn(5)
		this.List = make([]*ActicleCategory, v11)
		for i := 0; i < v11; i++ {
			this.List[i] = NewPopulatedActicleCategory(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedGetActicleConfigRequest(r randyMobileFishing, easy bool) *GetActicleConfigRequest {
	this := &GetActicleConfigRequest{}
	this.CategoryId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CategoryId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedArticleTheme(r randyMobileFishing, easy bool) *ArticleTheme {
	this := &ArticleTheme{}
	this.ThemeId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ThemeId *= -1
	}
	this.CategoryId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CategoryId *= -1
	}
	this.TagId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.TagId *= -1
	}
	this.Title = string(randStringMobileFishing(r))
	this.Desc = string(randStringMobileFishing(r))
	this.BannerlUrl = string(randStringMobileFishing(r))
	this.UsedCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UsedCount *= -1
	}
	this.ViewCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ViewCount *= -1
	}
	this.CreateTime = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CreateTime *= -1
	}
	this.TagName = string(randStringMobileFishing(r))
	this.ImageUrl = string(randStringMobileFishing(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 12)
	}
	return this
}

func NewPopulatedGetActicleConfigResponse(r randyMobileFishing, easy bool) *GetActicleConfigResponse {
	this := &GetActicleConfigResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v12 := r.Intn(5)
		this.ListBanners = make([]*Banner, v12)
		for i := 0; i < v12; i++ {
			this.ListBanners[i] = NewPopulatedBanner(r, easy)
		}
	}
	if r.Intn(5) != 0 {
		v13 := r.Intn(5)
		this.ListThemes = make([]*ArticleTheme, v13)
		for i := 0; i < v13; i++ {
			this.ListThemes[i] = NewPopulatedArticleTheme(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 4)
	}
	return this
}

func NewPopulatedListActiclesByCategoryRequest(r randyMobileFishing, easy bool) *ListActiclesByCategoryRequest {
	this := &ListActiclesByCategoryRequest{}
	this.CategoryId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CategoryId *= -1
	}
	this.Page = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.Page *= -1
	}
	this.PageSize = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.PageSize *= -1
	}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 5)
	}
	return this
}

func NewPopulatedArticle(r randyMobileFishing, easy bool) *Article {
	this := &Article{}
	this.ArticleId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ArticleId *= -1
	}
	this.CategoryId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CategoryId *= -1
	}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.Title = string(randStringMobileFishing(r))
	this.CreateTime = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CreateTime *= -1
	}
	this.LikeCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.LikeCount *= -1
	}
	this.CommentCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CommentCount *= -1
	}
	this.CollectCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CollectCount *= -1
	}
	this.ShareCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ShareCount *= -1
	}
	this.ViewCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ViewCount *= -1
	}
	v14 := r.Intn(10)
	this.ListTags = make([]string, v14)
	for i := 0; i < v14; i++ {
		this.ListTags[i] = string(randStringMobileFishing(r))
	}
	this.ImageUrl = string(randStringMobileFishing(r))
	this.Content = string(randStringMobileFishing(r))
	this.Avatar = string(randStringMobileFishing(r))
	this.NickName = string(randStringMobileFishing(r))
	this.IfLike = bool(bool(r.Intn(2) == 0))
	this.IfCollection = bool(bool(r.Intn(2) == 0))
	this.ImageWidth = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ImageWidth *= -1
	}
	this.ImageHeight = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ImageHeight *= -1
	}
	if r.Intn(5) != 0 {
		v15 := r.Intn(5)
		this.ListArticleTags = make([]*ArticleTag, v15)
		for i := 0; i < v15; i++ {
			this.ListArticleTags[i] = NewPopulatedArticleTag(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 23)
	}
	return this
}

func NewPopulatedListActiclesByCategoryResponse(r randyMobileFishing, easy bool) *ListActiclesByCategoryResponse {
	this := &ListActiclesByCategoryResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v16 := r.Intn(5)
		this.List = make([]*Article, v16)
		for i := 0; i < v16; i++ {
			this.List[i] = NewPopulatedArticle(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedGetArticleRequest(r randyMobileFishing, easy bool) *GetArticleRequest {
	this := &GetArticleRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.ArticleId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ArticleId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedGetArticleResponse(r randyMobileFishing, easy bool) *GetArticleResponse {
	this := &GetArticleResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		this.Info = NewPopulatedArticle(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedUserArticleLikeRequest(r randyMobileFishing, easy bool) *UserArticleLikeRequest {
	this := &UserArticleLikeRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.LikeId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.LikeId *= -1
	}
	this.IfLike = bool(bool(r.Intn(2) == 0))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 5)
	}
	return this
}

func NewPopulatedUserArticleLikeResponse(r randyMobileFishing, easy bool) *UserArticleLikeResponse {
	this := &UserArticleLikeResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedUserArticleCollectionRequest(r randyMobileFishing, easy bool) *UserArticleCollectionRequest {
	this := &UserArticleCollectionRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.CollectionId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CollectionId *= -1
	}
	this.IfCollection = bool(bool(r.Intn(2) == 0))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 5)
	}
	return this
}

func NewPopulatedUserArticleCollectionResponse(r randyMobileFishing, easy bool) *UserArticleCollectionResponse {
	this := &UserArticleCollectionResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedGetArticleThemeRequest(r randyMobileFishing, easy bool) *GetArticleThemeRequest {
	this := &GetArticleThemeRequest{}
	this.ThemeId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ThemeId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedGetArticleThemeResponse(r randyMobileFishing, easy bool) *GetArticleThemeResponse {
	this := &GetArticleThemeResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		this.Info = NewPopulatedArticleTheme(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedArticleTag(r randyMobileFishing, easy bool) *ArticleTag {
	this := &ArticleTag{}
	this.TagId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.TagId *= -1
	}
	this.TagName = string(randStringMobileFishing(r))
	this.UsedCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UsedCount *= -1
	}
	this.ViewCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ViewCount *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 5)
	}
	return this
}

func NewPopulatedGetArticleTagRequest(r randyMobileFishing, easy bool) *GetArticleTagRequest {
	this := &GetArticleTagRequest{}
	this.TagId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.TagId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedGetArticleTagResponse(r randyMobileFishing, easy bool) *GetArticleTagResponse {
	this := &GetArticleTagResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		this.Info = NewPopulatedArticleTag(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedListActiclesByTagRequest(r randyMobileFishing, easy bool) *ListActiclesByTagRequest {
	this := &ListActiclesByTagRequest{}
	v17 := r.Intn(10)
	this.ListTagIds = make([]int64, v17)
	for i := 0; i < v17; i++ {
		this.ListTagIds[i] = int64(r.Int63())
		if r.Intn(2) == 0 {
			this.ListTagIds[i] *= -1
		}
	}
	this.Page = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.Page *= -1
	}
	this.PageSize = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.PageSize *= -1
	}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.IfNew = bool(bool(r.Intn(2) == 0))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 6)
	}
	return this
}

func NewPopulatedListActiclesByTagResponse(r randyMobileFishing, easy bool) *ListActiclesByTagResponse {
	this := &ListActiclesByTagResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v18 := r.Intn(5)
		this.List = make([]*Article, v18)
		for i := 0; i < v18; i++ {
			this.List[i] = NewPopulatedArticle(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedListUserArticlesRequest(r randyMobileFishing, easy bool) *ListUserArticlesRequest {
	this := &ListUserArticlesRequest{}
	this.Page = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.Page *= -1
	}
	this.PageSize = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.PageSize *= -1
	}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.ReleaseUserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ReleaseUserId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 6)
	}
	return this
}

func NewPopulatedListUserArticlesResponse(r randyMobileFishing, easy bool) *ListUserArticlesResponse {
	this := &ListUserArticlesResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v19 := r.Intn(5)
		this.List = make([]*Article, v19)
		for i := 0; i < v19; i++ {
			this.List[i] = NewPopulatedArticle(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedSendCommentRequest(r randyMobileFishing, easy bool) *SendCommentRequest {
	this := &SendCommentRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.Content = string(randStringMobileFishing(r))
	this.CommentId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CommentId *= -1
	}
	this.ObjectId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ObjectId *= -1
	}
	this.CommentType = CommentType([]int32{0, 1}[r.Intn(2)])
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 6)
	}
	return this
}

func NewPopulatedSendCommentResponse(r randyMobileFishing, easy bool) *SendCommentResponse {
	this := &SendCommentResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedUserCommentLikeRequest(r randyMobileFishing, easy bool) *UserCommentLikeRequest {
	this := &UserCommentLikeRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.CommentId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CommentId *= -1
	}
	this.CommentType = CommentType([]int32{0, 1}[r.Intn(2)])
	this.IfLike = bool(bool(r.Intn(2) == 0))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 8)
	}
	return this
}

func NewPopulatedUserCommentLikeResponse(r randyMobileFishing, easy bool) *UserCommentLikeResponse {
	this := &UserCommentLikeResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedListCommentsRequest(r randyMobileFishing, easy bool) *ListCommentsRequest {
	this := &ListCommentsRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.CommentType = CommentType([]int32{0, 1}[r.Intn(2)])
	this.ObjectId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ObjectId *= -1
	}
	this.Page = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.Page *= -1
	}
	this.PageSize = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.PageSize *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 6)
	}
	return this
}

func NewPopulatedComment(r randyMobileFishing, easy bool) *Comment {
	this := &Comment{}
	this.CommentId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CommentId *= -1
	}
	this.CreateTime = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CreateTime *= -1
	}
	this.ObjectId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ObjectId *= -1
	}
	this.ReleaseUserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ReleaseUserId *= -1
	}
	this.LikeCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.LikeCount *= -1
	}
	this.RepliedCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.RepliedCount *= -1
	}
	this.RepliedUserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.RepliedUserId *= -1
	}
	this.RepliedCommentId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.RepliedCommentId *= -1
	}
	this.Content = string(randStringMobileFishing(r))
	this.IfLike = bool(bool(r.Intn(2) == 0))
	this.Avatar = string(randStringMobileFishing(r))
	this.NickName = string(randStringMobileFishing(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 13)
	}
	return this
}

func NewPopulatedListCommentsResponse(r randyMobileFishing, easy bool) *ListCommentsResponse {
	this := &ListCommentsResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v20 := r.Intn(5)
		this.List = make([]*Comment, v20)
		for i := 0; i < v20; i++ {
			this.List[i] = NewPopulatedComment(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedCheckUserFollwRequest(r randyMobileFishing, easy bool) *CheckUserFollwRequest {
	this := &CheckUserFollwRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.FollowUserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.FollowUserId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedCheckUserFollwResponse(r randyMobileFishing, easy bool) *CheckUserFollwResponse {
	this := &CheckUserFollwResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	this.IfFollow = bool(bool(r.Intn(2) == 0))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedListMessagesRequest(r randyMobileFishing, easy bool) *ListMessagesRequest {
	this := &ListMessagesRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.Page = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.Page *= -1
	}
	this.PageSize = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.PageSize *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 4)
	}
	return this
}

func NewPopulatedMessage(r randyMobileFishing, easy bool) *Message {
	this := &Message{}
	this.MessageId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.MessageId *= -1
	}
	this.CreateTime = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CreateTime *= -1
	}
	this.ReadStatus = MessageReadStatus([]int32{0, 1}[r.Intn(2)])
	this.Title = string(randStringMobileFishing(r))
	this.Content = string(randStringMobileFishing(r))
	this.Avatar = string(randStringMobileFishing(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 7)
	}
	return this
}

func NewPopulatedListMessagesResponse(r randyMobileFishing, easy bool) *ListMessagesResponse {
	this := &ListMessagesResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v21 := r.Intn(5)
		this.List = make([]*Message, v21)
		for i := 0; i < v21; i++ {
			this.List[i] = NewPopulatedMessage(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedCreateInfomationOrderRequest(r randyMobileFishing, easy bool) *CreateInfomationOrderRequest {
	this := &CreateInfomationOrderRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.InfomationId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.InfomationId *= -1
	}
	this.PayType = FishingOrderPayType([]int32{0, 1}[r.Intn(2)])
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 5)
	}
	return this
}

func NewPopulatedCreateInfomationOrderResponse(r randyMobileFishing, easy bool) *CreateInfomationOrderResponse {
	this := &CreateInfomationOrderResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		this.Info = NewPopulatedInfomationOrder(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedInfomationOrder(r randyMobileFishing, easy bool) *InfomationOrder {
	this := &InfomationOrder{}
	this.OrderId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.OrderId *= -1
	}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.InfomationId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.InfomationId *= -1
	}
	this.PayType = FishingOrderPayType([]int32{0, 1}[r.Intn(2)])
	this.Price = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.Price *= -1
	}
	this.CreateTime = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CreateTime *= -1
	}
	if r.Intn(5) != 0 {
		this.Info = NewPopulatedInfomation(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 8)
	}
	return this
}

func NewPopulatedGetInfomationOrderRequest(r randyMobileFishing, easy bool) *GetInfomationOrderRequest {
	this := &GetInfomationOrderRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.InfomationId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.InfomationId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedGetInfomationOrderResponse(r randyMobileFishing, easy bool) *GetInfomationOrderResponse {
	this := &GetInfomationOrderResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		this.OrderInfo = NewPopulatedInfomationOrder(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedCheckInfomationOrderBuyRequest(r randyMobileFishing, easy bool) *CheckInfomationOrderBuyRequest {
	this := &CheckInfomationOrderBuyRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.InfomationId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.InfomationId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedCheckInfomationOrderBuyResponse(r randyMobileFishing, easy bool) *CheckInfomationOrderBuyResponse {
	this := &CheckInfomationOrderBuyResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	this.IfBuy = bool(bool(r.Intn(2) == 0))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedUserMessageReadRequest(r randyMobileFishing, easy bool) *UserMessageReadRequest {
	this := &UserMessageReadRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.MessageId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.MessageId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedUserMessageReadResponse(r randyMobileFishing, easy bool) *UserMessageReadResponse {
	this := &UserMessageReadResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedUserMessageReadAllRequest(r randyMobileFishing, easy bool) *UserMessageReadAllRequest {
	this := &UserMessageReadAllRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedUserMessageReadAllResponse(r randyMobileFishing, easy bool) *UserMessageReadAllResponse {
	this := &UserMessageReadAllResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedGetUserMessageUnCountRequest(r randyMobileFishing, easy bool) *GetUserMessageUnCountRequest {
	this := &GetUserMessageUnCountRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedGetUserMessageUnCountResponse(r randyMobileFishing, easy bool) *GetUserMessageUnCountResponse {
	this := &GetUserMessageUnCountResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	this.UnCount = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UnCount *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedListUserInfomationOrdersRequest(r randyMobileFishing, easy bool) *ListUserInfomationOrdersRequest {
	this := &ListUserInfomationOrdersRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.Page = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.Page *= -1
	}
	this.PageSize = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.PageSize *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 4)
	}
	return this
}

func NewPopulatedListUserInfomationOrdersResponse(r randyMobileFishing, easy bool) *ListUserInfomationOrdersResponse {
	this := &ListUserInfomationOrdersResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v22 := r.Intn(5)
		this.List = make([]*InfomationOrder, v22)
		for i := 0; i < v22; i++ {
			this.List[i] = NewPopulatedInfomationOrder(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedDeleteInfomationRequest(r randyMobileFishing, easy bool) *DeleteInfomationRequest {
	this := &DeleteInfomationRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.InfomationId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.InfomationId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedDeleteInfomationResponse(r randyMobileFishing, easy bool) *DeleteInfomationResponse {
	this := &DeleteInfomationResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedDeleteArticleRequest(r randyMobileFishing, easy bool) *DeleteArticleRequest {
	this := &DeleteArticleRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.ArticleId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ArticleId *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedDeleteArticleResponse(r randyMobileFishing, easy bool) *DeleteArticleResponse {
	this := &DeleteArticleResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

func NewPopulatedListFansRequest(r randyMobileFishing, easy bool) *ListFansRequest {
	this := &ListFansRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.Page = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.Page *= -1
	}
	this.PageSize = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.PageSize *= -1
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 4)
	}
	return this
}

func NewPopulatedListFansResponse(r randyMobileFishing, easy bool) *ListFansResponse {
	this := &ListFansResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v23 := r.Intn(5)
		this.List = make([]*User, v23)
		for i := 0; i < v23; i++ {
			this.List[i] = NewPopulatedUser(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedPubArticle(r randyMobileFishing, easy bool) *PubArticle {
	this := &PubArticle{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.Title = string(randStringMobileFishing(r))
	this.Content = string(randStringMobileFishing(r))
	this.CategoryId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CategoryId *= -1
	}
	this.ImageHeight = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ImageHeight *= -1
	}
	this.ImageWidth = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ImageWidth *= -1
	}
	v24 := r.Intn(10)
	this.TagNames = make([]string, v24)
	for i := 0; i < v24; i++ {
		this.TagNames[i] = string(randStringMobileFishing(r))
	}
	v25 := r.Intn(10)
	this.TagIds = make([]int64, v25)
	for i := 0; i < v25; i++ {
		this.TagIds[i] = int64(r.Int63())
		if r.Intn(2) == 0 {
			this.TagIds[i] *= -1
		}
	}
	this.ImageUrl = string(randStringMobileFishing(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 10)
	}
	return this
}

func NewPopulatedCreateArticleRequest(r randyMobileFishing, easy bool) *CreateArticleRequest {
	this := &CreateArticleRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	if r.Intn(5) != 0 {
		this.Info = NewPopulatedPubArticle(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 3)
	}
	return this
}

func NewPopulatedCreateArticleResponse(r randyMobileFishing, easy bool) *CreateArticleResponse {
	this := &CreateArticleResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileFishing(r, 2)
	}
	return this
}

type randyMobileFishing interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneMobileFishing(r randyMobileFishing) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringMobileFishing(r randyMobileFishing) string {
	v26 := r.Intn(100)
	tmps := make([]rune, v26)
	for i := 0; i < v26; i++ {
		tmps[i] = randUTF8RuneMobileFishing(r)
	}
	return string(tmps)
}
func randUnrecognizedMobileFishing(r randyMobileFishing, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldMobileFishing(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldMobileFishing(dAtA []byte, r randyMobileFishing, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateMobileFishing(dAtA, uint64(key))
		v27 := r.Int63()
		if r.Intn(2) == 0 {
			v27 *= -1
		}
		dAtA = encodeVarintPopulateMobileFishing(dAtA, uint64(v27))
	case 1:
		dAtA = encodeVarintPopulateMobileFishing(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateMobileFishing(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateMobileFishing(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateMobileFishing(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateMobileFishing(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *Status) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovMobileFishing(uint64(m.Code))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RefreshTokenRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RefreshTokenResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WechatLoginRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Jscode)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.EncryptedData)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.Iv)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WechatLoginResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.Jwt)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetUserRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetUserExtendRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserExtend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FollowCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.FollowCount))
	}
	if m.FansCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.FansCount))
	}
	if m.UnReadCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.UnReadCount))
	}
	if m.InfomationCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.InfomationCount))
	}
	if m.ArticleCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.ArticleCount))
	}
	if m.InviteCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.InviteCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetUserExtendResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *User) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.RegisterTime != 0 {
		n += 1 + sovMobileFishing(uint64(m.RegisterTime))
	}
	if m.UserType != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserType))
	}
	if m.PointAmount != 0 {
		n += 1 + sovMobileFishing(uint64(m.PointAmount))
	}
	if m.CoinAmount != 0 {
		n += 1 + sovMobileFishing(uint64(m.CoinAmount))
	}
	l = len(m.Motto)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.UserExtend != nil {
		l = m.UserExtend.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.CoinTotal != 0 {
		n += 1 + sovMobileFishing(uint64(m.CoinTotal))
	}
	if m.CoinPayTotal != 0 {
		n += 1 + sovMobileFishing(uint64(m.CoinPayTotal))
	}
	if m.CoinRefillTotal != 0 {
		n += 1 + sovMobileFishing(uint64(m.CoinRefillTotal))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListBannersRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BannerType != 0 {
		n += 1 + sovMobileFishing(uint64(m.BannerType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Banner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ImageUrl)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.ViewType != 0 {
		n += 1 + sovMobileFishing(uint64(m.ViewType))
	}
	if m.ExternalId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ExternalId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.LinkUrl)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.ThemeId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ThemeId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListBannersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserFollowRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.FollowUserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.FollowUserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CancelUserFollowRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.FollowUserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.FollowUserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CancelUserFollowResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserFollowResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListUserFollowsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.Page != 0 {
		n += 1 + sovMobileFishing(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovMobileFishing(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListUserFollowsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserCollectionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.ActiveId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ActiveId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetInfomationConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InfomationCategory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InfomationCategoryType != 0 {
		n += 1 + sovMobileFishing(uint64(m.InfomationCategoryType))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetInfomationConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.ListBanners) > 0 {
		for _, e := range m.ListBanners {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if len(m.ListInfomationCategory) > 0 {
		for _, e := range m.ListInfomationCategory {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListInfomationsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InfomationCategoryType != 0 {
		n += 1 + sovMobileFishing(uint64(m.InfomationCategoryType))
	}
	if m.Page != 0 {
		n += 1 + sovMobileFishing(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovMobileFishing(uint64(m.PageSize))
	}
	l = len(m.Province)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.City)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.Latitude != 0 {
		n += 9
	}
	if m.Longitude != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListUserInfomationsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovMobileFishing(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovMobileFishing(uint64(m.PageSize))
	}
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.Latitude != 0 {
		n += 9
	}
	if m.Longitude != 0 {
		n += 9
	}
	if m.ReleaseUserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ReleaseUserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListUserInfomationsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Infomation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.InfomationId != 0 {
		n += 1 + sovMobileFishing(uint64(m.InfomationId))
	}
	if m.InfomationType != 0 {
		n += 1 + sovMobileFishing(uint64(m.InfomationType))
	}
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	l = len(m.Country)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.City)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.District)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.Park)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.CreateTime != 0 {
		n += 1 + sovMobileFishing(uint64(m.CreateTime))
	}
	if m.PayType != 0 {
		n += 1 + sovMobileFishing(uint64(m.PayType))
	}
	if m.Price != 0 {
		n += 1 + sovMobileFishing(uint64(m.Price))
	}
	if len(m.ListTags) > 0 {
		for _, s := range m.ListTags {
			l = len(s)
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if len(m.ListInfomationImages) > 0 {
		for _, s := range m.ListInfomationImages {
			l = len(s)
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if len(m.ListEnvImages) > 0 {
		for _, s := range m.ListEnvImages {
			l = len(s)
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 2 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 2 + l + sovMobileFishing(uint64(l))
	}
	if m.LikeCount != 0 {
		n += 2 + sovMobileFishing(uint64(m.LikeCount))
	}
	if m.CommentCount != 0 {
		n += 2 + sovMobileFishing(uint64(m.CommentCount))
	}
	if m.CollectCount != 0 {
		n += 2 + sovMobileFishing(uint64(m.CollectCount))
	}
	if m.ReadCount != 0 {
		n += 2 + sovMobileFishing(uint64(m.ReadCount))
	}
	if m.Distance != 0 {
		n += 10
	}
	if m.InfomationCategoryType != 0 {
		n += 2 + sovMobileFishing(uint64(m.InfomationCategoryType))
	}
	if m.InfomationImageCount != 0 {
		n += 2 + sovMobileFishing(uint64(m.InfomationImageCount))
	}
	if m.IfLike {
		n += 3
	}
	if m.IfCollection {
		n += 3
	}
	if m.Latitude != 0 {
		n += 10
	}
	if m.Longitude != 0 {
		n += 10
	}
	if m.EnvImageCount != 0 {
		n += 2 + sovMobileFishing(uint64(m.EnvImageCount))
	}
	if m.IfBuy {
		n += 3
	}
	if m.IsFollow {
		n += 3
	}
	if len(m.ListBaits) > 0 {
		for _, e := range m.ListBaits {
			l = e.Size()
			n += 2 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.BaitImageCount != 0 {
		n += 2 + sovMobileFishing(uint64(m.BaitImageCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Bait) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.BaitName)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.BaitPercent != 0 {
		n += 1 + sovMobileFishing(uint64(m.BaitPercent))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListInfomationsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetInfomationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.InfomationId != 0 {
		n += 1 + sovMobileFishing(uint64(m.InfomationId))
	}
	if m.Latitude != 0 {
		n += 10
	}
	if m.Longitude != 0 {
		n += 10
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetInfomationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserInfomationLikeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.LikeId != 0 {
		n += 1 + sovMobileFishing(uint64(m.LikeId))
	}
	if m.IfLike {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserInfomationLikeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserInfomationCollectionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.CollectionId != 0 {
		n += 1 + sovMobileFishing(uint64(m.CollectionId))
	}
	if m.IfCollection {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserInfomationCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListActicleCategorysRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ActicleCategory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CategoryId != 0 {
		n += 1 + sovMobileFishing(uint64(m.CategoryId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListActicleCategorysResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetActicleConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CategoryId != 0 {
		n += 1 + sovMobileFishing(uint64(m.CategoryId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ArticleTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ThemeId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ThemeId))
	}
	if m.CategoryId != 0 {
		n += 1 + sovMobileFishing(uint64(m.CategoryId))
	}
	if m.TagId != 0 {
		n += 1 + sovMobileFishing(uint64(m.TagId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.BannerlUrl)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.UsedCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.UsedCount))
	}
	if m.ViewCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.ViewCount))
	}
	if m.CreateTime != 0 {
		n += 1 + sovMobileFishing(uint64(m.CreateTime))
	}
	l = len(m.TagName)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.ImageUrl)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetActicleConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.ListBanners) > 0 {
		for _, e := range m.ListBanners {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if len(m.ListThemes) > 0 {
		for _, e := range m.ListThemes {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListActiclesByCategoryRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CategoryId != 0 {
		n += 1 + sovMobileFishing(uint64(m.CategoryId))
	}
	if m.Page != 0 {
		n += 1 + sovMobileFishing(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovMobileFishing(uint64(m.PageSize))
	}
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Article) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ArticleId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ArticleId))
	}
	if m.CategoryId != 0 {
		n += 1 + sovMobileFishing(uint64(m.CategoryId))
	}
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.CreateTime != 0 {
		n += 1 + sovMobileFishing(uint64(m.CreateTime))
	}
	if m.LikeCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.LikeCount))
	}
	if m.CommentCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.CommentCount))
	}
	if m.CollectCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.CollectCount))
	}
	if m.ShareCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.ShareCount))
	}
	if m.ViewCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.ViewCount))
	}
	if len(m.ListTags) > 0 {
		for _, s := range m.ListTags {
			l = len(s)
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	l = len(m.ImageUrl)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 2 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 2 + l + sovMobileFishing(uint64(l))
	}
	if m.IfLike {
		n += 3
	}
	if m.IfCollection {
		n += 3
	}
	if m.ImageWidth != 0 {
		n += 2 + sovMobileFishing(uint64(m.ImageWidth))
	}
	if m.ImageHeight != 0 {
		n += 2 + sovMobileFishing(uint64(m.ImageHeight))
	}
	if len(m.ListArticleTags) > 0 {
		for _, e := range m.ListArticleTags {
			l = e.Size()
			n += 2 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListActiclesByCategoryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetArticleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.ArticleId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ArticleId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetArticleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserArticleLikeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.LikeId != 0 {
		n += 1 + sovMobileFishing(uint64(m.LikeId))
	}
	if m.IfLike {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserArticleLikeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserArticleCollectionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.CollectionId != 0 {
		n += 1 + sovMobileFishing(uint64(m.CollectionId))
	}
	if m.IfCollection {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserArticleCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetArticleThemeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ThemeId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ThemeId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetArticleThemeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ArticleTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TagId != 0 {
		n += 1 + sovMobileFishing(uint64(m.TagId))
	}
	l = len(m.TagName)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.UsedCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.UsedCount))
	}
	if m.ViewCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.ViewCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetArticleTagRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TagId != 0 {
		n += 1 + sovMobileFishing(uint64(m.TagId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetArticleTagResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListActiclesByTagRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ListTagIds) > 0 {
		l = 0
		for _, e := range m.ListTagIds {
			l += sovMobileFishing(uint64(e))
		}
		n += 1 + sovMobileFishing(uint64(l)) + l
	}
	if m.Page != 0 {
		n += 1 + sovMobileFishing(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovMobileFishing(uint64(m.PageSize))
	}
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.IfNew {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListActiclesByTagResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListUserArticlesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovMobileFishing(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovMobileFishing(uint64(m.PageSize))
	}
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.ReleaseUserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ReleaseUserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListUserArticlesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SendCommentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.CommentId != 0 {
		n += 1 + sovMobileFishing(uint64(m.CommentId))
	}
	if m.ObjectId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ObjectId))
	}
	if m.CommentType != 0 {
		n += 1 + sovMobileFishing(uint64(m.CommentType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SendCommentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserCommentLikeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.CommentId != 0 {
		n += 1 + sovMobileFishing(uint64(m.CommentId))
	}
	if m.CommentType != 0 {
		n += 1 + sovMobileFishing(uint64(m.CommentType))
	}
	if m.IfLike {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserCommentLikeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListCommentsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.CommentType != 0 {
		n += 1 + sovMobileFishing(uint64(m.CommentType))
	}
	if m.ObjectId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ObjectId))
	}
	if m.Page != 0 {
		n += 1 + sovMobileFishing(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovMobileFishing(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Comment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CommentId != 0 {
		n += 1 + sovMobileFishing(uint64(m.CommentId))
	}
	if m.CreateTime != 0 {
		n += 1 + sovMobileFishing(uint64(m.CreateTime))
	}
	if m.ObjectId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ObjectId))
	}
	if m.ReleaseUserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ReleaseUserId))
	}
	if m.LikeCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.LikeCount))
	}
	if m.RepliedCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.RepliedCount))
	}
	if m.RepliedUserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.RepliedUserId))
	}
	if m.RepliedCommentId != 0 {
		n += 1 + sovMobileFishing(uint64(m.RepliedCommentId))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.IfLike {
		n += 2
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListCommentsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckUserFollwRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.FollowUserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.FollowUserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckUserFollwResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.IfFollow {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListMessagesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.Page != 0 {
		n += 1 + sovMobileFishing(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovMobileFishing(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Message) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MessageId != 0 {
		n += 1 + sovMobileFishing(uint64(m.MessageId))
	}
	if m.CreateTime != 0 {
		n += 1 + sovMobileFishing(uint64(m.CreateTime))
	}
	if m.ReadStatus != 0 {
		n += 1 + sovMobileFishing(uint64(m.ReadStatus))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListMessagesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateInfomationOrderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.InfomationId != 0 {
		n += 1 + sovMobileFishing(uint64(m.InfomationId))
	}
	if m.PayType != 0 {
		n += 1 + sovMobileFishing(uint64(m.PayType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateInfomationOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InfomationOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != 0 {
		n += 1 + sovMobileFishing(uint64(m.OrderId))
	}
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.InfomationId != 0 {
		n += 1 + sovMobileFishing(uint64(m.InfomationId))
	}
	if m.PayType != 0 {
		n += 1 + sovMobileFishing(uint64(m.PayType))
	}
	if m.Price != 0 {
		n += 1 + sovMobileFishing(uint64(m.Price))
	}
	if m.CreateTime != 0 {
		n += 1 + sovMobileFishing(uint64(m.CreateTime))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetInfomationOrderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.InfomationId != 0 {
		n += 1 + sovMobileFishing(uint64(m.InfomationId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetInfomationOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.OrderInfo != nil {
		l = m.OrderInfo.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckInfomationOrderBuyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.InfomationId != 0 {
		n += 1 + sovMobileFishing(uint64(m.InfomationId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckInfomationOrderBuyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.IfBuy {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserMessageReadRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.MessageId != 0 {
		n += 1 + sovMobileFishing(uint64(m.MessageId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserMessageReadResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserMessageReadAllRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserMessageReadAllResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetUserMessageUnCountRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetUserMessageUnCountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.UnCount != 0 {
		n += 1 + sovMobileFishing(uint64(m.UnCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListUserInfomationOrdersRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.Page != 0 {
		n += 1 + sovMobileFishing(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovMobileFishing(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListUserInfomationOrdersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteInfomationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.InfomationId != 0 {
		n += 1 + sovMobileFishing(uint64(m.InfomationId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteInfomationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteArticleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.ArticleId != 0 {
		n += 1 + sovMobileFishing(uint64(m.ArticleId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteArticleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListFansRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.Page != 0 {
		n += 1 + sovMobileFishing(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovMobileFishing(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListFansResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PubArticle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.CategoryId != 0 {
		n += 1 + sovMobileFishing(uint64(m.CategoryId))
	}
	if m.ImageHeight != 0 {
		n += 1 + sovMobileFishing(uint64(m.ImageHeight))
	}
	if m.ImageWidth != 0 {
		n += 1 + sovMobileFishing(uint64(m.ImageWidth))
	}
	if len(m.TagNames) > 0 {
		for _, s := range m.TagNames {
			l = len(s)
			n += 1 + l + sovMobileFishing(uint64(l))
		}
	}
	if len(m.TagIds) > 0 {
		l = 0
		for _, e := range m.TagIds {
			l += sovMobileFishing(uint64(e))
		}
		n += 1 + sovMobileFishing(uint64(l)) + l
	}
	l = len(m.ImageUrl)
	if l > 0 {
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateArticleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileFishing(uint64(m.UserId))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateArticleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileFishing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMobileFishing(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMobileFishing(x uint64) (n int) {
	return sovMobileFishing(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Status) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Status: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Status: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= StatusCode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RefreshTokenRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RefreshTokenRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RefreshTokenRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RefreshTokenResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RefreshTokenResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RefreshTokenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WechatLoginRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WechatLoginRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WechatLoginRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Jscode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Jscode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EncryptedData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EncryptedData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iv", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Iv = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WechatLoginResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WechatLoginResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WechatLoginResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Jwt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Jwt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &User{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetUserRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUserRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUserRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetUserExtendRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUserExtendRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUserExtendRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserExtend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserExtend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserExtend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowCount", wireType)
			}
			m.FollowCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FollowCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FansCount", wireType)
			}
			m.FansCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FansCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnReadCount", wireType)
			}
			m.UnReadCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnReadCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationCount", wireType)
			}
			m.InfomationCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArticleCount", wireType)
			}
			m.ArticleCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ArticleCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteCount", wireType)
			}
			m.InviteCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InviteCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetUserExtendResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUserExtendResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUserExtendResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &UserExtend{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *User) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: User: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: User: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegisterTime", wireType)
			}
			m.RegisterTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RegisterTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserType", wireType)
			}
			m.UserType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserType |= UserType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PointAmount", wireType)
			}
			m.PointAmount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PointAmount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoinAmount", wireType)
			}
			m.CoinAmount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoinAmount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Motto", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Motto = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserExtend", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserExtend == nil {
				m.UserExtend = &UserExtend{}
			}
			if err := m.UserExtend.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoinTotal", wireType)
			}
			m.CoinTotal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoinTotal |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoinPayTotal", wireType)
			}
			m.CoinPayTotal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoinPayTotal |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoinRefillTotal", wireType)
			}
			m.CoinRefillTotal = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CoinRefillTotal |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &User{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListBannersRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListBannersRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListBannersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannerType", wireType)
			}
			m.BannerType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BannerType |= BannerType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Banner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Banner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Banner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewType", wireType)
			}
			m.ViewType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ViewType |= BannerViewType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExternalId", wireType)
			}
			m.ExternalId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExternalId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LinkUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThemeId", wireType)
			}
			m.ThemeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ThemeId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListBannersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListBannersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListBannersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &Banner{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserFollowRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserFollowRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserFollowRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowUserId", wireType)
			}
			m.FollowUserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FollowUserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CancelUserFollowRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CancelUserFollowRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CancelUserFollowRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowUserId", wireType)
			}
			m.FollowUserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FollowUserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CancelUserFollowResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CancelUserFollowResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CancelUserFollowResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserFollowResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserFollowResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserFollowResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListUserFollowsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListUserFollowsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListUserFollowsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListUserFollowsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListUserFollowsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListUserFollowsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &User{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserCollectionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserCollectionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserCollectionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveId", wireType)
			}
			m.ActiveId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActiveId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetInfomationConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInfomationConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInfomationConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InfomationCategory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InfomationCategory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InfomationCategory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationCategoryType", wireType)
			}
			m.InfomationCategoryType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationCategoryType |= InfomationCategoryType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetInfomationConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInfomationConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInfomationConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListBanners", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListBanners = append(m.ListBanners, &Banner{})
			if err := m.ListBanners[len(m.ListBanners)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListInfomationCategory", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListInfomationCategory = append(m.ListInfomationCategory, &InfomationCategory{})
			if err := m.ListInfomationCategory[len(m.ListInfomationCategory)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListInfomationsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListInfomationsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListInfomationsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationCategoryType", wireType)
			}
			m.InfomationCategoryType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationCategoryType |= InfomationCategoryType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Province", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Province = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.City = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Latitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Latitude = float64(math.Float64frombits(v))
		case 8:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Longitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Longitude = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListUserInfomationsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListUserInfomationsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListUserInfomationsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Latitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Latitude = float64(math.Float64frombits(v))
		case 8:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Longitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Longitude = float64(math.Float64frombits(v))
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReleaseUserId", wireType)
			}
			m.ReleaseUserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReleaseUserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListUserInfomationsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListUserInfomationsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListUserInfomationsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &Infomation{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Infomation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Infomation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Infomation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationId", wireType)
			}
			m.InfomationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationType", wireType)
			}
			m.InfomationType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationType |= InfomationType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Country = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.City = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field District", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.District = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Park", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Park = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			m.CreateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayType", wireType)
			}
			m.PayType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PayType |= PayType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListTags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListTags = append(m.ListTags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListInfomationImages", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListInfomationImages = append(m.ListInfomationImages, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListEnvImages", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListEnvImages = append(m.ListEnvImages, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeCount", wireType)
			}
			m.LikeCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LikeCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentCount", wireType)
			}
			m.CommentCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectCount", wireType)
			}
			m.CollectCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadCount", wireType)
			}
			m.ReadCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReadCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Distance", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Distance = float64(math.Float64frombits(v))
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationCategoryType", wireType)
			}
			m.InfomationCategoryType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationCategoryType |= InfomationCategoryType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationImageCount", wireType)
			}
			m.InfomationImageCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationImageCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfLike", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfLike = bool(v != 0)
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfCollection", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfCollection = bool(v != 0)
		case 27:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Latitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Latitude = float64(math.Float64frombits(v))
		case 28:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Longitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Longitude = float64(math.Float64frombits(v))
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnvImageCount", wireType)
			}
			m.EnvImageCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EnvImageCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfBuy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfBuy = bool(v != 0)
		case 31:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFollow", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFollow = bool(v != 0)
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListBaits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListBaits = append(m.ListBaits, &Bait{})
			if err := m.ListBaits[len(m.ListBaits)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 33:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaitImageCount", wireType)
			}
			m.BaitImageCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BaitImageCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Bait) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Bait: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Bait: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaitName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaitName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaitPercent", wireType)
			}
			m.BaitPercent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BaitPercent |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListInfomationsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListInfomationsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListInfomationsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &Infomation{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetInfomationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInfomationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInfomationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationId", wireType)
			}
			m.InfomationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Latitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Latitude = float64(math.Float64frombits(v))
		case 28:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Longitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Longitude = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetInfomationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInfomationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInfomationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &Infomation{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserInfomationLikeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserInfomationLikeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserInfomationLikeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeId", wireType)
			}
			m.LikeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LikeId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfLike", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfLike = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserInfomationLikeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserInfomationLikeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserInfomationLikeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserInfomationCollectionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserInfomationCollectionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserInfomationCollectionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			m.CollectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectionId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfCollection", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfCollection = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserInfomationCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserInfomationCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserInfomationCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListActicleCategorysRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListActicleCategorysRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListActicleCategorysRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ActicleCategory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ActicleCategory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ActicleCategory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryId", wireType)
			}
			m.CategoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CategoryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListActicleCategorysResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListActicleCategorysResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListActicleCategorysResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &ActicleCategory{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetActicleConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetActicleConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetActicleConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryId", wireType)
			}
			m.CategoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CategoryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ArticleTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ArticleTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ArticleTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThemeId", wireType)
			}
			m.ThemeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ThemeId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryId", wireType)
			}
			m.CategoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CategoryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagId", wireType)
			}
			m.TagId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TagId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannerlUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BannerlUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UsedCount", wireType)
			}
			m.UsedCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UsedCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewCount", wireType)
			}
			m.ViewCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ViewCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			m.CreateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetActicleConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetActicleConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetActicleConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListBanners", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListBanners = append(m.ListBanners, &Banner{})
			if err := m.ListBanners[len(m.ListBanners)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListThemes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListThemes = append(m.ListThemes, &ArticleTheme{})
			if err := m.ListThemes[len(m.ListThemes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListActiclesByCategoryRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListActiclesByCategoryRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListActiclesByCategoryRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryId", wireType)
			}
			m.CategoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CategoryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Article) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Article: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Article: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArticleId", wireType)
			}
			m.ArticleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ArticleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryId", wireType)
			}
			m.CategoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CategoryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			m.CreateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeCount", wireType)
			}
			m.LikeCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LikeCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentCount", wireType)
			}
			m.CommentCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectCount", wireType)
			}
			m.CollectCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareCount", wireType)
			}
			m.ShareCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShareCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewCount", wireType)
			}
			m.ViewCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ViewCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListTags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListTags = append(m.ListTags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfLike", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfLike = bool(v != 0)
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfCollection", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfCollection = bool(v != 0)
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageWidth", wireType)
			}
			m.ImageWidth = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ImageWidth |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageHeight", wireType)
			}
			m.ImageHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ImageHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListArticleTags", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListArticleTags = append(m.ListArticleTags, &ArticleTag{})
			if err := m.ListArticleTags[len(m.ListArticleTags)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListActiclesByCategoryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListActiclesByCategoryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListActiclesByCategoryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &Article{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetArticleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetArticleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetArticleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArticleId", wireType)
			}
			m.ArticleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ArticleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetArticleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetArticleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetArticleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &Article{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserArticleLikeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserArticleLikeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserArticleLikeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeId", wireType)
			}
			m.LikeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LikeId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfLike", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfLike = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserArticleLikeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserArticleLikeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserArticleLikeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserArticleCollectionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserArticleCollectionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserArticleCollectionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			m.CollectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectionId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfCollection", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfCollection = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserArticleCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserArticleCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserArticleCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetArticleThemeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetArticleThemeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetArticleThemeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThemeId", wireType)
			}
			m.ThemeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ThemeId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetArticleThemeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetArticleThemeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetArticleThemeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &ArticleTheme{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ArticleTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ArticleTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ArticleTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagId", wireType)
			}
			m.TagId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TagId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UsedCount", wireType)
			}
			m.UsedCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UsedCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewCount", wireType)
			}
			m.ViewCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ViewCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetArticleTagRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetArticleTagRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetArticleTagRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagId", wireType)
			}
			m.TagId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TagId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetArticleTagResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetArticleTagResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetArticleTagResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &ArticleTag{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListActiclesByTagRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListActiclesByTagRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListActiclesByTagRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMobileFishing
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ListTagIds = append(m.ListTagIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMobileFishing
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMobileFishing
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMobileFishing
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ListTagIds) == 0 {
					m.ListTagIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMobileFishing
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ListTagIds = append(m.ListTagIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ListTagIds", wireType)
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfNew", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfNew = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListActiclesByTagResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListActiclesByTagResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListActiclesByTagResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &Article{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListUserArticlesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListUserArticlesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListUserArticlesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReleaseUserId", wireType)
			}
			m.ReleaseUserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReleaseUserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListUserArticlesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListUserArticlesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListUserArticlesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &Article{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SendCommentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendCommentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendCommentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentId", wireType)
			}
			m.CommentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
			}
			m.ObjectId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObjectId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentType", wireType)
			}
			m.CommentType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentType |= CommentType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SendCommentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendCommentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendCommentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserCommentLikeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserCommentLikeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserCommentLikeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentId", wireType)
			}
			m.CommentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentType", wireType)
			}
			m.CommentType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentType |= CommentType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfLike", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfLike = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserCommentLikeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserCommentLikeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserCommentLikeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListCommentsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListCommentsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListCommentsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentType", wireType)
			}
			m.CommentType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentType |= CommentType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
			}
			m.ObjectId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObjectId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Comment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Comment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Comment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentId", wireType)
			}
			m.CommentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			m.CreateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectId", wireType)
			}
			m.ObjectId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObjectId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReleaseUserId", wireType)
			}
			m.ReleaseUserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReleaseUserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikeCount", wireType)
			}
			m.LikeCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LikeCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepliedCount", wireType)
			}
			m.RepliedCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepliedCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepliedUserId", wireType)
			}
			m.RepliedUserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepliedUserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepliedCommentId", wireType)
			}
			m.RepliedCommentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepliedCommentId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfLike", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfLike = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListCommentsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListCommentsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListCommentsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &Comment{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckUserFollwRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckUserFollwRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckUserFollwRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowUserId", wireType)
			}
			m.FollowUserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FollowUserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckUserFollwResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckUserFollwResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckUserFollwResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfFollow", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfFollow = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListMessagesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListMessagesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListMessagesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Message) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Message: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Message: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			m.MessageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			m.CreateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadStatus", wireType)
			}
			m.ReadStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReadStatus |= MessageReadStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListMessagesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListMessagesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListMessagesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &Message{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateInfomationOrderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateInfomationOrderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateInfomationOrderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationId", wireType)
			}
			m.InfomationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayType", wireType)
			}
			m.PayType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PayType |= FishingOrderPayType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateInfomationOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateInfomationOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateInfomationOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &InfomationOrder{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InfomationOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InfomationOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InfomationOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			m.OrderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrderId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationId", wireType)
			}
			m.InfomationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayType", wireType)
			}
			m.PayType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PayType |= FishingOrderPayType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			m.CreateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &Infomation{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetInfomationOrderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInfomationOrderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInfomationOrderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationId", wireType)
			}
			m.InfomationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetInfomationOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetInfomationOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetInfomationOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OrderInfo == nil {
				m.OrderInfo = &InfomationOrder{}
			}
			if err := m.OrderInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckInfomationOrderBuyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckInfomationOrderBuyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckInfomationOrderBuyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationId", wireType)
			}
			m.InfomationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckInfomationOrderBuyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckInfomationOrderBuyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckInfomationOrderBuyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IfBuy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IfBuy = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserMessageReadRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserMessageReadRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserMessageReadRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			m.MessageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserMessageReadResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserMessageReadResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserMessageReadResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserMessageReadAllRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserMessageReadAllRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserMessageReadAllRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserMessageReadAllResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserMessageReadAllResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserMessageReadAllResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetUserMessageUnCountRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUserMessageUnCountRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUserMessageUnCountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetUserMessageUnCountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUserMessageUnCountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUserMessageUnCountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnCount", wireType)
			}
			m.UnCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListUserInfomationOrdersRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListUserInfomationOrdersRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListUserInfomationOrdersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListUserInfomationOrdersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListUserInfomationOrdersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListUserInfomationOrdersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &InfomationOrder{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteInfomationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteInfomationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteInfomationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfomationId", wireType)
			}
			m.InfomationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InfomationId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteInfomationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteInfomationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteInfomationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteArticleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteArticleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteArticleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ArticleId", wireType)
			}
			m.ArticleId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ArticleId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteArticleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteArticleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteArticleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListFansRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListFansRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListFansRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListFansResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListFansResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListFansResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &User{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PubArticle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PubArticle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PubArticle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryId", wireType)
			}
			m.CategoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CategoryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageHeight", wireType)
			}
			m.ImageHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ImageHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageWidth", wireType)
			}
			m.ImageWidth = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ImageWidth |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagNames", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagNames = append(m.TagNames, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 8:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMobileFishing
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TagIds = append(m.TagIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowMobileFishing
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthMobileFishing
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthMobileFishing
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.TagIds) == 0 {
					m.TagIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowMobileFishing
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TagIds = append(m.TagIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TagIds", wireType)
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateArticleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateArticleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateArticleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &PubArticle{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateArticleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateArticleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateArticleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileFishing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileFishing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileFishing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMobileFishing(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMobileFishing
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMobileFishing
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMobileFishing
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMobileFishing
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMobileFishing
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMobileFishing        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMobileFishing          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMobileFishing = fmt.Errorf("proto: unexpected end of group")
)
