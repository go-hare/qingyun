// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/mobile/mobile-chat-gpt.proto

package mobile_chat_gpt

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type StatusCode int32

const (
	StatusCode_status_success        StatusCode = 0
	StatusCode_status_internal_error StatusCode = 1
	StatusCode_status_param_error    StatusCode = 2
)

var StatusCode_name = map[int32]string{
	0: "status_success",
	1: "status_internal_error",
	2: "status_param_error",
}

var StatusCode_value = map[string]int32{
	"status_success":        0,
	"status_internal_error": 1,
	"status_param_error":    2,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}

func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38578bdbc6d834f6, []int{0}
}

type Status struct {
	Code                 StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=mobile_chat_gpt.StatusCode" json:"code"`
	Msg                  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_38578bdbc6d834f6, []int{0}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return m.Size()
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

type Tutorial struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tutorial) Reset()         { *m = Tutorial{} }
func (m *Tutorial) String() string { return proto.CompactTextString(m) }
func (*Tutorial) ProtoMessage()    {}
func (*Tutorial) Descriptor() ([]byte, []int) {
	return fileDescriptor_38578bdbc6d834f6, []int{1}
}
func (m *Tutorial) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Tutorial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Tutorial.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Tutorial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tutorial.Merge(m, src)
}
func (m *Tutorial) XXX_Size() int {
	return m.Size()
}
func (m *Tutorial) XXX_DiscardUnknown() {
	xxx_messageInfo_Tutorial.DiscardUnknown(m)
}

var xxx_messageInfo_Tutorial proto.InternalMessageInfo

type Model struct {
	ModelId              int64       `protobuf:"varint,1,opt,name=model_id,json=modelId,proto3" json:"model_id"`
	CategoryId           int64       `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	Name                 string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Icon                 string      `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon"`
	CreateTime           int64       `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	Title                string      `protobuf:"bytes,6,opt,name=title,proto3" json:"title"`
	Desc                 string      `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc"`
	ClickNumber          int64       `protobuf:"varint,8,opt,name=click_number,json=clickNumber,proto3" json:"click_number"`
	ListTutorial         []*Tutorial `protobuf:"bytes,9,rep,name=list_tutorial,json=listTutorial,proto3" json:"list_tutorial"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Model) Reset()         { *m = Model{} }
func (m *Model) String() string { return proto.CompactTextString(m) }
func (*Model) ProtoMessage()    {}
func (*Model) Descriptor() ([]byte, []int) {
	return fileDescriptor_38578bdbc6d834f6, []int{2}
}
func (m *Model) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Model) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Model.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Model) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Model.Merge(m, src)
}
func (m *Model) XXX_Size() int {
	return m.Size()
}
func (m *Model) XXX_DiscardUnknown() {
	xxx_messageInfo_Model.DiscardUnknown(m)
}

var xxx_messageInfo_Model proto.InternalMessageInfo

type Category struct {
	CategoryId           int64    `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Icon                 string   `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon"`
	CreateTime           int64    `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	ListModel            []*Model `protobuf:"bytes,5,rep,name=list_model,json=listModel,proto3" json:"list_model"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Category) Reset()         { *m = Category{} }
func (m *Category) String() string { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()    {}
func (*Category) Descriptor() ([]byte, []int) {
	return fileDescriptor_38578bdbc6d834f6, []int{3}
}
func (m *Category) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Category) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Category.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Category) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Category.Merge(m, src)
}
func (m *Category) XXX_Size() int {
	return m.Size()
}
func (m *Category) XXX_DiscardUnknown() {
	xxx_messageInfo_Category.DiscardUnknown(m)
}

var xxx_messageInfo_Category proto.InternalMessageInfo

type ListCategoryAndModelsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCategoryAndModelsRequest) Reset()         { *m = ListCategoryAndModelsRequest{} }
func (m *ListCategoryAndModelsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCategoryAndModelsRequest) ProtoMessage()    {}
func (*ListCategoryAndModelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38578bdbc6d834f6, []int{4}
}
func (m *ListCategoryAndModelsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListCategoryAndModelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListCategoryAndModelsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListCategoryAndModelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCategoryAndModelsRequest.Merge(m, src)
}
func (m *ListCategoryAndModelsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListCategoryAndModelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCategoryAndModelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCategoryAndModelsRequest proto.InternalMessageInfo

type ListCategoryAndModelsResponse struct {
	Status               *Status     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	List                 []*Category `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListCategoryAndModelsResponse) Reset()         { *m = ListCategoryAndModelsResponse{} }
func (m *ListCategoryAndModelsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCategoryAndModelsResponse) ProtoMessage()    {}
func (*ListCategoryAndModelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38578bdbc6d834f6, []int{5}
}
func (m *ListCategoryAndModelsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListCategoryAndModelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListCategoryAndModelsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListCategoryAndModelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCategoryAndModelsResponse.Merge(m, src)
}
func (m *ListCategoryAndModelsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListCategoryAndModelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCategoryAndModelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCategoryAndModelsResponse proto.InternalMessageInfo

type QuestionGptStreamRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id"`
	ModelId              int64    `protobuf:"varint,2,opt,name=model_id,json=modelId,proto3" json:"model_id"`
	Question             string   `protobuf:"bytes,3,opt,name=question,proto3" json:"question"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuestionGptStreamRequest) Reset()         { *m = QuestionGptStreamRequest{} }
func (m *QuestionGptStreamRequest) String() string { return proto.CompactTextString(m) }
func (*QuestionGptStreamRequest) ProtoMessage()    {}
func (*QuestionGptStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_38578bdbc6d834f6, []int{6}
}
func (m *QuestionGptStreamRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuestionGptStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuestionGptStreamRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuestionGptStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuestionGptStreamRequest.Merge(m, src)
}
func (m *QuestionGptStreamRequest) XXX_Size() int {
	return m.Size()
}
func (m *QuestionGptStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuestionGptStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuestionGptStreamRequest proto.InternalMessageInfo

type QuestionGptStreamResponse struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Answer               string   `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuestionGptStreamResponse) Reset()         { *m = QuestionGptStreamResponse{} }
func (m *QuestionGptStreamResponse) String() string { return proto.CompactTextString(m) }
func (*QuestionGptStreamResponse) ProtoMessage()    {}
func (*QuestionGptStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_38578bdbc6d834f6, []int{7}
}
func (m *QuestionGptStreamResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuestionGptStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuestionGptStreamResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuestionGptStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuestionGptStreamResponse.Merge(m, src)
}
func (m *QuestionGptStreamResponse) XXX_Size() int {
	return m.Size()
}
func (m *QuestionGptStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QuestionGptStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QuestionGptStreamResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("mobile_chat_gpt.StatusCode", StatusCode_name, StatusCode_value)
	proto.RegisterType((*Status)(nil), "mobile_chat_gpt.Status")
	proto.RegisterType((*Tutorial)(nil), "mobile_chat_gpt.Tutorial")
	proto.RegisterType((*Model)(nil), "mobile_chat_gpt.Model")
	proto.RegisterType((*Category)(nil), "mobile_chat_gpt.Category")
	proto.RegisterType((*ListCategoryAndModelsRequest)(nil), "mobile_chat_gpt.ListCategoryAndModelsRequest")
	proto.RegisterType((*ListCategoryAndModelsResponse)(nil), "mobile_chat_gpt.ListCategoryAndModelsResponse")
	proto.RegisterType((*QuestionGptStreamRequest)(nil), "mobile_chat_gpt.QuestionGptStreamRequest")
	proto.RegisterType((*QuestionGptStreamResponse)(nil), "mobile_chat_gpt.QuestionGptStreamResponse")
}

func init() {
	proto.RegisterFile("proto/mobile/mobile-chat-gpt.proto", fileDescriptor_38578bdbc6d834f6)
}

var fileDescriptor_38578bdbc6d834f6 = []byte{
	// 732 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x4d, 0x4f, 0xdb, 0x4c,
	0x10, 0xc6, 0xf9, 0x22, 0x99, 0xf0, 0x42, 0x58, 0xbd, 0xf0, 0x1a, 0xde, 0x34, 0x46, 0x56, 0xa5,
	0xa6, 0x48, 0x49, 0x50, 0x38, 0x55, 0x3d, 0x35, 0xa8, 0xaa, 0x90, 0x4a, 0x25, 0x16, 0x7a, 0xe9,
	0xc5, 0x72, 0xec, 0x6d, 0xb0, 0x1a, 0x7b, 0x8d, 0x77, 0xdd, 0x8f, 0x53, 0xfb, 0x1f, 0x7a, 0xe8,
	0x5f, 0xe2, 0xd8, 0x5f, 0x60, 0x15, 0x8e, 0xbe, 0xf5, 0xd6, 0x63, 0xb5, 0xeb, 0x35, 0x09, 0x84,
	0xd0, 0xa8, 0x97, 0xec, 0xcc, 0x33, 0xcf, 0xee, 0xcc, 0x3c, 0xb3, 0x1b, 0x83, 0x19, 0x46, 0x94,
	0xd3, 0x9e, 0x4f, 0x87, 0xde, 0x98, 0xa8, 0xa5, 0xe3, 0x9c, 0xd9, 0xbc, 0x33, 0x0a, 0x79, 0x57,
	0x06, 0xd1, 0x5a, 0x06, 0x5b, 0x02, 0xb6, 0x46, 0x21, 0xdf, 0xee, 0x8c, 0x3c, 0x7e, 0x16, 0x0f,
	0xbb, 0x0e, 0xf5, 0x7b, 0x23, 0x3a, 0xa2, 0x3d, 0xc9, 0x1b, 0xc6, 0x6f, 0xa5, 0x97, 0x9d, 0x28,
	0xac, 0x6c, 0xbf, 0xf9, 0x1a, 0x2a, 0x27, 0xdc, 0xe6, 0x31, 0x43, 0x4f, 0xa0, 0xe4, 0x50, 0x97,
	0xe8, 0xda, 0x8e, 0xd6, 0x5e, 0xed, 0xff, 0xdf, 0xbd, 0x75, 0x70, 0x37, 0xa3, 0x1d, 0x50, 0x97,
	0x0c, 0xaa, 0x69, 0x62, 0x48, 0x32, 0x96, 0xbf, 0xa8, 0x01, 0x45, 0x9f, 0x8d, 0xf4, 0xc2, 0x8e,
	0xd6, 0xae, 0x61, 0x61, 0x9a, 0x7d, 0xa8, 0x9e, 0xc6, 0x9c, 0x46, 0x9e, 0x3d, 0x46, 0x08, 0x4a,
	0x81, 0xed, 0x67, 0x07, 0xd7, 0xb0, 0xb4, 0x05, 0xe6, 0x12, 0xe6, 0xa8, 0x2d, 0xd2, 0x36, 0xbf,
	0x15, 0xa1, 0x7c, 0x44, 0x5d, 0x32, 0x46, 0x8f, 0xa0, 0xea, 0x0b, 0xc3, 0xf2, 0x5c, 0xb9, 0xab,
	0x38, 0x58, 0x49, 0x13, 0xe3, 0x1a, 0xc3, 0xcb, 0xd2, 0x3a, 0x74, 0xd1, 0x1e, 0xd4, 0x1d, 0x9b,
	0x93, 0x11, 0x8d, 0x3e, 0x09, 0x6e, 0x41, 0x72, 0xd7, 0xd2, 0xc4, 0x98, 0x86, 0x31, 0xe4, 0xce,
	0xa1, 0x8b, 0x9a, 0xaa, 0x98, 0xa2, 0x48, 0x9c, 0x35, 0x22, 0x7c, 0x55, 0x56, 0x13, 0x4a, 0x9e,
	0x43, 0x03, 0xbd, 0x34, 0x89, 0x0a, 0x1f, 0xcb, 0x5f, 0x99, 0x2d, 0x22, 0x36, 0x27, 0x16, 0xf7,
	0x7c, 0xa2, 0x97, 0xa7, 0xb2, 0x4d, 0x60, 0x0c, 0x99, 0x73, 0xea, 0xf9, 0x04, 0x19, 0x50, 0xe6,
	0x1e, 0x1f, 0x13, 0xbd, 0x22, 0x0f, 0xac, 0xa5, 0x89, 0x91, 0x01, 0x38, 0x5b, 0x44, 0x42, 0xa9,
	0xc3, 0xf2, 0x24, 0xa1, 0xf0, 0x33, 0x45, 0xd0, 0x3e, 0xac, 0x38, 0x63, 0xcf, 0x79, 0x67, 0x05,
	0xb1, 0x3f, 0x24, 0x91, 0x5e, 0x95, 0x19, 0x1b, 0x69, 0x62, 0xdc, 0xc0, 0x71, 0x5d, 0x7a, 0xaf,
	0xa4, 0x83, 0x8e, 0xe1, 0x9f, 0xb1, 0xc7, 0xb8, 0xc5, 0x95, 0xfe, 0x7a, 0x6d, 0xa7, 0xd8, 0xae,
	0xf7, 0xb7, 0x66, 0x06, 0x9a, 0x0f, 0x68, 0xb0, 0x9e, 0x26, 0xc6, 0xcd, 0x3d, 0x78, 0x45, 0xb8,
	0x39, 0xc1, 0xfc, 0xa9, 0x41, 0xf5, 0x40, 0x69, 0x78, 0x5b, 0x73, 0x6d, 0x71, 0xcd, 0x0b, 0xf7,
	0x6a, 0x5e, 0x5c, 0x44, 0xf3, 0xd2, 0x9f, 0x35, 0x7f, 0x0e, 0x20, 0x7b, 0x91, 0x77, 0x44, 0x2f,
	0xcb, 0xe6, 0x37, 0x67, 0x9a, 0x97, 0x17, 0x6d, 0xb0, 0x9a, 0x26, 0xc6, 0x14, 0x1b, 0xd7, 0x84,
	0x2d, 0x43, 0x66, 0x0b, 0x9a, 0x2f, 0x3d, 0xc6, 0xf3, 0xb6, 0x9f, 0x05, 0xae, 0xc4, 0x19, 0x26,
	0xe7, 0x31, 0x61, 0xdc, 0xfc, 0x0c, 0x0f, 0xe6, 0xc4, 0x59, 0x48, 0x03, 0x46, 0x50, 0x0f, 0x2a,
	0x4c, 0x3e, 0x19, 0x29, 0x51, 0xbd, 0xff, 0xdf, 0x9c, 0x17, 0x85, 0x15, 0x0d, 0x75, 0xa0, 0x24,
	0xd2, 0xeb, 0x85, 0x39, 0xf3, 0xca, 0x53, 0x61, 0x49, 0x33, 0xbf, 0x6a, 0xa0, 0x1f, 0x8b, 0x52,
	0x3c, 0x1a, 0xbc, 0x08, 0xf9, 0x09, 0x8f, 0x88, 0xed, 0xab, 0xea, 0xd0, 0x43, 0x58, 0x8e, 0x19,
	0x89, 0x26, 0x03, 0xaa, 0xa7, 0x89, 0x91, 0x43, 0xb8, 0x22, 0x8c, 0x43, 0xf7, 0xc6, 0x3b, 0x2b,
	0xdc, 0xf7, 0xce, 0xda, 0x50, 0x3d, 0x57, 0xa9, 0xd4, 0x9c, 0x24, 0x31, 0xc7, 0xf0, 0xb5, 0x65,
	0x86, 0xb0, 0x75, 0x47, 0x51, 0x7f, 0x2b, 0x89, 0x09, 0x15, 0x3b, 0x60, 0x1f, 0x48, 0xa4, 0xee,
	0x0e, 0xa4, 0x89, 0xa1, 0x10, 0xac, 0xd6, 0xdd, 0x13, 0x80, 0xc9, 0x5f, 0x13, 0x42, 0xb0, 0x9a,
	0xed, 0xb5, 0x58, 0xec, 0x38, 0x84, 0xb1, 0xc6, 0x12, 0xda, 0x82, 0x0d, 0x85, 0x79, 0x01, 0x27,
	0x51, 0x60, 0x8f, 0x2d, 0x12, 0x45, 0x34, 0x6a, 0x68, 0x68, 0x13, 0x90, 0x0a, 0x85, 0x76, 0x64,
	0xfb, 0x0a, 0x2f, 0xf4, 0xbf, 0x14, 0xe0, 0xdf, 0x23, 0x59, 0xdb, 0xc1, 0x99, 0xcd, 0x45, 0x27,
	0x24, 0x7a, 0xef, 0x39, 0x04, 0x7d, 0x84, 0x8d, 0x3b, 0xc7, 0x8e, 0x3a, 0x33, 0xbd, 0xdc, 0x77,
	0x7d, 0xb6, 0xbb, 0x8b, 0xd2, 0x33, 0xe9, 0xcc, 0x25, 0x14, 0xc0, 0xfa, 0x8c, 0xb2, 0xe8, 0xf1,
	0xcc, 0x31, 0xf3, 0xae, 0xc4, 0xf6, 0xee, 0x22, 0xd4, 0x3c, 0xdb, 0x9e, 0x36, 0xe8, 0x5f, 0x5c,
	0xb6, 0x96, 0x7e, 0x5d, 0xb6, 0xb4, 0x8b, 0xab, 0x96, 0xf6, 0xfd, 0xaa, 0xa5, 0xfd, 0xb8, 0x6a,
	0x69, 0x6f, 0x9a, 0xd3, 0xdf, 0xa4, 0xa7, 0xb7, 0xbe, 0x49, 0xc3, 0x8a, 0x8c, 0xee, 0xff, 0x0e,
	0x00, 0x00, 0xff, 0xff, 0x29, 0x11, 0x51, 0x09, 0xba, 0x06, 0x00, 0x00,
}

func (m *Status) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Status) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Tutorial) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Tutorial) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Tutorial) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Model) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Model) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Model) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ListTutorial) > 0 {
		for iNdEx := len(m.ListTutorial) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ListTutorial[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileChatGpt(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if m.ClickNumber != 0 {
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(m.ClickNumber))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if m.CreateTime != 0 {
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(m.CreateTime))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CategoryId != 0 {
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(m.CategoryId))
		i--
		dAtA[i] = 0x10
	}
	if m.ModelId != 0 {
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(m.ModelId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Category) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Category) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Category) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ListModel) > 0 {
		for iNdEx := len(m.ListModel) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ListModel[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileChatGpt(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.CreateTime != 0 {
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(m.CreateTime))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Icon) > 0 {
		i -= len(m.Icon)
		copy(dAtA[i:], m.Icon)
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(len(m.Icon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.CategoryId != 0 {
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(m.CategoryId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListCategoryAndModelsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListCategoryAndModelsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListCategoryAndModelsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ListCategoryAndModelsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListCategoryAndModelsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListCategoryAndModelsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMobileChatGpt(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileChatGpt(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuestionGptStreamRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuestionGptStreamRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuestionGptStreamRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Question) > 0 {
		i -= len(m.Question)
		copy(dAtA[i:], m.Question)
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(len(m.Question)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ModelId != 0 {
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(m.ModelId))
		i--
		dAtA[i] = 0x10
	}
	if m.UserId != 0 {
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *QuestionGptStreamResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuestionGptStreamResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuestionGptStreamResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Answer) > 0 {
		i -= len(m.Answer)
		copy(dAtA[i:], m.Answer)
		i = encodeVarintMobileChatGpt(dAtA, i, uint64(len(m.Answer)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMobileChatGpt(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMobileChatGpt(dAtA []byte, offset int, v uint64) int {
	offset -= sovMobileChatGpt(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedStatus(r randyMobileChatGpt, easy bool) *Status {
	this := &Status{}
	this.Code = StatusCode([]int32{0, 1, 2}[r.Intn(3)])
	this.Msg = string(randStringMobileChatGpt(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileChatGpt(r, 3)
	}
	return this
}

func NewPopulatedTutorial(r randyMobileChatGpt, easy bool) *Tutorial {
	this := &Tutorial{}
	this.Name = string(randStringMobileChatGpt(r))
	this.Desc = string(randStringMobileChatGpt(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileChatGpt(r, 3)
	}
	return this
}

func NewPopulatedModel(r randyMobileChatGpt, easy bool) *Model {
	this := &Model{}
	this.ModelId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ModelId *= -1
	}
	this.CategoryId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CategoryId *= -1
	}
	this.Name = string(randStringMobileChatGpt(r))
	this.Icon = string(randStringMobileChatGpt(r))
	this.CreateTime = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CreateTime *= -1
	}
	this.Title = string(randStringMobileChatGpt(r))
	this.Desc = string(randStringMobileChatGpt(r))
	this.ClickNumber = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ClickNumber *= -1
	}
	if r.Intn(5) != 0 {
		v1 := r.Intn(5)
		this.ListTutorial = make([]*Tutorial, v1)
		for i := 0; i < v1; i++ {
			this.ListTutorial[i] = NewPopulatedTutorial(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileChatGpt(r, 10)
	}
	return this
}

func NewPopulatedCategory(r randyMobileChatGpt, easy bool) *Category {
	this := &Category{}
	this.CategoryId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CategoryId *= -1
	}
	this.Name = string(randStringMobileChatGpt(r))
	this.Icon = string(randStringMobileChatGpt(r))
	this.CreateTime = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.CreateTime *= -1
	}
	if r.Intn(5) != 0 {
		v2 := r.Intn(5)
		this.ListModel = make([]*Model, v2)
		for i := 0; i < v2; i++ {
			this.ListModel[i] = NewPopulatedModel(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileChatGpt(r, 6)
	}
	return this
}

func NewPopulatedListCategoryAndModelsRequest(r randyMobileChatGpt, easy bool) *ListCategoryAndModelsRequest {
	this := &ListCategoryAndModelsRequest{}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileChatGpt(r, 1)
	}
	return this
}

func NewPopulatedListCategoryAndModelsResponse(r randyMobileChatGpt, easy bool) *ListCategoryAndModelsResponse {
	this := &ListCategoryAndModelsResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	if r.Intn(5) != 0 {
		v3 := r.Intn(5)
		this.List = make([]*Category, v3)
		for i := 0; i < v3; i++ {
			this.List[i] = NewPopulatedCategory(r, easy)
		}
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileChatGpt(r, 3)
	}
	return this
}

func NewPopulatedQuestionGptStreamRequest(r randyMobileChatGpt, easy bool) *QuestionGptStreamRequest {
	this := &QuestionGptStreamRequest{}
	this.UserId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.UserId *= -1
	}
	this.ModelId = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.ModelId *= -1
	}
	this.Question = string(randStringMobileChatGpt(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileChatGpt(r, 4)
	}
	return this
}

func NewPopulatedQuestionGptStreamResponse(r randyMobileChatGpt, easy bool) *QuestionGptStreamResponse {
	this := &QuestionGptStreamResponse{}
	if r.Intn(5) != 0 {
		this.Status = NewPopulatedStatus(r, easy)
	}
	this.Answer = string(randStringMobileChatGpt(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedMobileChatGpt(r, 3)
	}
	return this
}

type randyMobileChatGpt interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneMobileChatGpt(r randyMobileChatGpt) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringMobileChatGpt(r randyMobileChatGpt) string {
	v4 := r.Intn(100)
	tmps := make([]rune, v4)
	for i := 0; i < v4; i++ {
		tmps[i] = randUTF8RuneMobileChatGpt(r)
	}
	return string(tmps)
}
func randUnrecognizedMobileChatGpt(r randyMobileChatGpt, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldMobileChatGpt(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldMobileChatGpt(dAtA []byte, r randyMobileChatGpt, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateMobileChatGpt(dAtA, uint64(key))
		v5 := r.Int63()
		if r.Intn(2) == 0 {
			v5 *= -1
		}
		dAtA = encodeVarintPopulateMobileChatGpt(dAtA, uint64(v5))
	case 1:
		dAtA = encodeVarintPopulateMobileChatGpt(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateMobileChatGpt(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateMobileChatGpt(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateMobileChatGpt(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateMobileChatGpt(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *Status) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovMobileChatGpt(uint64(m.Code))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Tutorial) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Model) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ModelId != 0 {
		n += 1 + sovMobileChatGpt(uint64(m.ModelId))
	}
	if m.CategoryId != 0 {
		n += 1 + sovMobileChatGpt(uint64(m.CategoryId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	if m.CreateTime != 0 {
		n += 1 + sovMobileChatGpt(uint64(m.CreateTime))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	if m.ClickNumber != 0 {
		n += 1 + sovMobileChatGpt(uint64(m.ClickNumber))
	}
	if len(m.ListTutorial) > 0 {
		for _, e := range m.ListTutorial {
			l = e.Size()
			n += 1 + l + sovMobileChatGpt(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Category) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CategoryId != 0 {
		n += 1 + sovMobileChatGpt(uint64(m.CategoryId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	l = len(m.Icon)
	if l > 0 {
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	if m.CreateTime != 0 {
		n += 1 + sovMobileChatGpt(uint64(m.CreateTime))
	}
	if len(m.ListModel) > 0 {
		for _, e := range m.ListModel {
			l = e.Size()
			n += 1 + l + sovMobileChatGpt(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListCategoryAndModelsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListCategoryAndModelsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovMobileChatGpt(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QuestionGptStreamRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovMobileChatGpt(uint64(m.UserId))
	}
	if m.ModelId != 0 {
		n += 1 + sovMobileChatGpt(uint64(m.ModelId))
	}
	l = len(m.Question)
	if l > 0 {
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *QuestionGptStreamResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	l = len(m.Answer)
	if l > 0 {
		n += 1 + l + sovMobileChatGpt(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMobileChatGpt(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMobileChatGpt(x uint64) (n int) {
	return sovMobileChatGpt(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Status) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileChatGpt
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Status: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Status: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= StatusCode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileChatGpt(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Tutorial) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileChatGpt
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Tutorial: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Tutorial: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileChatGpt(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Model) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileChatGpt
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Model: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Model: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModelId", wireType)
			}
			m.ModelId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModelId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryId", wireType)
			}
			m.CategoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CategoryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			m.CreateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClickNumber", wireType)
			}
			m.ClickNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClickNumber |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListTutorial", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListTutorial = append(m.ListTutorial, &Tutorial{})
			if err := m.ListTutorial[len(m.ListTutorial)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileChatGpt(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Category) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileChatGpt
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Category: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Category: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CategoryId", wireType)
			}
			m.CategoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CategoryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Icon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Icon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTime", wireType)
			}
			m.CreateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListModel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListModel = append(m.ListModel, &Model{})
			if err := m.ListModel[len(m.ListModel)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileChatGpt(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListCategoryAndModelsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileChatGpt
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListCategoryAndModelsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListCategoryAndModelsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMobileChatGpt(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListCategoryAndModelsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileChatGpt
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListCategoryAndModelsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListCategoryAndModelsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &Category{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileChatGpt(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuestionGptStreamRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileChatGpt
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuestionGptStreamRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuestionGptStreamRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ModelId", wireType)
			}
			m.ModelId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ModelId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Question", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Question = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileChatGpt(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuestionGptStreamResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMobileChatGpt
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuestionGptStreamResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuestionGptStreamResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &Status{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Answer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Answer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMobileChatGpt(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMobileChatGpt
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMobileChatGpt(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMobileChatGpt
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMobileChatGpt
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMobileChatGpt
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMobileChatGpt
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMobileChatGpt
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMobileChatGpt        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMobileChatGpt          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMobileChatGpt = fmt.Errorf("proto: unexpected end of group")
)
